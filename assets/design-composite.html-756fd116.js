const e=JSON.parse('{"key":"v-5d65d8bb","path":"/quality/design-mode/design-composite.html","title":"组合模式","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"一、概述","slug":"一、概述","link":"#一、概述","children":[]},{"level":2,"title":"二、结构","slug":"二、结构","link":"#二、结构","children":[]},{"level":2,"title":"三、案例实现","slug":"三、案例实现","link":"#三、案例实现","children":[]},{"level":2,"title":"四、组合模式的分类","slug":"四、组合模式的分类","link":"#四、组合模式的分类","children":[]},{"level":2,"title":"五、优点","slug":"五、优点","link":"#五、优点","children":[]},{"level":2,"title":"六、使用场景","slug":"六、使用场景","link":"#六、使用场景","children":[]}],"git":{"createdTime":1653582123000,"updatedTime":1673767263000,"contributors":[{"name":"xuliang","email":"895252461@qq.com","commits":2}]},"readingTime":{"minutes":5.99,"words":1798},"filePathRelative":"quality/design-mode/design-composite.md","localizedDate":"2022年5月27日","excerpt":"<h1> 组合模式</h1>\\n<h2> 一、概述</h2>\\n\\n<p>​\\t对于这个图片肯定会非常熟悉，上图我们可以看做是一个文件系统，对于这样的结构我们称之为树形结构。在树形结构中可以通过调用某个方法来遍历整个树，当我们找到某个叶子节点后，就可以对叶子节点进行相关的操作。可以将这颗树理解成一个大的容器，容器里面包含很多的成员对象，这些成员对象即可是容器对象也可以是叶子对象。但是由于容器对象和叶子对象在功能上面的区别，使得我们在使用的过程中必须要区分容器对象和叶子对象，但是这样就会给客户带来不必要的麻烦，作为客户而已，它始终希望能够一致的对待容器对象和叶子对象。</p>\\n<p><strong>定义：</strong></p>"}');export{e as data};
