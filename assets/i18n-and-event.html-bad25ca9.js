const n=JSON.parse('{"key":"v-aa3fbfe6","path":"/spring/spring-framework/spring-starting/i18n-and-event.html","title":"Spring 国际化与事件处理","lang":"zh-CN","frontmatter":{},"headers":[{"level":3,"title":"7. 国际化: initMessageSource()","slug":"_7-国际化-initmessagesource","link":"#_7-国际化-initmessagesource","children":[]},{"level":3,"title":"8. 初始化事件广播器：initApplicationEventMulticaster()","slug":"_8-初始化事件广播器-initapplicationeventmulticaster","link":"#_8-初始化事件广播器-initapplicationeventmulticaster","children":[]},{"level":3,"title":"9. 扩展点：onRefresh ()","slug":"_9-扩展点-onrefresh","link":"#_9-扩展点-onrefresh","children":[]},{"level":3,"title":"10. 注册事件监听器：registerListeners ()","slug":"_10-注册事件监听器-registerlisteners","link":"#_10-注册事件监听器-registerlisteners","children":[]}],"git":{"createdTime":1697974777000,"updatedTime":1697974777000,"contributors":[{"name":"xuliang","email":"895252461@qq.com","commits":1}]},"readingTime":{"minutes":2.59,"words":777},"filePathRelative":"spring/spring-framework/spring-starting/i18n-and-event.md","localizedDate":"2023年10月22日","excerpt":"<h1> Spring 国际化与事件处理</h1>\\n<p></p>\\n<p>接上文，我们继续分析 spring 的启动流程。</p>\\n<h3> 7. 国际化: <code>initMessageSource()</code></h3>\\n<p>这个方法是用来初始化 <code>MessageSource</code> 的，内容如下：</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">abstract</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">AbstractApplicationContext</span> <span class=\\"token keyword\\">extends</span> <span class=\\"token class-name\\">DefaultResourceLoader</span>\\n        <span class=\\"token keyword\\">implements</span> <span class=\\"token class-name\\">ConfigurableApplicationContext</span> <span class=\\"token punctuation\\">{</span>\\n\\n    <span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span>\\n\\n    <span class=\\"token doc-comment comment\\">/**\\n     * 初始化 MessageSource\\n     */</span>\\n    <span class=\\"token keyword\\">protected</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">initMessageSource</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">ConfigurableListableBeanFactory</span> beanFactory <span class=\\"token operator\\">=</span> <span class=\\"token function\\">getBeanFactory</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token comment\\">// 如果beanFactory中存在MessageSource，设置其 ParentMessageSource</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>beanFactory<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">containsLocalBean</span><span class=\\"token punctuation\\">(</span><span class=\\"token constant\\">MESSAGE_SOURCE_BEAN_NAME</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>messageSource <span class=\\"token operator\\">=</span> beanFactory<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getBean</span><span class=\\"token punctuation\\">(</span>\\n                    <span class=\\"token constant\\">MESSAGE_SOURCE_BEAN_NAME</span><span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">MessageSource</span><span class=\\"token punctuation\\">.</span><span class=\\"token keyword\\">class</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>parent <span class=\\"token operator\\">!=</span> <span class=\\"token keyword\\">null</span> <span class=\\"token operator\\">&amp;&amp;</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>messageSource <span class=\\"token keyword\\">instanceof</span> <span class=\\"token class-name\\">HierarchicalMessageSource</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                <span class=\\"token class-name\\">HierarchicalMessageSource</span> hms <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">HierarchicalMessageSource</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>messageSource<span class=\\"token punctuation\\">;</span>\\n                <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>hms<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getParentMessageSource</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">==</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                    <span class=\\"token comment\\">// 设置ParentMessageSource</span>\\n                    hms<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setParentMessageSource</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">getInternalParentMessageSource</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                <span class=\\"token punctuation\\">}</span>\\n            <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token comment\\">// 如果beanFactory中不存在MessageSource，就 创建-设置-注册</span>\\n        <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token class-name\\">DelegatingMessageSource</span> dms <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">DelegatingMessageSource</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            dms<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setParentMessageSource</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">getInternalParentMessageSource</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>messageSource <span class=\\"token operator\\">=</span> dms<span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token comment\\">// 设置ParentMessageSource</span>\\n            beanFactory<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">registerSingleton</span><span class=\\"token punctuation\\">(</span><span class=\\"token constant\\">MESSAGE_SOURCE_BEAN_NAME</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>messageSource<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token doc-comment comment\\">/**\\n     * 返回父容器的 messageSource\\n     */</span>\\n    <span class=\\"token annotation punctuation\\">@Nullable</span>\\n    <span class=\\"token keyword\\">protected</span> <span class=\\"token class-name\\">MessageSource</span> <span class=\\"token function\\">getInternalParentMessageSource</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">(</span><span class=\\"token function\\">getParent</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">instanceof</span> <span class=\\"token class-name\\">AbstractApplicationContext</span> <span class=\\"token operator\\">?</span>\\n                <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">AbstractApplicationContext</span><span class=\\"token punctuation\\">)</span> <span class=\\"token function\\">getParent</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span>messageSource <span class=\\"token operator\\">:</span> <span class=\\"token function\\">getParent</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{n as data};
