const n=JSON.parse('{"key":"v-243f6ff1","path":"/spring/spring-framework/spring-starting/starting-finished.html","title":"Spring 启动完成处理","lang":"zh-CN","frontmatter":{},"headers":[{"level":3,"title":"12. 完成启动操作: finishRefresh()","slug":"_12-完成启动操作-finishrefresh","link":"#_12-完成启动操作-finishrefresh","children":[]},{"level":3,"title":"13. 清除缓存: resetCommonCaches()","slug":"_13-清除缓存-resetcommoncaches","link":"#_13-清除缓存-resetcommoncaches","children":[]}],"git":{"createdTime":1697974777000,"updatedTime":1697974777000,"contributors":[{"name":"xuliang","email":"895252461@qq.com","commits":1}]},"readingTime":{"minutes":2.44,"words":733},"filePathRelative":"spring/spring-framework/spring-starting/starting-finished.md","localizedDate":"2023年10月22日","excerpt":"<h1> Spring 启动完成处理</h1>\\n<p></p>\\n<p>接上文，继续分析 spring 的启动流程。</p>\\n<h3> 12. 完成启动操作: <code>finishRefresh()</code></h3>\\n<p><code>AbstractApplicationContext#finishRefresh</code> 方法如下：</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">protected</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">finishRefresh</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 看名字就知道了，清理初始化过程中一系列操作使用到的资源缓存</span>\\n    <span class=\\"token function\\">clearResourceCaches</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">// 初始化LifecycleProcessor</span>\\n    <span class=\\"token function\\">initLifecycleProcessor</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">// 这个方法的内部实现是启动所有实现了Lifecycle接口的bean</span>\\n    <span class=\\"token function\\">getLifecycleProcessor</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">onRefresh</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">// 发布ContextRefreshedEvent事件</span>\\n    <span class=\\"token function\\">publishEvent</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">ContextRefreshedEvent</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">// 检查spring.liveBeansView.mbeanDomain是否存在，有就会创建一个MBeanServer</span>\\n    <span class=\\"token class-name\\">LiveBeansView</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">registerApplicationContext</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{n as data};
