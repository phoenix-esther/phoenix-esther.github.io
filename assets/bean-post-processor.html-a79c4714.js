const e=JSON.parse('{"key":"v-43460fe4","path":"/spring/spring-framework/spring-starting/bean-post-processor.html","title":"Spring BeanPostProcessor","lang":"zh-CN","frontmatter":{},"headers":[{"level":3,"title":"6. 注册 BeanPostProcessor: registerBeanPostProcessors(beanFactory)","slug":"_6-注册-beanpostprocessor-registerbeanpostprocessors-beanfactory","link":"#_6-注册-beanpostprocessor-registerbeanpostprocessors-beanfactory","children":[]}],"git":{"createdTime":1697974777000,"updatedTime":1697974777000,"contributors":[{"name":"xuliang","email":"895252461@qq.com","commits":1}]},"readingTime":{"minutes":2.57,"words":770},"filePathRelative":"spring/spring-framework/spring-starting/bean-post-processor.md","localizedDate":"2023年10月22日","excerpt":"<h1> Spring BeanPostProcessor</h1>\\n<p></p>\\n<p>接上文，我们继续分析。</p>\\n<h3> 6. 注册 <code>BeanPostProcessor</code>: <code>registerBeanPostProcessors(beanFactory)</code></h3>\\n<p>在正式分析前，需要明确两个概念：</p>\\n<ul>\\n<li><code>BeanFactoryPostProcessor</code>，被称为 <code>BeanFactory</code> 的后置处理器，可以对 <code>BeanFactory</code> 进行一些操作；</li>\\n<li><code>BeanPostProcessor</code>，被称为 <code>Bean</code> 的后置处理器，可以对 <code>Bean</code> 进行一些操作。</li>\\n</ul>"}');export{e as data};
