const e=JSON.parse('{"key":"v-0080010e","path":"/spring/spring-bean-post-processor/BeanPostProcessor-base.html","title":"后置处理器","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"BeanFactoryPostProcessor","slug":"beanfactorypostprocessor","link":"#beanfactorypostprocessor","children":[{"level":3,"title":"BeanFactoryPostProcessor","slug":"beanfactorypostprocessor-1","link":"#beanfactorypostprocessor-1","children":[]},{"level":3,"title":"BeanDefinitionRegistryPostProcessor","slug":"beandefinitionregistrypostprocessor","link":"#beandefinitionregistrypostprocessor","children":[]},{"level":3,"title":"ConfigurationClassPostProcessor","slug":"configurationclasspostprocessor","link":"#configurationclasspostprocessor","children":[]},{"level":3,"title":"CustomAutowireConfigurer","slug":"customautowireconfigurer","link":"#customautowireconfigurer","children":[]},{"level":3,"title":"EventListenerMethodProcessor","slug":"eventlistenermethodprocessor","link":"#eventlistenermethodprocessor","children":[]},{"level":3,"title":"后置处理器的调用入口","slug":"后置处理器的调用入口","link":"#后置处理器的调用入口","children":[]}]},{"level":2,"title":"BeanPostProcessor","slug":"beanpostprocessor","link":"#beanpostprocessor","children":[]}],"git":{"createdTime":1654345200000,"updatedTime":1654345200000,"contributors":[{"name":"xuliang","email":"895252461@qq.com","commits":1}]},"readingTime":{"minutes":5.45,"words":1634},"localizedDate":"2022年6月4日","filePathRelative":"spring/spring-bean-post-processor/BeanPostProcessor-base.md","excerpt":"<h1> 后置处理器</h1>\\n<p>spring的后置处理器主要分为两类，一类是BeanFactoryPostProcessor，这个用来处理BeanDefinition信息，另一类是BeanPostProcessor，这个用来处理Bean实例的。这篇文章主要来介绍一下后置处理器的类定义和继承体系。</p>\\n<h2> BeanFactoryPostProcessor</h2>\\n<h3> BeanFactoryPostProcessor</h3>\\n<p>这个是<code>BeanFactoryPostProcessor</code>类定义信息，里面只有一个接口，它的调用时机是在<code>BeanDefinition</code>加载完成之后，进行Bean实例化之前。</p>"}');export{e as data};
