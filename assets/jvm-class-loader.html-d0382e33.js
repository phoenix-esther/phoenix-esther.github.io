const l=JSON.parse('{"key":"v-a0eb0a80","path":"/java/java-jvm/jvm-class-loader.html","title":"JVM 类加载机制","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"一、类的加载时机","slug":"一、类的加载时机","link":"#一、类的加载时机","children":[]},{"level":2,"title":"二、类加载机制的层次结构","slug":"二、类加载机制的层次结构","link":"#二、类加载机制的层次结构","children":[{"level":3,"title":"2.1 加载","slug":"_2-1-加载","link":"#_2-1-加载","children":[]},{"level":3,"title":"2.2 验证","slug":"_2-2-验证","link":"#_2-2-验证","children":[]},{"level":3,"title":"2.3 准备","slug":"_2-3-准备","link":"#_2-3-准备","children":[]},{"level":3,"title":"2.4 解析","slug":"_2-4-解析","link":"#_2-4-解析","children":[]},{"level":3,"title":"2.5 初始化","slug":"_2-5-初始化","link":"#_2-5-初始化","children":[]},{"level":3,"title":"2.6 使用","slug":"_2-6-使用","link":"#_2-6-使用","children":[]},{"level":3,"title":"2.7 卸载","slug":"_2-7-卸载","link":"#_2-7-卸载","children":[]}]},{"level":2,"title":"三、类加载器","slug":"三、类加载器","link":"#三、类加载器","children":[{"level":3,"title":"3.1 类加载器简介","slug":"_3-1-类加载器简介","link":"#_3-1-类加载器简介","children":[]},{"level":3,"title":"3.2 双亲委派模型","slug":"_3-2-双亲委派模型","link":"#_3-2-双亲委派模型","children":[]}]},{"level":2,"title":"四、类加载器间的关系","slug":"四、类加载器间的关系","link":"#四、类加载器间的关系","children":[]},{"level":2,"title":"五、类与类加载器","slug":"五、类与类加载器","link":"#五、类与类加载器","children":[{"level":3,"title":"5.1 类与类加载器","slug":"_5-1-类与类加载器","link":"#_5-1-类与类加载器","children":[]},{"level":3,"title":"5.2 显示加载与隐式加载","slug":"_5-2-显示加载与隐式加载","link":"#_5-2-显示加载与隐式加载","children":[]}]},{"level":2,"title":"六、编写自己的类加载器","slug":"六、编写自己的类加载器","link":"#六、编写自己的类加载器","children":[{"level":3,"title":"6.1 自定义File类加载器","slug":"_6-1-自定义file类加载器","link":"#_6-1-自定义file类加载器","children":[]},{"level":3,"title":"6.2 自定义网络类加载器","slug":"_6-2-自定义网络类加载器","link":"#_6-2-自定义网络类加载器","children":[]},{"level":3,"title":"6.3 热部署类加载器","slug":"_6-3-热部署类加载器","link":"#_6-3-热部署类加载器","children":[]}]},{"level":2,"title":"七、双亲委派模型的破坏者","slug":"七、双亲委派模型的破坏者","link":"#七、双亲委派模型的破坏者","children":[]}],"git":{"createdTime":1696594256000,"updatedTime":1701868690000,"contributors":[{"name":"诗人都藏在水底","email":"895252461@qq.com","commits":3},{"name":"xuliang","email":"895252461@qq.com","commits":1}]},"readingTime":{"minutes":32.73,"words":9820},"filePathRelative":"java/java-jvm/jvm-class-loader.md","localizedDate":"2023年10月6日","excerpt":"<h1> JVM 类加载机制</h1>\\n<h2> 一、类的加载时机</h2>\\n<p>略</p>\\n<h2> 二、类加载机制的层次结构</h2>\\n<p>每个编写的\\".java\\"拓展名类文件都存储着需要执行的程序逻辑，这些\\".java\\"文件经过Java编译器编译成拓展名为\\".class\\"的文件，\\".class\\"文件中保存着Java代码经转换后的虚拟机指令，当需要使用某个类时，虚拟机将会加载它的\\".class\\"文件，并创建对应的class对象，将class文件加载到虚拟机的内存，这个过程称为类加载，这里我们需要了解一下类加载的过程，如下：</p>\\n<p></p>\\n<h3> 2.1 加载</h3>\\n<p>在加载阶段，Java虚拟机需要完成以下三件事情：</p>"}');export{l as data};
