const e=JSON.parse('{"key":"v-771652b0","path":"/java/java-io/java-nio-base-3.html","title":"NIO 基础 - Reactor 模型原理","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"单Reactor单线程/进程","slug":"单reactor单线程-进程","link":"#单reactor单线程-进程","children":[]},{"level":2,"title":"单Reactor多线程/进程","slug":"单reactor多线程-进程","link":"#单reactor多线程-进程","children":[]},{"level":2,"title":"多Reactor多线程/进程","slug":"多reactor多线程-进程","link":"#多reactor多线程-进程","children":[]}],"git":{"createdTime":1716801999000,"updatedTime":1716801999000,"contributors":[{"name":"诗人都藏在水底","email":"895252461@qq.com","commits":1}]},"readingTime":{"minutes":8.43,"words":2529},"filePathRelative":"java/java-io/java-nio-base-3.md","localizedDate":"2024年5月27日","excerpt":"<h1> NIO 基础 - Reactor 模型原理</h1>\\n<p>大家好，我是大明哥，我又来了。</p>\\n<p></p>\\n<h1> 为什么是 Reactor</h1>\\n<p>一般所有的网络服务，一般分为如下几个步骤：</p>\\n<ul>\\n<li>读请求（read request）</li>\\n<li>读解析（read decode）</li>\\n<li>处理程序（process service）</li>\\n<li>应答编码 （encode reply）</li>\\n<li>发送应答（send reply）</li>\\n</ul>\\n<p>接下来，大明哥就来分析解决这个问题的最佳实践。</p>\\n<p><strong>单线程模式</strong></p>"}');export{e as data};
