const l=JSON.parse('{"key":"v-5ea7c5b4","path":"/quality/design-mode/design-proxy.html","title":"代理模式","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"一、模式简介","slug":"一、模式简介","link":"#一、模式简介","children":[]},{"level":2,"title":"二、静态代理","slug":"二、静态代理","link":"#二、静态代理","children":[{"level":3,"title":"静态代理的缺点","slug":"静态代理的缺点","link":"#静态代理的缺点","children":[]},{"level":3,"title":"如何改进？","slug":"如何改进","link":"#如何改进","children":[]}]},{"level":2,"title":"三、常见的字节码操作类库","slug":"三、常见的字节码操作类库","link":"#三、常见的字节码操作类库","children":[{"level":3,"title":"实现动态代理的思考方向","slug":"实现动态代理的思考方向","link":"#实现动态代理的思考方向","children":[]}]},{"level":2,"title":"四、JDK动态代理","slug":"四、jdk动态代理","link":"#四、jdk动态代理","children":[]},{"level":2,"title":"五、CGLIB动态代理","slug":"五、cglib动态代理","link":"#五、cglib动态代理","children":[{"level":3,"title":"JDK动态代理与CGLIB动态代理对比","slug":"jdk动态代理与cglib动态代理对比","link":"#jdk动态代理与cglib动态代理对比","children":[]}]},{"level":2,"title":"六、面试题","slug":"六、面试题","link":"#六、面试题","children":[]},{"level":2,"title":"1、概述","slug":"_1、概述","link":"#_1、概述","children":[]},{"level":2,"title":"2、结构","slug":"_2、结构","link":"#_2、结构","children":[]},{"level":2,"title":"3、静态代理","slug":"_3、静态代理","link":"#_3、静态代理","children":[]},{"level":2,"title":"4、JDK动态代理","slug":"_4、jdk动态代理","link":"#_4、jdk动态代理","children":[]},{"level":2,"title":"5、CGLIB动态代理","slug":"_5、cglib动态代理","link":"#_5、cglib动态代理","children":[]},{"level":2,"title":"6、三种代理的对比","slug":"_6、三种代理的对比","link":"#_6、三种代理的对比","children":[]},{"level":2,"title":"7、优缺点","slug":"_7、优缺点","link":"#_7、优缺点","children":[]},{"level":2,"title":"8、使用场景","slug":"_8、使用场景","link":"#_8、使用场景","children":[]}],"git":{"createdTime":1652840208000,"updatedTime":1673767263000,"contributors":[{"name":"xuliang","email":"895252461@qq.com","commits":3}]},"readingTime":{"minutes":26.64,"words":7991},"filePathRelative":"quality/design-mode/design-proxy.md","localizedDate":"2022年5月18日","excerpt":"<h1> 代理模式</h1>\\n<p>动态代理在Java中有着广泛的应用，比如Spring AOP、Hibernate数据查询、测试框架的后端mock、RPC远程调用、Java注解对象获取、日志、用户鉴权、全局性异常处理、性能监控，甚至事务处理等。</p>\\n<p>本文主要介绍Java中两种常见的动态代理方式：JDK原生动态代理和CGLIB动态代理。</p>\\n<h2> 一、模式简介</h2>\\n<p>在正式学习动态代理之前，先来学习一下设计模式中的代理模式</p>\\n<p><strong>代理模式</strong>：给某一个对象提供一个代理，并由代理对象来控制对真实对象的访问。代理模式是一种结构型设计模式。</p>"}');export{l as data};
