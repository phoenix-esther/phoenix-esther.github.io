const l=JSON.parse('{"key":"v-19ecc83a","path":"/java/java-io/java-io-base.html","title":"Java IO 前置知识","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"基本概念","slug":"基本概念","link":"#基本概念","children":[{"level":3,"title":"同步与异步","slug":"同步与异步","link":"#同步与异步","children":[]},{"level":3,"title":"阻塞与非阻塞","slug":"阻塞与非阻塞","link":"#阻塞与非阻塞","children":[]},{"level":3,"title":"同步&异步、阻塞&非阻塞","slug":"同步-异步、阻塞-非阻塞","link":"#同步-异步、阻塞-非阻塞","children":[]},{"level":3,"title":"什么是IO","slug":"什么是io","link":"#什么是io","children":[]},{"level":3,"title":"用户空间&内核空间","slug":"用户空间-内核空间","link":"#用户空间-内核空间","children":[]},{"level":3,"title":"用户态和内核态进程切换","slug":"用户态和内核态进程切换","link":"#用户态和内核态进程切换","children":[]}]},{"level":2,"title":"UNIX的I/O模型","slug":"unix的i-o模型","link":"#unix的i-o模型","children":[{"level":3,"title":"阻塞IO模型","slug":"阻塞io模型","link":"#阻塞io模型","children":[]},{"level":3,"title":"非阻塞 IO模型","slug":"非阻塞-io模型","link":"#非阻塞-io模型","children":[]},{"level":3,"title":"I/O 多路复用模型","slug":"i-o-多路复用模型","link":"#i-o-多路复用模型","children":[]},{"level":3,"title":"信号驱动 I/O模型","slug":"信号驱动-i-o模型","link":"#信号驱动-i-o模型","children":[]},{"level":3,"title":"异步IO模型","slug":"异步io模型","link":"#异步io模型","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]}]}],"git":{"createdTime":1659075927000,"updatedTime":1659075927000,"contributors":[{"name":"诗人都藏在水底","email":"895252461@qq.com","commits":1}]},"readingTime":{"minutes":16.13,"words":4838},"filePathRelative":"java/java-io/java-io-base.md","localizedDate":"2022年7月29日","excerpt":"<h1> Java IO 前置知识</h1>\\n<h2> 基本概念</h2>\\n<h3> 同步与异步</h3>\\n<p>什么是同步与异步呢？百度百科是这样定义的：</p>\\n<blockquote>\\n<p>同步指两个或两个以上随时间变化的量在变化过程中保持一定的相对关系。异步与同步相对（这解释让我无言相对）</p>\\n</blockquote>\\n<p>所以，我们需要明确的是**<code>同步与异步针对的是两个或者两个以上的事物</code>**。</p>\\n<p>对于同步而言，一个任务（调用者）的完成需要依赖另一个人任务（被调用者）的完成，只有等待被依赖的任务完成，依赖的任务才会继续进行，两者步调保持一致。</p>"}');export{l as data};
