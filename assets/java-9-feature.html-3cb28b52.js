const e=JSON.parse('{"key":"v-e953661c","path":"/java/java-feature/java-9-feature.html","title":"Java 9 新特性总结","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"Java 9 新特性—概述","slug":"java-9-新特性—概述","link":"#java-9-新特性—概述","children":[{"level":3,"title":"JEP 261: 模块系统","slug":"jep-261-模块系统","link":"#jep-261-模块系统","children":[]},{"level":3,"title":"JEP 269: 集合工厂方法","slug":"jep-269-集合工厂方法","link":"#jep-269-集合工厂方法","children":[]},{"level":3,"title":"JEP 222：Jshell","slug":"jep-222-jshell","link":"#jep-222-jshell","children":[]},{"level":3,"title":"JEP 213：接口支持私有方法","slug":"jep-213-接口支持私有方法","link":"#jep-213-接口支持私有方法","children":[]},{"level":3,"title":"Stream API 增强","slug":"stream-api-增强","link":"#stream-api-增强","children":[]},{"level":3,"title":"Optional 的增强","slug":"optional-的增强","link":"#optional-的增强","children":[]},{"level":3,"title":"改进 try-with-resources","slug":"改进-try-with-resources","link":"#改进-try-with-resources","children":[]},{"level":3,"title":"JEP 102：Process API","slug":"jep-102-process-api","link":"#jep-102-process-api","children":[]},{"level":3,"title":"JEP 264：平台日志 API 和 服务","slug":"jep-264-平台日志-api-和-服务","link":"#jep-264-平台日志-api-和-服务","children":[]},{"level":3,"title":"JEP 266: 反应式流（Reactive Streams）","slug":"jep-266-反应式流-reactive-streams","link":"#jep-266-反应式流-reactive-streams","children":[]},{"level":3,"title":"JEP 224: HTML5 Javadoc","slug":"jep-224-html5-javadoc","link":"#jep-224-html5-javadoc","children":[]},{"level":3,"title":"JEP 238: 多版本兼容 JAR 文件","slug":"jep-238-多版本兼容-jar-文件","link":"#jep-238-多版本兼容-jar-文件","children":[]},{"level":3,"title":"JEP 277：改进的弃用注解 @Deprecated","slug":"jep-277-改进的弃用注解-deprecated","link":"#jep-277-改进的弃用注解-deprecated","children":[]},{"level":3,"title":"JEP213：改进钻石操作符(Diamond Operator)","slug":"jep213-改进钻石操作符-diamond-operator","link":"#jep213-改进钻石操作符-diamond-operator","children":[]},{"level":3,"title":"增强 CompletableFuture","slug":"增强-completablefuture","link":"#增强-completablefuture","children":[]}]},{"level":2,"title":"Java 9 新特性—模块化","slug":"java-9-新特性—模块化","link":"#java-9-新特性—模块化","children":[{"level":3,"title":"什么是模块化","slug":"什么是模块化","link":"#什么是模块化","children":[]},{"level":3,"title":"为什么需要模块化","slug":"为什么需要模块化","link":"#为什么需要模块化","children":[]},{"level":3,"title":"怎么用模块化","slug":"怎么用模块化","link":"#怎么用模块化","children":[]}]},{"level":2,"title":"Java 9 新特性—REPL 工具：JSheel 命令","slug":"java-9-新特性—repl-工具-jsheel-命令","link":"#java-9-新特性—repl-工具-jsheel-命令","children":[{"level":3,"title":"什么是 JShell","slug":"什么是-jshell","link":"#什么是-jshell","children":[]},{"level":3,"title":"为什么需要使用 JShell","slug":"为什么需要使用-jshell","link":"#为什么需要使用-jshell","children":[]},{"level":3,"title":"使用 JShell","slug":"使用-jshell","link":"#使用-jshell","children":[]},{"level":3,"title":"JShell 的主要命令","slug":"jshell-的主要命令","link":"#jshell-的主要命令","children":[]}]},{"level":2,"title":"Java 9 新特性—接口支持私有方法","slug":"java-9-新特性—接口支持私有方法","link":"#java-9-新特性—接口支持私有方法","children":[]},{"level":2,"title":"Java 9 新特性—String 底层存储结构变更","slug":"java-9-新特性—string-底层存储结构变更","link":"#java-9-新特性—string-底层存储结构变更","children":[]},{"level":2,"title":"Java 9 新特性—Optional 的增强","slug":"java-9-新特性—optional-的增强","link":"#java-9-新特性—optional-的增强","children":[{"level":3,"title":"or()","slug":"or","link":"#or","children":[]},{"level":3,"title":"ifPresentOrElse()","slug":"ifpresentorelse","link":"#ifpresentorelse","children":[]},{"level":3,"title":"stream()","slug":"stream","link":"#stream","children":[]}]},{"level":2,"title":"Java 9 新特性—try-with-resources的升级","slug":"java-9-新特性—try-with-resources的升级","link":"#java-9-新特性—try-with-resources的升级","children":[{"level":3,"title":"Java 7 之前，资源需要手动关闭","slug":"java-7-之前-资源需要手动关闭","link":"#java-7-之前-资源需要手动关闭","children":[]},{"level":3,"title":"Java 7 中的 try-with-resources","slug":"java-7-中的-try-with-resources","link":"#java-7-中的-try-with-resources","children":[]},{"level":3,"title":"Java 9 对 try-with-resources 的改进","slug":"java-9-对-try-with-resources-的改进","link":"#java-9-对-try-with-resources-的改进","children":[]}]},{"level":2,"title":"Java 9 新特性—Stream API的增强","slug":"java-9-新特性—stream-api的增强","link":"#java-9-新特性—stream-api的增强","children":[{"level":3,"title":"新增 ofNullable()","slug":"新增-ofnullable","link":"#新增-ofnullable","children":[]},{"level":3,"title":"重载 iterate()","slug":"重载-iterate","link":"#重载-iterate","children":[]},{"level":3,"title":"新增 dropWhile() 和 takeWhile()","slug":"新增-dropwhile-和-takewhile","link":"#新增-dropwhile-和-takewhile","children":[]}]},{"level":2,"title":"Java 9 新特性—新增只读集合和工厂方法","slug":"java-9-新特性—新增只读集合和工厂方法","link":"#java-9-新特性—新增只读集合和工厂方法","children":[{"level":3,"title":"Java 8 创建不可变集合","slug":"java-8-创建不可变集合","link":"#java-8-创建不可变集合","children":[]},{"level":3,"title":"Java 9 创建不可变集合","slug":"java-9-创建不可变集合","link":"#java-9-创建不可变集合","children":[]}]},{"level":2,"title":"Java 9 新特性—改进CompletableFuture","slug":"java-9-新特性—改进completablefuture","link":"#java-9-新特性—改进completablefuture","children":[{"level":3,"title":"新的工厂方法","slug":"新的工厂方法","link":"#新的工厂方法","children":[]},{"level":3,"title":"支持超时和延迟执行","slug":"支持超时和延迟执行","link":"#支持超时和延迟执行","children":[]},{"level":3,"title":"支持子类化","slug":"支持子类化","link":"#支持子类化","children":[]}]}],"git":{"createdTime":1716620422000,"updatedTime":1716801999000,"contributors":[{"name":"诗人都藏在水底","email":"895252461@qq.com","commits":2}]},"readingTime":{"minutes":48.45,"words":14534},"filePathRelative":"java/java-feature/java-9-feature.md","localizedDate":"2024年5月25日","excerpt":"<h1> Java 9 新特性总结</h1>\\n<h2> Java 9 新特性—概述</h2>\\n<blockquote>\\n<p>Java 9 发布于 2017 年 9 月 22 日。</p>\\n</blockquote>\\n<p></p>\\n<h3> <strong>JEP 261: 模块系统</strong></h3>\\n<p>在传统的 Java 应用中，类路径的机制限制了封装性。即使类被标记为 <code>package-private</code>，也可以被同一个类路径中的其他任意代码访问。而且随着应用程序规模的增长，类路径依赖变得越来越复杂。</p>\\n<p>Java 为了能够改进大型应用程序和库的封装性、可维护性和性能，在 Java 9 版本引入模块系统。模块系统是 Java 平台架构的一次重大变革，它旨在解决长期以来 Java 应用所面临的一些结构性问题，特别是在大型系统和微服务架构中。</p>"}');export{e as data};
