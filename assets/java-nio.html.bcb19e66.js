import{_ as n,o as s,c as a,a as t}from"./app.02d01547.js";var p="/assets/image-20200412210552466.a3dadc82.png",e="/assets/image-20200412211315027.defdaf18.png",c="/assets/image-20200412213413264.4006365e.png",o="/assets/image-20200412213447082.2a899960.png",l="/assets/image-20200412222830157.262eda6a.png";const i={},u=t('<h1 id="nio" tabindex="-1"><a class="header-anchor" href="#nio" aria-hidden="true">#</a> NIO</h1><h4 id="java-nio-\u7B80\u4ECB" tabindex="-1"><a class="header-anchor" href="#java-nio-\u7B80\u4ECB" aria-hidden="true">#</a> Java NIO \u7B80\u4ECB</h4><p>\u200B Java NIO\uFF08New IO\uFF09\u662F\u4ECEJava 1.4\u7248\u672C\u5F00\u59CB\u5F15\u5165\u7684\u4E00\u4E2A\u65B0\u7684IO API\uFF0C\u53EF\u4EE5\u66FF\u4EE3\u6807\u51C6\u7684Java IO API\u3002NIO\u4E0E\u539F\u6765\u7684IO\u6709\u540C\u6837\u7684\u4F5C\u7528\u548C\u76EE\u7684\uFF0C\u4F46\u662F\u4F7F\u7528\u7684\u65B9\u5F0F\u5B8C\u5168\u4E0D\u540C\uFF0CNIO\u652F\u6301\u9762\u5411\u7F13\u51B2\u533A\u7684\u3001\u57FA\u4E8E\u901A\u9053\u7684IO\u64CD\u4F5C\u3002NIO\u5C06\u4EE5\u66F4\u52A0\u9AD8\u6548\u7684\u65B9\u5F0F\u8FDB\u884C\u6587\u4EF6\u7684\u8BFB\u5199\u64CD\u4F5C\u3002</p><h4 id="java-nio-\u4E0Eio\u7684\u4E3B\u8981\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#java-nio-\u4E0Eio\u7684\u4E3B\u8981\u533A\u522B" aria-hidden="true">#</a> Java NIO \u4E0EIO\u7684\u4E3B\u8981\u533A\u522B</h4><h5 id="io" tabindex="-1"><a class="header-anchor" href="#io" aria-hidden="true">#</a> <strong>IO</strong></h5><p>\u200B \u9762\u5411\u6D41(Stream Oriented)</p><p>\u200B \u963B\u585EIO(Blocking IO)</p><h5 id="nio-1" tabindex="-1"><a class="header-anchor" href="#nio-1" aria-hidden="true">#</a> <strong>NIO</strong></h5><p>\u200B \u9762\u5411\u7F13\u51B2\u533A(Buffer Oriented)</p><p>\u200B \u975E\u963B\u585EIO(NonBlocking IO)</p><p>\u200B \u9009\u62E9\u5668(Selectors)</p><h4 id="\u7F13\u51B2\u533A\u548C\u901A\u9053" tabindex="-1"><a class="header-anchor" href="#\u7F13\u51B2\u533A\u548C\u901A\u9053" aria-hidden="true">#</a> \u7F13\u51B2\u533A\u548C\u901A\u9053</h4><p>Java NIO\u7CFB\u7EDF\u7684\u6838\u5FC3\u5728\u4E8E\uFF1A\u901A\u9053(Channel)\u548C\u7F13\u51B2\u533A(Buffer)\u3002\u901A\u9053\u8868\u793A\u6253\u5F00\u5230IO \u8BBE\u5907(\u4F8B\u5982\uFF1A\u6587\u4EF6\u3001\u5957\u63A5\u5B57)\u7684\u8FDE\u63A5\u3002\u82E5\u9700\u8981\u4F7F\u7528NIO \u7CFB\u7EDF\uFF0C\u9700\u8981\u83B7\u53D6\u7528\u4E8E\u8FDE\u63A5IO \u8BBE\u5907\u7684\u901A\u9053\u4EE5\u53CA\u7528\u4E8E\u5BB9\u7EB3\u6570\u636E\u7684\u7F13\u51B2\u533A\u3002\u7136\u540E\u64CD\u4F5C\u7F13\u51B2\u533A\uFF0C\u5BF9\u6570\u636E\u8FDB\u884C\u5904\u7406\u3002</p><p><strong>\u4E00\u53E5\u8BDD\u6982\u62EC\uFF1AChannel \u8D1F\u8D23\u4F20\u8F93\uFF0CBuffer \u8D1F\u8D23\u5B58\u50A8</strong></p><h5 id="\u7F13\u51B2\u533A-buffer" tabindex="-1"><a class="header-anchor" href="#\u7F13\u51B2\u533A-buffer" aria-hidden="true">#</a> \u7F13\u51B2\u533A\uFF08Buffer\uFF09</h5><p>\u7F13\u51B2\u533A\uFF08Buffer\uFF09\uFF1A\u4E00\u4E2A\u7528\u4E8E\u7279\u5B9A\u57FA\u672C\u6570\u636E\u7C7B\u578B\u7684\u5BB9\u5668\u3002\u7531java.nio \u5305\u5B9A\u4E49\u7684\uFF0C\u6240\u6709\u7F13\u51B2\u533A\u90FD\u662FBuffer \u62BD\u8C61\u7C7B\u7684\u5B50\u7C7B\u3002 Java NIO\u4E2D\u7684Buffer \u4E3B\u8981\u7528\u4E8E\u4E0ENIO \u901A\u9053\u8FDB\u884C\u4EA4\u4E92\uFF0C\u6570\u636E\u662F\u4ECE\u901A\u9053\u8BFB\u5165\u7F13\u51B2\u533A\uFF0C\u4ECE\u7F13\u51B2\u533A\u5199\u5165\u901A\u9053\u4E2D\u7684\u3002</p><p>Buffer \u5C31\u50CF\u4E00\u4E2A\u6570\u7EC4\uFF0C\u53EF\u4EE5\u4FDD\u5B58\u591A\u4E2A\u76F8\u540C\u7C7B\u578B\u7684\u6570\u636E\u3002\u6839\u636E\u6570\u636E\u7C7B\u578B\u4E0D\u540C(boolean \u9664\u5916) \uFF0C\u6709\u4EE5\u4E0BBuffer \u5E38\u7528\u5B50\u7C7B\uFF1A</p><ul><li>ByteBuffer</li><li>CharBuffer</li><li>ShortBuffer</li><li>IntBuffer</li><li>LongBuffer</li><li>FloatBuffer</li><li>DoubleBuffer</li></ul><p><strong>\u7F13\u51B2\u533A\u7684\u57FA\u672C\u5C5E\u6027</strong></p><ul><li><p>capatity</p><p>\u8868\u793ABuffer \u6700\u5927\u6570\u636E\u5BB9\u91CF\uFF0C\u7F13\u51B2\u533A\u5BB9\u91CF\u4E0D\u80FD\u4E3A\u8D1F\uFF0C\u5E76\u4E14\u521B\u5EFA\u540E\u4E0D\u80FD\u66F4\u6539\u3002</p></li><li><p>limit</p><p>\u7B2C\u4E00\u4E2A\u4E0D\u5E94\u8BE5\u8BFB\u53D6\u6216\u5199\u5165\u7684\u6570\u636E\u7684\u7D22\u5F15\uFF0C\u5373\u4F4D\u4E8Elimit \u540E\u7684\u6570\u636E\u4E0D\u53EF\u8BFB\u5199\u3002\u7F13\u51B2\u533A\u7684\u9650\u5236\u4E0D\u80FD\u4E3A\u8D1F\uFF0C\u5E76\u4E14\u4E0D\u80FD\u5927\u4E8E\u5176\u5BB9\u91CF\u3002</p></li><li><p>position</p><p>\u4E0B\u4E00\u4E2A\u8981\u8BFB\u53D6\u6216\u5199\u5165\u7684\u6570\u636E\u7684\u7D22\u5F15\u3002\u7F13\u51B2\u533A\u7684\u4F4D\u7F6E\u4E0D\u80FD\u4E3A\u8D1F\uFF0C\u5E76\u4E14\u4E0D\u80FD\u5927\u4E8E\u5176\u9650\u5236</p></li><li><p>mark\u4E0Ereset</p><p>\u6807\u8BB0\u662F\u4E00\u4E2A\u7D22\u5F15\uFF0C\u901A\u8FC7Buffer \u4E2D\u7684mark() \u65B9\u6CD5\u6307\u5B9ABuffer \u4E2D\u4E00\u4E2A\u7279\u5B9A\u7684position\uFF0C\u4E4B\u540E\u53EF\u4EE5\u901A\u8FC7\u8C03\u7528reset() \u65B9\u6CD5\u6062\u590D\u5230\u8FD9\u4E2Aposition.</p></li></ul><p><strong>\u6807\u8BB0\u3001\u4F4D\u7F6E\u3001\u9650\u5236\u3001\u5BB9\u91CF\u9075\u5B88\u4EE5\u4E0B\u4E0D\u53D8\u5F0F\uFF1A0&lt;=mark&lt;=position&lt;=limit&lt;=capacity</strong></p><p><strong>\u7F13\u51B2\u533A\u7684\u57FA\u672C\u5C5E\u6027\uFF1A</strong></p><p><img src="'+p+'" alt="image-20200412210552466"></p><p><strong>Buffer\u7684API\u4ECB\u7ECD</strong></p><p><img src="'+e+`" alt="image-20200412211315027"></p><h5 id="\u4EE3\u7801\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u793A\u4F8B" aria-hidden="true">#</a> \u4EE3\u7801\u793A\u4F8B\uFF1A</h5><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u4E00\u3001\u7F13\u51B2\u533A\uFF08Buffer\uFF09\uFF1A\u5728 Java NIO \u4E2D\u8D1F\u8D23\u6570\u636E\u7684\u5B58\u53D6\u3002\u7F13\u51B2\u533A\u5C31\u662F\u6570\u7EC4\u3002\u7528\u4E8E\u5B58\u50A8\u4E0D\u540C\u6570\u636E\u7C7B\u578B\u7684\u6570\u636E
 *
 * \u6839\u636E\u6570\u636E\u7C7B\u578B\u4E0D\u540C\uFF08boolean \u9664\u5916\uFF09\uFF0C\u63D0\u4F9B\u4E86\u76F8\u5E94\u7C7B\u578B\u7684\u7F13\u51B2\u533A\uFF1A
 * ByteBuffer
 * CharBuffer
 * ShortBuffer
 * IntBuffer
 * LongBuffer
 * FloatBuffer
 * DoubleBuffer
 *
 * \u4E0A\u8FF0\u7F13\u51B2\u533A\u7684\u7BA1\u7406\u65B9\u5F0F\u51E0\u4E4E\u4E00\u81F4\uFF0C\u901A\u8FC7 allocate() \u83B7\u53D6\u7F13\u51B2\u533A
 *
 * \u4E8C\u3001\u7F13\u51B2\u533A\u5B58\u53D6\u6570\u636E\u7684\u4E24\u4E2A\u6838\u5FC3\u65B9\u6CD5\uFF1A
 * put() : \u5B58\u5165\u6570\u636E\u5230\u7F13\u51B2\u533A\u4E2D
 * get() : \u83B7\u53D6\u7F13\u51B2\u533A\u4E2D\u7684\u6570\u636E
 *
 * \u4E09\u3001\u7F13\u51B2\u533A\u4E2D\u7684\u56DB\u4E2A\u6838\u5FC3\u5C5E\u6027\uFF1A
 * capacity : \u5BB9\u91CF\uFF0C\u8868\u793A\u7F13\u51B2\u533A\u4E2D\u6700\u5927\u5B58\u50A8\u6570\u636E\u7684\u5BB9\u91CF\u3002\u4E00\u65E6\u58F0\u660E\u4E0D\u80FD\u6539\u53D8\u3002
 * limit : \u754C\u9650\uFF0C\u8868\u793A\u7F13\u51B2\u533A\u4E2D\u53EF\u4EE5\u64CD\u4F5C\u6570\u636E\u7684\u5927\u5C0F\u3002\uFF08limit \u540E\u6570\u636E\u4E0D\u80FD\u8FDB\u884C\u8BFB\u5199\uFF09
 * position : \u4F4D\u7F6E\uFF0C\u8868\u793A\u7F13\u51B2\u533A\u4E2D\u6B63\u5728\u64CD\u4F5C\u6570\u636E\u7684\u4F4D\u7F6E\u3002
 *
 * mark : \u6807\u8BB0\uFF0C\u8868\u793A\u8BB0\u5F55\u5F53\u524D position \u7684\u4F4D\u7F6E\u3002\u53EF\u4EE5\u901A\u8FC7 reset() \u6062\u590D\u5230 mark \u7684\u4F4D\u7F6E
 *
 * 0 &lt;= mark &lt;= position &lt;= limit &lt;= capacity
 *
 * \u56DB\u3001\u76F4\u63A5\u7F13\u51B2\u533A\u4E0E\u975E\u76F4\u63A5\u7F13\u51B2\u533A\uFF1A
 * \u975E\u76F4\u63A5\u7F13\u51B2\u533A\uFF1A\u901A\u8FC7 allocate() \u65B9\u6CD5\u5206\u914D\u7F13\u51B2\u533A\uFF0C\u5C06\u7F13\u51B2\u533A\u5EFA\u7ACB\u5728 JVM \u7684\u5185\u5B58\u4E2D
 * \u76F4\u63A5\u7F13\u51B2\u533A\uFF1A\u901A\u8FC7 allocateDirect() \u65B9\u6CD5\u5206\u914D\u76F4\u63A5\u7F13\u51B2\u533A\uFF0C\u5C06\u7F13\u51B2\u533A\u5EFA\u7ACB\u5728\u7269\u7406\u5185\u5B58\u4E2D\u3002\u53EF\u4EE5\u63D0\u9AD8\u6548\u7387
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestBuffer</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * \u6D4B\u8BD5\u76F4\u63A5\u7F13\u51B2\u533A\u4E0E\u975E\u76F4\u63A5\u7F13\u51B2\u533A
     */</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">//\u5206\u914D\u76F4\u63A5\u7F13\u51B2\u533A</span>
        <span class="token class-name">ByteBuffer</span> buf <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocateDirect</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>buf<span class="token punctuation">.</span><span class="token function">isDirect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">&quot;abcde&quot;</span><span class="token punctuation">;</span>

        <span class="token class-name">ByteBuffer</span> buf <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        buf<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        buf<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dst <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span>buf<span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        buf<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>dst<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>dst<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>buf<span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//mark() : \u6807\u8BB0</span>
        buf<span class="token punctuation">.</span><span class="token function">mark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        buf<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>dst<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>dst<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>buf<span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//reset() : \u6062\u590D\u5230 mark \u7684\u4F4D\u7F6E</span>
        buf<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>buf<span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//\u5224\u65AD\u7F13\u51B2\u533A\u4E2D\u662F\u5426\u8FD8\u6709\u5269\u4F59\u6570\u636E</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>buf<span class="token punctuation">.</span><span class="token function">hasRemaining</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">//\u83B7\u53D6\u7F13\u51B2\u533A\u4E2D\u53EF\u4EE5\u64CD\u4F5C\u7684\u6570\u91CF</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>buf<span class="token punctuation">.</span><span class="token function">remaining</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * allocate /\u02C8\xE6l\u0259ke\u026At/  \u5206\u914D
     * \u4E0D\u540C\u7C7B\u578B\u7684Buffer\u90FD\u4F7F\u7528allocate\u65B9\u6CD5\u6765\u521B\u5EFA\u5BF9\u8C61
     * \u8FD9\u4E2A\u65B9\u6CD5\u4E3B\u8981\u7528\u6765\u63A9\u9970Buffer\u4E2D\u5C5E\u6027\u7684\u4F5C\u7528
     */</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">&quot;abcde&quot;</span><span class="token punctuation">;</span>

        <span class="token comment">//1. \u5206\u914D\u4E00\u4E2A\u6307\u5B9A\u5927\u5C0F\u7684\u7F13\u51B2\u533A</span>
        <span class="token class-name">ByteBuffer</span> buf <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;-----------------allocate()----------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>buf<span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>buf<span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>buf<span class="token punctuation">.</span><span class="token function">capacity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//2. \u5229\u7528 put() \u5B58\u5165\u6570\u636E\u5230\u7F13\u51B2\u533A\u4E2D</span>
        buf<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;-----------------put()----------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>buf<span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>buf<span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>buf<span class="token punctuation">.</span><span class="token function">capacity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//3. \u5207\u6362\u8BFB\u53D6\u6570\u636E\u6A21\u5F0F</span>
        buf<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;-----------------flip()----------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>buf<span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>buf<span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>buf<span class="token punctuation">.</span><span class="token function">capacity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//4. \u5229\u7528 get() \u8BFB\u53D6\u7F13\u51B2\u533A\u4E2D\u7684\u6570\u636E</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dst <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span>buf<span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        buf<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>dst<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>dst<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> dst<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;-----------------get()----------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>buf<span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>buf<span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>buf<span class="token punctuation">.</span><span class="token function">capacity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//5. rewind() : \u53EF\u91CD\u590D\u8BFB</span>
        buf<span class="token punctuation">.</span><span class="token function">rewind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;-----------------rewind()----------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>buf<span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>buf<span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>buf<span class="token punctuation">.</span><span class="token function">capacity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//6. clear() : \u6E05\u7A7A\u7F13\u51B2\u533A. \u4F46\u662F\u7F13\u51B2\u533A\u4E2D\u7684\u6570\u636E\u4F9D\u7136\u5B58\u5728\uFF0C\u4F46\u662F\u5904\u4E8E\u201C\u88AB\u9057\u5FD8\u201D\u72B6\u6001</span>
        buf<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;-----------------clear()----------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>buf<span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>buf<span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>buf<span class="token punctuation">.</span><span class="token function">capacity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span>buf<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="\u76F4\u63A5\u7F13\u51B2\u533A\u4E0E\u975E\u76F4\u63A5\u7F13\u51B2\u533A" tabindex="-1"><a class="header-anchor" href="#\u76F4\u63A5\u7F13\u51B2\u533A\u4E0E\u975E\u76F4\u63A5\u7F13\u51B2\u533A" aria-hidden="true">#</a> \u76F4\u63A5\u7F13\u51B2\u533A\u4E0E\u975E\u76F4\u63A5\u7F13\u51B2\u533A</h5><ul><li>\u5B57\u8282\u7F13\u51B2\u533A\u8981\u4E48\u662F\u76F4\u63A5\u7684\uFF0C\u8981\u4E48\u662F\u975E\u76F4\u63A5\u7684\u3002\u5982\u679C\u4E3A\u76F4\u63A5\u5B57\u8282\u7F13\u51B2\u533A\uFF0C\u5219Java \u865A\u62DF\u673A\u4F1A\u5C3D\u6700\u5927\u52AA\u529B\u76F4\u63A5\u5728\u6B64\u7F13\u51B2\u533A\u4E0A\u6267\u884C\u672C\u673AI/O \u64CD\u4F5C\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u5728\u6BCF\u6B21\u8C03\u7528\u57FA\u7840\u64CD\u4F5C\u7CFB\u7EDF\u7684\u4E00\u4E2A\u672C\u673AI/O \u64CD\u4F5C\u4E4B\u524D\uFF08\u6216\u4E4B\u540E\uFF09\uFF0C\u865A\u62DF\u673A\u90FD\u4F1A\u5C3D\u91CF\u907F\u514D\u5C06\u7F13\u51B2\u533A\u7684\u5185\u5BB9\u590D\u5236\u5230\u4E2D\u95F4\u7F13\u51B2\u533A\u4E2D\uFF08\u6216\u4ECE\u4E2D\u95F4\u7F13\u51B2\u533A\u4E2D\u590D\u5236\u5185\u5BB9\uFF09\u3002</li><li>\u76F4\u63A5\u5B57\u8282\u7F13\u51B2\u533A\u53EF\u4EE5\u901A\u8FC7\u8C03\u7528\u6B64\u7C7B\u7684allocateDirect() \u5DE5\u5382\u65B9\u6CD5\u6765\u521B\u5EFA\u3002\u6B64\u65B9\u6CD5\u8FD4\u56DE\u7684\u7F13\u51B2\u533A\u8FDB\u884C\u5206\u914D\u548C\u53D6\u6D88\u5206\u914D\u6240\u9700\u6210\u672C\u901A\u5E38\u9AD8\u4E8E\u975E\u76F4\u63A5\u7F13\u51B2\u533A\u3002\u76F4\u63A5\u7F13\u51B2\u533A\u7684\u5185\u5BB9\u53EF\u4EE5\u9A7B\u7559\u5728\u5E38\u89C4\u7684\u5783\u573E\u56DE\u6536\u5806\u4E4B\u5916\uFF0C\u56E0\u6B64\uFF0C\u5B83\u4EEC\u5BF9\u5E94\u7528\u7A0B\u5E8F\u7684\u5185\u5B58\u9700\u6C42\u91CF\u9020\u6210\u7684\u5F71\u54CD\u53EF\u80FD\u5E76\u4E0D\u660E\u663E\u3002\u6240\u4EE5\uFF0C\u5EFA\u8BAE\u5C06\u76F4\u63A5\u7F13\u51B2\u533A\u4E3B\u8981\u5206\u914D\u7ED9\u90A3\u4E9B\u6613\u53D7\u57FA\u7840\u7CFB\u7EDF\u7684\u672C\u673AI/O \u64CD\u4F5C\u5F71\u54CD\u7684\u5927\u578B\u3001\u6301\u4E45\u7684\u7F13\u51B2\u533A\u3002\u4E00\u822C\u60C5\u51B5\u4E0B\uFF0C\u6700\u597D\u4EC5\u5728\u76F4\u63A5\u7F13\u51B2\u533A\u80FD\u5728\u7A0B\u5E8F\u6027\u80FD\u65B9\u9762\u5E26\u6765\u660E\u663E\u597D\u5904\u65F6\u5206\u914D\u5B83\u4EEC\u3002</li><li>\u76F4\u63A5\u5B57\u8282\u7F13\u51B2\u533A\u8FD8\u53EF\u4EE5\u901A\u8FC7FileChannel \u7684map() \u65B9\u6CD5\u5C06\u6587\u4EF6\u533A\u57DF\u76F4\u63A5\u6620\u5C04\u5230\u5185\u5B58\u4E2D\u6765\u521B\u5EFA\u3002\u8BE5\u65B9\u6CD5\u8FD4\u56DEMappedByteBuffer\u3002Java \u5E73\u53F0\u7684\u5B9E\u73B0\u6709\u52A9\u4E8E\u901A\u8FC7JNI \u4ECE\u672C\u673A\u4EE3\u7801\u521B\u5EFA\u76F4\u63A5\u5B57\u8282\u7F13\u51B2\u533A\u3002\u5982\u679C\u4EE5\u4E0A\u8FD9\u4E9B\u7F13\u51B2\u533A\u4E2D\u7684\u67D0\u4E2A\u7F13\u51B2\u533A\u5B9E\u4F8B\u6307\u7684\u662F\u4E0D\u53EF\u8BBF\u95EE\u7684\u5185\u5B58\u533A\u57DF\uFF0C\u5219\u8BD5\u56FE\u8BBF\u95EE\u8BE5\u533A\u57DF\u4E0D\u4F1A\u66F4\u6539\u8BE5\u7F13\u51B2\u533A\u7684\u5185\u5BB9\uFF0C\u5E76\u4E14\u5C06\u4F1A\u5728\u8BBF\u95EE\u671F\u95F4\u6216\u7A0D\u540E\u7684\u67D0\u4E2A\u65F6\u95F4\u5BFC\u81F4\u629B\u51FA\u4E0D\u786E\u5B9A\u7684\u5F02\u5E38\u3002</li><li>\u5B57\u8282\u7F13\u51B2\u533A\u662F\u76F4\u63A5\u7F13\u51B2\u533A\u8FD8\u662F\u975E\u76F4\u63A5\u7F13\u51B2\u533A\u53EF\u901A\u8FC7\u8C03\u7528\u5176isDirect()\u65B9\u6CD5\u6765\u786E\u5B9A\u3002\u63D0\u4F9B\u6B64\u65B9\u6CD5\u662F\u4E3A\u4E86\u80FD\u591F\u5728\u6027\u80FD\u5173\u952E\u578B\u4EE3\u7801\u4E2D\u6267\u884C\u663E\u5F0F\u7F13\u51B2\u533A\u7BA1\u7406\u3002</li></ul><h6 id="\u56FE\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u56FE\u4F8B" aria-hidden="true">#</a> \u56FE\u4F8B</h6><p><strong>\u975E\u76F4\u63A5\u7F13\u51B2\u533A</strong></p><p><img src="`+c+'" alt="image-20200412213413264"></p><p>\u76F4\u63A5\u7F13\u51B2\u533A\uFF1A</p><p>\u200B \u6570\u636E\u4ECE\u78C1\u76D8\u5230\u5E94\u7528\u7A0B\u5E8F\u9700\u8981\u7ECF\u8FC7\u5185\u6838\u7A7A\u95F4\u5230\u7528\u6237\u7A7A\u95F4\u7684\u62F7\u8D1D\u8FC7\u7A0B</p><p><strong>\u975E\u76F4\u63A5\u7F13\u51B2\u533A\uFF1A</strong></p><p><img src="'+o+`" alt="image-20200412213447082"></p><p>\u975E\u76F4\u63A5\u7F13\u51B2\u533A\uFF1A</p><pre><code>1. \u76F4\u63A5\u5728\u7269\u7406\u5185\u5B58\u4E2D\u521B\u5EFA\u78C1\u76D8\u989D\u6620\u5C04\u6587\u4EF6
2. \u5728\u6570\u636E\u5199\u5230\u7269\u7406\u5185\u5B58\u4E4B\u540E\uFF0C\u5E94\u7528\u7A0B\u5E8F\u5C31\u65E0\u6743\u8FC7\u95EE\u4E86\uFF0C\u4F59\u4E0B\u7684\u8FC7\u7A0B\u4EA4\u7531\u64CD\u4F5C\u7CFB\u7EDF\u6765\u5904\u7406
3. \u5728\u5199\u5B8C\u6570\u636E\u4E4B\u540E\uFF0C\u5E94\u7528\u7A0B\u5E8F\u65E0\u6CD5\u81EA\u52A8\u91CA\u653E\u8D44\u6E90\uFF0C\u9700\u8981\u7B49\u5F85\u5783\u573E\u56DE\u6536\u673A\u5236\u6765\u8FDB\u884C\u8D44\u6E90\u56DE\u6536
4. \u5728\u6781\u7AEF\u60C5\u51B5\u4E0B\uFF08\u5783\u573E\u56DE\u6536\u5668\u4E00\u76F4\u4E0D\u8FDB\u884C\u56DE\u6536\uFF09\uFF0C\u5B58\u5728\u5360\u7528\u8D44\u6E90\u95EE\u9898\u3002
</code></pre><h5 id="\u901A\u9053-channel" tabindex="-1"><a class="header-anchor" href="#\u901A\u9053-channel" aria-hidden="true">#</a> \u901A\u9053\uFF08Channel\uFF09</h5><p>\u901A\u9053\uFF08Channel\uFF09\uFF1A\u7531java.nio.channels \u5305\u5B9A\u4E49\u7684\u3002Channel \u8868\u793AIO \u6E90\u4E0E\u76EE\u6807\u6253\u5F00\u7684\u8FDE\u63A5\u3002Channel \u7C7B\u4F3C\u4E8E\u4F20\u7EDF\u7684\u201C\u6D41\u201D\u3002\u53EA\u4E0D\u8FC7Channel \u672C\u8EAB\u4E0D\u80FD\u76F4\u63A5\u8BBF\u95EE\u6570\u636E\uFF0CChannel \u53EA\u80FD\u4E0EBuffer \u8FDB\u884C\u4EA4\u4E92\u3002</p><p><strong>\u4EE3\u7801\u793A\u4F8B\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u4E00\u3001\u901A\u9053\uFF08Channel\uFF09\uFF1A\u7528\u4E8E\u6E90\u8282\u70B9\u4E0E\u76EE\u6807\u8282\u70B9\u7684\u8FDE\u63A5\u3002\u5728 Java NIO \u4E2D\u8D1F\u8D23\u7F13\u51B2\u533A\u4E2D\u6570\u636E\u7684\u4F20\u8F93\u3002Channel \u672C\u8EAB\u4E0D\u5B58\u50A8\u6570\u636E\uFF0C\u56E0\u6B64\u9700\u8981\u914D\u5408\u7F13\u51B2\u533A\u8FDB\u884C\u4F20\u8F93\u3002
 *
 * \u4E8C\u3001\u901A\u9053\u7684\u4E3B\u8981\u5B9E\u73B0\u7C7B
 * 	java.nio.channels.Channel \u63A5\u53E3\uFF1A
 * 		|--FileChannel
 * 		|--SocketChannel
 * 		|--ServerSocketChannel
 * 		|--DatagramChannel
 *
 * \u4E09\u3001\u83B7\u53D6\u901A\u9053
 * 1. Java \u9488\u5BF9\u652F\u6301\u901A\u9053\u7684\u7C7B\u63D0\u4F9B\u4E86 getChannel() \u65B9\u6CD5
 * 		\u672C\u5730 IO\uFF1A
 * 		FileInputStream/FileOutputStream
 * 		RandomAccessFile
 *
 * 		\u7F51\u7EDCIO\uFF1A
 * 		Socket
 * 		ServerSocket
 * 		DatagramSocket
 *
 * 2. \u5728 JDK 1.7 \u4E2D\u7684 NIO.2 \u9488\u5BF9\u5404\u4E2A\u901A\u9053\u63D0\u4F9B\u4E86\u9759\u6001\u65B9\u6CD5 open()
 * 3. \u5728 JDK 1.7 \u4E2D\u7684 NIO.2 \u7684 Files \u5DE5\u5177\u7C7B\u7684 newByteChannel()
 *
 * \u56DB\u3001\u901A\u9053\u4E4B\u95F4\u7684\u6570\u636E\u4F20\u8F93
 * transferFrom()
 * transferTo()
 *
 * \u4E94\u3001\u5206\u6563(Scatter)\u4E0E\u805A\u96C6(Gather)
 * \u5206\u6563\u8BFB\u53D6\uFF08Scattering Reads\uFF09\uFF1A\u5C06\u901A\u9053\u4E2D\u7684\u6570\u636E\u5206\u6563\u5230\u591A\u4E2A\u7F13\u51B2\u533A\u4E2D
 * \u805A\u96C6\u5199\u5165\uFF08Gathering Writes\uFF09\uFF1A\u5C06\u591A\u4E2A\u7F13\u51B2\u533A\u4E2D\u7684\u6570\u636E\u805A\u96C6\u5230\u901A\u9053\u4E2D
 *
 * \u516D\u3001\u5B57\u7B26\u96C6\uFF1ACharset
 * \u7F16\u7801\uFF1A\u5B57\u7B26\u4E32 -&gt; \u5B57\u8282\u6570\u7EC4
 * \u89E3\u7801\uFF1A\u5B57\u8282\u6570\u7EC4  -&gt; \u5B57\u7B26\u4E32
 *
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestChannel</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * ===============================================================================
     *  \u5B57\u7B26\u96C6
     */</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test6</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">Charset</span> cs1 <span class="token operator">=</span> <span class="token class-name">Charset</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;GBK&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//\u83B7\u53D6\u7F16\u7801\u5668</span>
        <span class="token class-name">CharsetEncoder</span> ce <span class="token operator">=</span> cs1<span class="token punctuation">.</span><span class="token function">newEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//\u83B7\u53D6\u89E3\u7801\u5668</span>
        <span class="token class-name">CharsetDecoder</span> cd <span class="token operator">=</span> cs1<span class="token punctuation">.</span><span class="token function">newDecoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">CharBuffer</span> cBuf <span class="token operator">=</span> <span class="token class-name">CharBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        cBuf<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;\u5C1A\u7845\u8C37\u5A01\u6B66\uFF01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        cBuf<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//\u7F16\u7801</span>
        <span class="token class-name">ByteBuffer</span> bBuf <span class="token operator">=</span> ce<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>cBuf<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">12</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>bBuf<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//\u89E3\u7801</span>
        bBuf<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">CharBuffer</span> cBuf2 <span class="token operator">=</span> cd<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>bBuf<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>cBuf2<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;------------------------------------------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Charset</span> cs2 <span class="token operator">=</span> <span class="token class-name">Charset</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;GBK&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        bBuf<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">CharBuffer</span> cBuf3 <span class="token operator">=</span> cs2<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>bBuf<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>cBuf3<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * ===============================================================================
     */</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Charset</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token class-name">Charset</span><span class="token punctuation">.</span><span class="token function">availableCharsets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Charset</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> set <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Charset</span><span class="token punctuation">&gt;</span></span> entry <span class="token operator">:</span> set<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;=&quot;</span> <span class="token operator">+</span> entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * ===============================================================================
     *  \u5206\u6563\u548C\u805A\u96C6
     */</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">{</span>
        <span class="token class-name">RandomAccessFile</span> raf1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RandomAccessFile</span><span class="token punctuation">(</span><span class="token string">&quot;1.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;rw&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//1. \u83B7\u53D6\u901A\u9053</span>
        <span class="token class-name">FileChannel</span> channel1 <span class="token operator">=</span> raf1<span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//2. \u5206\u914D\u6307\u5B9A\u5927\u5C0F\u7684\u7F13\u51B2\u533A</span>
        <span class="token class-name">ByteBuffer</span> buf1 <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ByteBuffer</span> buf2 <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//3. \u5206\u6563\u8BFB\u53D6</span>
        <span class="token class-name">ByteBuffer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bufs <span class="token operator">=</span> <span class="token punctuation">{</span>buf1<span class="token punctuation">,</span> buf2<span class="token punctuation">}</span><span class="token punctuation">;</span>
        channel1<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>bufs<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">ByteBuffer</span> byteBuffer <span class="token operator">:</span> bufs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            byteBuffer<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>bufs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> bufs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;-----------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>bufs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> bufs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//4. \u805A\u96C6\u5199\u5165</span>
        <span class="token class-name">RandomAccessFile</span> raf2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RandomAccessFile</span><span class="token punctuation">(</span><span class="token string">&quot;2.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;rw&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">FileChannel</span> channel2 <span class="token operator">=</span> raf2<span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        channel2<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>bufs<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * ===============================================================================
     * \u901A\u9053\u4E4B\u95F4\u7684\u6570\u636E\u4F20\u8F93(\u76F4\u63A5\u7F13\u51B2\u533A)
     */</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">{</span>
        <span class="token class-name">FileChannel</span> inChannel <span class="token operator">=</span> <span class="token class-name">FileChannel</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;d:/1.mkv&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">StandardOpenOption</span><span class="token punctuation">.</span>READ<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">FileChannel</span> outChannel <span class="token operator">=</span> <span class="token class-name">FileChannel</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;d:/2.mkv&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">StandardOpenOption</span><span class="token punctuation">.</span>WRITE<span class="token punctuation">,</span> <span class="token class-name">StandardOpenOption</span><span class="token punctuation">.</span>READ<span class="token punctuation">,</span> <span class="token class-name">StandardOpenOption</span><span class="token punctuation">.</span>CREATE<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">//inChannel.transferTo(0, inChannel.size(), outChannel);</span>
        outChannel<span class="token punctuation">.</span><span class="token function">transferFrom</span><span class="token punctuation">(</span>inChannel<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> inChannel<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        inChannel<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        outChannel<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * ===============================================================================
     * \u4F7F\u7528\u76F4\u63A5\u7F13\u51B2\u533A\u5B8C\u6210\u6587\u4EF6\u7684\u590D\u5236(\u5185\u5B58\u6620\u5C04\u6587\u4EF6)
     */</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">{</span><span class="token comment">//2127-1902-1777</span>
        <span class="token keyword">long</span> start <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">FileChannel</span> inChannel <span class="token operator">=</span> <span class="token class-name">FileChannel</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;d:/1.mkv&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">StandardOpenOption</span><span class="token punctuation">.</span>READ<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">FileChannel</span> outChannel <span class="token operator">=</span> <span class="token class-name">FileChannel</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;d:/2.mkv&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">StandardOpenOption</span><span class="token punctuation">.</span>WRITE<span class="token punctuation">,</span> <span class="token class-name">StandardOpenOption</span><span class="token punctuation">.</span>READ<span class="token punctuation">,</span> <span class="token class-name">StandardOpenOption</span><span class="token punctuation">.</span>CREATE<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//\u5185\u5B58\u6620\u5C04\u6587\u4EF6</span>
        <span class="token class-name">MappedByteBuffer</span> inMappedBuf <span class="token operator">=</span> inChannel<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">FileChannel<span class="token punctuation">.</span>MapMode</span><span class="token punctuation">.</span>READ_ONLY<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> inChannel<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">MappedByteBuffer</span> outMappedBuf <span class="token operator">=</span> outChannel<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">FileChannel<span class="token punctuation">.</span>MapMode</span><span class="token punctuation">.</span>READ_WRITE<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> inChannel<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//\u76F4\u63A5\u5BF9\u7F13\u51B2\u533A\u8FDB\u884C\u6570\u636E\u7684\u8BFB\u5199\u64CD\u4F5C</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dst <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span>inMappedBuf<span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        inMappedBuf<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>dst<span class="token punctuation">)</span><span class="token punctuation">;</span>
        outMappedBuf<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>dst<span class="token punctuation">)</span><span class="token punctuation">;</span>

        inChannel<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        outChannel<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">long</span> end <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u8017\u8D39\u65F6\u95F4\u4E3A\uFF1A&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>end <span class="token operator">-</span> start<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * ===============================================================================
     * \u5229\u7528\u901A\u9053\u5B8C\u6210\u6587\u4EF6\u7684\u590D\u5236\uFF08\u975E\u76F4\u63A5\u7F13\u51B2\u533A\uFF09
     */</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//10874-10953</span>
        <span class="token keyword">long</span> start <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">FileInputStream</span> fis <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">FileOutputStream</span> fos <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token comment">//\u2460\u83B7\u53D6\u901A\u9053</span>
        <span class="token class-name">FileChannel</span> inChannel <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">FileChannel</span> outChannel <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            fis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token string">&quot;d:/1.mkv&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            fos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token string">&quot;d:/2.mkv&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            inChannel <span class="token operator">=</span> fis<span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            outChannel <span class="token operator">=</span> fos<span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">//\u2461\u5206\u914D\u6307\u5B9A\u5927\u5C0F\u7684\u7F13\u51B2\u533A</span>
            <span class="token class-name">ByteBuffer</span> buf <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">//\u2462\u5C06\u901A\u9053\u4E2D\u7684\u6570\u636E\u5B58\u5165\u7F13\u51B2\u533A\u4E2D</span>
            <span class="token keyword">while</span><span class="token punctuation">(</span>inChannel<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                buf<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u5207\u6362\u8BFB\u53D6\u6570\u636E\u7684\u6A21\u5F0F</span>
                <span class="token comment">//\u2463\u5C06\u7F13\u51B2\u533A\u4E2D\u7684\u6570\u636E\u5199\u5165\u901A\u9053\u4E2D</span>
                outChannel<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
                buf<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u6E05\u7A7A\u7F13\u51B2\u533A</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            
        <span class="token punctuation">}</span>

        <span class="token keyword">long</span> end <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u8017\u8D39\u65F6\u95F4\u4E3A\uFF1A&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>end <span class="token operator">-</span> start<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u6587\u4EF6\u901A\u9053" tabindex="-1"><a class="header-anchor" href="#\u6587\u4EF6\u901A\u9053" aria-hidden="true">#</a> \u6587\u4EF6\u901A\u9053</h4><h5 id="\u4EE3\u7801\u793A\u4F8B-1" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u793A\u4F8B-1" aria-hidden="true">#</a> \u4EE3\u7801\u793A\u4F8B</h5><p>\u200B \u4EE3\u7801\u793A\u4F8B\u5728Channel\u4E2D\u6709\u4F53\u73B0</p><h5 id="\u5E38\u7528api\u4ECB\u7ECD" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528api\u4ECB\u7ECD" aria-hidden="true">#</a> \u5E38\u7528API\u4ECB\u7ECD</h5><p><img src="`+l+`" alt="image-20200412222830157"></p><h4 id="nio\u7684\u975E\u963B\u585E\u5F0F\u7F51\u7EDC\u901A\u4FE1" tabindex="-1"><a class="header-anchor" href="#nio\u7684\u975E\u963B\u585E\u5F0F\u7F51\u7EDC\u901A\u4FE1" aria-hidden="true">#</a> NIO\u7684\u975E\u963B\u585E\u5F0F\u7F51\u7EDC\u901A\u4FE1</h4><h5 id="\u963B\u585E\u4E0E\u975E\u963B\u585E\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#\u963B\u585E\u4E0E\u975E\u963B\u585E\u7684\u533A\u522B" aria-hidden="true">#</a> \u963B\u585E\u4E0E\u975E\u963B\u585E\u7684\u533A\u522B</h5><ul><li><p>\u4F20\u7EDF\u7684IO \u6D41\u90FD\u662F\u963B\u585E\u5F0F\u7684\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u5F53\u4E00\u4E2A\u7EBF\u7A0B\u8C03\u7528read() \u6216write() \u65F6\uFF0C\u8BE5\u7EBF\u7A0B\u88AB\u963B\u585E\uFF0C\u76F4\u5230\u6709\u4E00\u4E9B\u6570\u636E\u88AB\u8BFB\u53D6\u6216\u5199\u5165\uFF0C\u8BE5\u7EBF\u7A0B\u5728\u6B64\u671F\u95F4\u4E0D\u80FD\u6267\u884C\u5176\u4ED6\u4EFB\u52A1\u3002\u56E0\u6B64\uFF0C\u5728\u5B8C\u6210\u7F51\u7EDC\u901A\u4FE1\u8FDB\u884CIO \u64CD\u4F5C\u65F6\uFF0C\u7531\u4E8E\u7EBF\u7A0B\u4F1A\u963B\u585E\uFF0C\u6240\u4EE5\u670D\u52A1\u5668\u7AEF\u5FC5\u987B\u4E3A\u6BCF\u4E2A\u5BA2\u6237\u7AEF\u90FD\u63D0\u4F9B\u4E00\u4E2A\u72EC\u7ACB\u7684\u7EBF\u7A0B\u8FDB\u884C\u5904\u7406\uFF0C\u5F53\u670D\u52A1\u5668\u7AEF\u9700\u8981\u5904\u7406\u5927\u91CF\u5BA2\u6237\u7AEF\u65F6\uFF0C\u6027\u80FD\u6025\u5267\u4E0B\u964D\u3002</p></li><li><p>Java NIO \u662F\u975E\u963B\u585E\u6A21\u5F0F\u7684\u3002\u5F53\u7EBF\u7A0B\u4ECE\u67D0\u901A\u9053\u8FDB\u884C\u8BFB\u5199\u6570\u636E\u65F6\uFF0C\u82E5\u6CA1\u6709\u6570\u636E\u53EF\u7528\u65F6\uFF0C\u8BE5\u7EBF\u7A0B\u53EF\u4EE5\u8FDB\u884C\u5176\u4ED6\u4EFB\u52A1\u3002\u7EBF\u7A0B\u901A\u5E38\u5C06\u975E\u963B\u585EIO \u7684\u7A7A\u95F2\u65F6\u95F4\u7528\u4E8E\u5728\u5176\u4ED6\u901A\u9053\u4E0A\u6267\u884CIO \u64CD\u4F5C\uFF0C\u6240\u4EE5\u5355\u72EC\u7684\u7EBF\u7A0B\u53EF\u4EE5\u7BA1\u7406\u591A\u4E2A\u8F93\u5165\u548C\u8F93\u51FA\u901A\u9053\u3002\u56E0\u6B64\uFF0CNIO \u53EF\u4EE5\u8BA9\u670D\u52A1\u5668\u7AEF\u4F7F\u7528\u4E00\u4E2A\u6216\u6709\u9650\u51E0\u4E2A\u7EBF\u7A0B\u6765\u540C\u65F6\u5904\u7406\u8FDE\u63A5\u5230\u670D\u52A1\u5668\u7AEF\u7684\u6240\u6709\u5BA2\u6237\u7AEF\u3002</p></li></ul><h5 id="\u9009\u62E9\u5668-selector" tabindex="-1"><a class="header-anchor" href="#\u9009\u62E9\u5668-selector" aria-hidden="true">#</a> \u9009\u62E9\u5668\uFF08Selector\uFF09</h5><p>\u9009\u62E9\u5668\uFF08Selector\uFF09\u662FSelectableChannle \u5BF9\u8C61\u7684\u591A\u8DEF\u590D\u7528\u5668\uFF0CSelector \u53EF\u4EE5\u540C\u65F6\u76D1\u63A7\u591A\u4E2ASelectableChannel \u7684IO \u72B6\u51B5\uFF0C\u4E5F\u5C31\u662F\u8BF4\uFF0C\u5229\u7528Selector \u53EF\u4F7F\u4E00\u4E2A\u5355\u72EC\u7684\u7EBF\u7A0B\u7BA1\u7406\u591A\u4E2AChannel\u3002Selector \u662F\u975E\u963B\u585EIO \u7684\u6838\u5FC3\u3002</p><h5 id="\u963B\u585E\u5F0Fnio\u4EE3\u7801\u793A\u4F8B1" tabindex="-1"><a class="header-anchor" href="#\u963B\u585E\u5F0Fnio\u4EE3\u7801\u793A\u4F8B1" aria-hidden="true">#</a> \u963B\u585E\u5F0FNIO\u4EE3\u7801\u793A\u4F8B1</h5><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u4E00\u3001\u4F7F\u7528 NIO \u5B8C\u6210\u7F51\u7EDC\u901A\u4FE1\u7684\u4E09\u4E2A\u6838\u5FC3\uFF1A
 *
 * 1. \u901A\u9053\uFF08Channel\uFF09\uFF1A\u8D1F\u8D23\u8FDE\u63A5
 *
 * 	   java.nio.channels.Channel \u63A5\u53E3\uFF1A
 * 			|--SelectableChannel
 * 				|--SocketChannel
 * 				|--ServerSocketChannel
 * 				|--DatagramChannel
 *
 * 				|--Pipe.SinkChannel
 * 				|--Pipe.SourceChannel
 *
 * 2. \u7F13\u51B2\u533A\uFF08Buffer\uFF09\uFF1A\u8D1F\u8D23\u6570\u636E\u7684\u5B58\u53D6
 *
 * 3. \u9009\u62E9\u5668\uFF08Selector\uFF09\uFF1A\u662F SelectableChannel \u7684\u591A\u8DEF\u590D\u7528\u5668\u3002\u7528\u4E8E\u76D1\u63A7 SelectableChannel \u7684 IO \u72B6\u51B5
 *
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestBlockingNIO</span> <span class="token punctuation">{</span>

    <span class="token comment">//\u5BA2\u6237\u7AEF</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">client</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token comment">//1. \u83B7\u53D6\u901A\u9053</span>
        <span class="token class-name">SocketChannel</span> sChannel <span class="token operator">=</span> <span class="token class-name">SocketChannel</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InetSocketAddress</span><span class="token punctuation">(</span><span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">,</span> <span class="token number">9898</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">FileChannel</span> inChannel <span class="token operator">=</span> <span class="token class-name">FileChannel</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;1.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">StandardOpenOption</span><span class="token punctuation">.</span>READ<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//2. \u5206\u914D\u6307\u5B9A\u5927\u5C0F\u7684\u7F13\u51B2\u533A</span>
        <span class="token class-name">ByteBuffer</span> buf <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//3. \u8BFB\u53D6\u672C\u5730\u6587\u4EF6\uFF0C\u5E76\u53D1\u9001\u5230\u670D\u52A1\u7AEF</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>inChannel<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            buf<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            sChannel<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
            buf<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//4. \u5173\u95ED\u901A\u9053</span>
        inChannel<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sChannel<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//\u670D\u52A1\u7AEF</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">server</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">{</span>
        <span class="token comment">//1. \u83B7\u53D6\u901A\u9053</span>
        <span class="token class-name">ServerSocketChannel</span> ssChannel <span class="token operator">=</span> <span class="token class-name">ServerSocketChannel</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">FileChannel</span> outChannel <span class="token operator">=</span> <span class="token class-name">FileChannel</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;2.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">StandardOpenOption</span><span class="token punctuation">.</span>WRITE<span class="token punctuation">,</span> <span class="token class-name">StandardOpenOption</span><span class="token punctuation">.</span>CREATE<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//2. \u7ED1\u5B9A\u8FDE\u63A5</span>
        ssChannel<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InetSocketAddress</span><span class="token punctuation">(</span><span class="token number">9898</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//3. \u83B7\u53D6\u5BA2\u6237\u7AEF\u8FDE\u63A5\u7684\u901A\u9053</span>
        <span class="token class-name">SocketChannel</span> sChannel <span class="token operator">=</span> ssChannel<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//4. \u5206\u914D\u6307\u5B9A\u5927\u5C0F\u7684\u7F13\u51B2\u533A</span>
        <span class="token class-name">ByteBuffer</span> buf <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//5. \u63A5\u6536\u5BA2\u6237\u7AEF\u7684\u6570\u636E\uFF0C\u5E76\u4FDD\u5B58\u5230\u672C\u5730</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>sChannel<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            buf<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            outChannel<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
            buf<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//6. \u5173\u95ED\u901A\u9053</span>
        sChannel<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        outChannel<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ssChannel<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="\u963B\u585E\u5F0Fnio\u4EE3\u7801\u793A\u4F8B2" tabindex="-1"><a class="header-anchor" href="#\u963B\u585E\u5F0Fnio\u4EE3\u7801\u793A\u4F8B2" aria-hidden="true">#</a> \u963B\u585E\u5F0FNIO\u4EE3\u7801\u793A\u4F8B2</h5><p>\u76F8\u5BF9\u4E8E\u793A\u4F8B1\uFF0C\u589E\u52A0\u4E86\u54CD\u5E94\u6D88\u606F</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestBlockingNIO2</span> <span class="token punctuation">{</span>

    <span class="token comment">//\u5BA2\u6237\u7AEF</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">client</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">{</span>
        <span class="token class-name">SocketChannel</span> sChannel <span class="token operator">=</span> <span class="token class-name">SocketChannel</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InetSocketAddress</span><span class="token punctuation">(</span><span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">,</span> <span class="token number">9898</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">FileChannel</span> inChannel <span class="token operator">=</span> <span class="token class-name">FileChannel</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;1.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">StandardOpenOption</span><span class="token punctuation">.</span>READ<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">ByteBuffer</span> buf <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">while</span><span class="token punctuation">(</span>inChannel<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            buf<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            sChannel<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
            buf<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        sChannel<span class="token punctuation">.</span><span class="token function">shutdownOutput</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//\u63A5\u6536\u670D\u52A1\u7AEF\u7684\u53CD\u9988</span>
        <span class="token keyword">int</span> len <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>len <span class="token operator">=</span> sChannel<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            buf<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>buf<span class="token punctuation">.</span><span class="token function">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            buf<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        inChannel<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sChannel<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//\u670D\u52A1\u7AEF</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">server</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">{</span>
        <span class="token class-name">ServerSocketChannel</span> ssChannel <span class="token operator">=</span> <span class="token class-name">ServerSocketChannel</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">FileChannel</span> outChannel <span class="token operator">=</span> <span class="token class-name">FileChannel</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;2.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">StandardOpenOption</span><span class="token punctuation">.</span>WRITE<span class="token punctuation">,</span> <span class="token class-name">StandardOpenOption</span><span class="token punctuation">.</span>CREATE<span class="token punctuation">)</span><span class="token punctuation">;</span>

        ssChannel<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InetSocketAddress</span><span class="token punctuation">(</span><span class="token number">9898</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">SocketChannel</span> sChannel <span class="token operator">=</span> ssChannel<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">ByteBuffer</span> buf <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">while</span><span class="token punctuation">(</span>sChannel<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            buf<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            outChannel<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
            buf<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//\u53D1\u9001\u53CD\u9988\u7ED9\u5BA2\u6237\u7AEF</span>
        buf<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;\u670D\u52A1\u7AEF\u63A5\u6536\u6570\u636E\u6210\u529F&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        buf<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sChannel<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>

        sChannel<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        outChannel<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ssChannel<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="\u975E\u963B\u585E\u5F0Fnio-tcp\u534F\u8BAE" tabindex="-1"><a class="header-anchor" href="#\u975E\u963B\u585E\u5F0Fnio-tcp\u534F\u8BAE" aria-hidden="true">#</a> \u975E\u963B\u585E\u5F0FNIO(TCP\u534F\u8BAE)</h5><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u4E00\u3001\u4F7F\u7528 NIO \u5B8C\u6210\u7F51\u7EDC\u901A\u4FE1\u7684\u4E09\u4E2A\u6838\u5FC3\uFF1A
 *
 * 1. \u901A\u9053\uFF08Channel\uFF09\uFF1A\u8D1F\u8D23\u8FDE\u63A5
 *
 * 	   java.nio.channels.Channel \u63A5\u53E3\uFF1A
 * 			|--SelectableChannel
 * 				|--SocketChannel
 * 				|--ServerSocketChannel
 * 				|--DatagramChannel
 *
 * 				|--Pipe.SinkChannel
 * 				|--Pipe.SourceChannel
 *
 * 2. \u7F13\u51B2\u533A\uFF08Buffer\uFF09\uFF1A\u8D1F\u8D23\u6570\u636E\u7684\u5B58\u53D6
 *
 * 3. \u9009\u62E9\u5668\uFF08Selector\uFF09\uFF1A\u662F SelectableChannel \u7684\u591A\u8DEF\u590D\u7528\u5668\u3002\u7528\u4E8E\u76D1\u63A7 SelectableChannel \u7684 IO \u72B6\u51B5
 *
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestNonBlockingNIO1</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u5BA2\u6237\u7AEF</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">client</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">{</span>
        <span class="token comment">//1. \u83B7\u53D6\u901A\u9053</span>
        <span class="token class-name">SocketChannel</span> sChannel <span class="token operator">=</span> <span class="token class-name">SocketChannel</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InetSocketAddress</span><span class="token punctuation">(</span><span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">,</span> <span class="token number">9898</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//2. \u5207\u6362\u975E\u963B\u585E\u6A21\u5F0F</span>
        sChannel<span class="token punctuation">.</span><span class="token function">configureBlocking</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//3. \u5206\u914D\u6307\u5B9A\u5927\u5C0F\u7684\u7F13\u51B2\u533A</span>
        <span class="token class-name">ByteBuffer</span> buf <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//4. \u53D1\u9001\u6570\u636E\u7ED9\u670D\u52A1\u7AEF</span>
        <span class="token class-name">Scanner</span> scan <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">while</span><span class="token punctuation">(</span>scan<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">String</span> str <span class="token operator">=</span> scan<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            buf<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\n&quot;</span> <span class="token operator">+</span> str<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            buf<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            sChannel<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
            buf<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//5. \u5173\u95ED\u901A\u9053</span>
        sChannel<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//\u670D\u52A1\u7AEF</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">server</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">{</span>
        <span class="token comment">//1. \u83B7\u53D6\u901A\u9053</span>
        <span class="token class-name">ServerSocketChannel</span> ssChannel <span class="token operator">=</span> <span class="token class-name">ServerSocketChannel</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//2. \u5207\u6362\u975E\u963B\u585E\u6A21\u5F0F</span>
        ssChannel<span class="token punctuation">.</span><span class="token function">configureBlocking</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//3. \u7ED1\u5B9A\u8FDE\u63A5</span>
        ssChannel<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InetSocketAddress</span><span class="token punctuation">(</span><span class="token number">9898</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//4. \u83B7\u53D6\u9009\u62E9\u5668</span>
        <span class="token class-name">Selector</span> selector <span class="token operator">=</span> <span class="token class-name">Selector</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//5. \u5C06\u901A\u9053\u6CE8\u518C\u5230\u9009\u62E9\u5668\u4E0A, \u5E76\u4E14\u6307\u5B9A\u201C\u76D1\u542C\u63A5\u6536\u4E8B\u4EF6\u201D</span>
        ssChannel<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>selector<span class="token punctuation">,</span> <span class="token class-name">SelectionKey</span><span class="token punctuation">.</span>OP_ACCEPT<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//6. \u8F6E\u8BE2\u5F0F\u7684\u83B7\u53D6\u9009\u62E9\u5668\u4E0A\u5DF2\u7ECF\u201C\u51C6\u5907\u5C31\u7EEA\u201D\u7684\u4E8B\u4EF6</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>selector<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

            <span class="token comment">//7. \u83B7\u53D6\u5F53\u524D\u9009\u62E9\u5668\u4E2D\u6240\u6709\u6CE8\u518C\u7684\u201C\u9009\u62E9\u952E(\u5DF2\u5C31\u7EEA\u7684\u76D1\u542C\u4E8B\u4EF6)\u201D</span>
            <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SelectionKey</span><span class="token punctuation">&gt;</span></span> it <span class="token operator">=</span> selector<span class="token punctuation">.</span><span class="token function">selectedKeys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">while</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token comment">//8. \u83B7\u53D6\u51C6\u5907\u201C\u5C31\u7EEA\u201D\u7684\u662F\u4E8B\u4EF6</span>
                <span class="token class-name">SelectionKey</span> sk <span class="token operator">=</span> it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token comment">//9. \u5224\u65AD\u5177\u4F53\u662F\u4EC0\u4E48\u4E8B\u4EF6\u51C6\u5907\u5C31\u7EEA</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>sk<span class="token punctuation">.</span><span class="token function">isAcceptable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token comment">//10. \u82E5\u201C\u63A5\u6536\u5C31\u7EEA\u201D\uFF0C\u83B7\u53D6\u5BA2\u6237\u7AEF\u8FDE\u63A5</span>
                    <span class="token class-name">SocketChannel</span> sChannel <span class="token operator">=</span> ssChannel<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">//11. \u5207\u6362\u975E\u963B\u585E\u6A21\u5F0F</span>
                    sChannel<span class="token punctuation">.</span><span class="token function">configureBlocking</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">//12. \u5C06\u8BE5\u901A\u9053\u6CE8\u518C\u5230\u9009\u62E9\u5668\u4E0A</span>
                    sChannel<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>selector<span class="token punctuation">,</span> <span class="token class-name">SelectionKey</span><span class="token punctuation">.</span>OP_READ<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>sk<span class="token punctuation">.</span><span class="token function">isReadable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token comment">//13. \u83B7\u53D6\u5F53\u524D\u9009\u62E9\u5668\u4E0A\u201C\u8BFB\u5C31\u7EEA\u201D\u72B6\u6001\u7684\u901A\u9053</span>
                    <span class="token class-name">SocketChannel</span> sChannel <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">SocketChannel</span><span class="token punctuation">)</span> sk<span class="token punctuation">.</span><span class="token function">channel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">//14. \u8BFB\u53D6\u6570\u636E</span>
                    <span class="token class-name">ByteBuffer</span> buf <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token keyword">int</span> len <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
                    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>len <span class="token operator">=</span> sChannel<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
                        buf<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>buf<span class="token punctuation">.</span><span class="token function">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        buf<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>

                <span class="token comment">//15. \u53D6\u6D88\u9009\u62E9\u952E SelectionKey</span>
                it<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="\u975E\u963B\u585E\u5F0Fnio-udp\u534F\u8BAE" tabindex="-1"><a class="header-anchor" href="#\u975E\u963B\u585E\u5F0Fnio-udp\u534F\u8BAE" aria-hidden="true">#</a> \u975E\u963B\u585E\u5F0FNIO(UDP\u534F\u8BAE)</h5><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * UDP
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestNonBlockingNIO2</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">{</span>
        <span class="token class-name">DatagramChannel</span> dc <span class="token operator">=</span> <span class="token class-name">DatagramChannel</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        dc<span class="token punctuation">.</span><span class="token function">configureBlocking</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">ByteBuffer</span> buf <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Scanner</span> scan <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">while</span><span class="token punctuation">(</span>scan<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">String</span> str <span class="token operator">=</span> scan<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            buf<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;:\\n&quot;</span> <span class="token operator">+</span> str<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            buf<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            dc<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">InetSocketAddress</span><span class="token punctuation">(</span><span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">,</span> <span class="token number">9898</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            buf<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        dc<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">receive</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">{</span>
        <span class="token class-name">DatagramChannel</span> dc <span class="token operator">=</span> <span class="token class-name">DatagramChannel</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        dc<span class="token punctuation">.</span><span class="token function">configureBlocking</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        dc<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InetSocketAddress</span><span class="token punctuation">(</span><span class="token number">9898</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Selector</span> selector <span class="token operator">=</span> <span class="token class-name">Selector</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        dc<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>selector<span class="token punctuation">,</span> <span class="token class-name">SelectionKey</span><span class="token punctuation">.</span>OP_READ<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">while</span><span class="token punctuation">(</span>selector<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SelectionKey</span><span class="token punctuation">&gt;</span></span> it <span class="token operator">=</span> selector<span class="token punctuation">.</span><span class="token function">selectedKeys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">while</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token class-name">SelectionKey</span> sk <span class="token operator">=</span> it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">if</span><span class="token punctuation">(</span>sk<span class="token punctuation">.</span><span class="token function">isReadable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token class-name">ByteBuffer</span> buf <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    dc<span class="token punctuation">.</span><span class="token function">receive</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    buf<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>buf<span class="token punctuation">.</span><span class="token function">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> buf<span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    buf<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>

            it<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u7BA1\u9053" tabindex="-1"><a class="header-anchor" href="#\u7BA1\u9053" aria-hidden="true">#</a> \u7BA1\u9053</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestPipe</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">{</span>
        <span class="token comment">//1. \u83B7\u53D6\u7BA1\u9053</span>
        <span class="token class-name">Pipe</span> pipe <span class="token operator">=</span> <span class="token class-name">Pipe</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//2. \u5C06\u7F13\u51B2\u533A\u4E2D\u7684\u6570\u636E\u5199\u5165\u7BA1\u9053</span>
        <span class="token class-name">ByteBuffer</span> buf <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Pipe<span class="token punctuation">.</span>SinkChannel</span> sinkChannel <span class="token operator">=</span> pipe<span class="token punctuation">.</span><span class="token function">sink</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        buf<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;\u901A\u8FC7\u5355\u5411\u7BA1\u9053\u53D1\u9001\u6570\u636E&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        buf<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sinkChannel<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//3. \u8BFB\u53D6\u7F13\u51B2\u533A\u4E2D\u7684\u6570\u636E</span>
        <span class="token class-name">Pipe<span class="token punctuation">.</span>SourceChannel</span> sourceChannel <span class="token operator">=</span> pipe<span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        buf<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> len <span class="token operator">=</span> sourceChannel<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>buf<span class="token punctuation">.</span><span class="token function">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        sourceChannel<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sinkChannel<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u5DE5\u5177\u7C7B\u7684\u7B80\u5355\u5B9E\u7528" tabindex="-1"><a class="header-anchor" href="#\u5DE5\u5177\u7C7B\u7684\u7B80\u5355\u5B9E\u7528" aria-hidden="true">#</a> \u5DE5\u5177\u7C7B\u7684\u7B80\u5355\u5B9E\u7528</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestPaths</span> <span class="token punctuation">{</span>


    <span class="token comment">//\u81EA\u52A8\u8D44\u6E90\u7BA1\u7406\uFF1A\u81EA\u52A8\u5173\u95ED\u5B9E\u73B0 AutoCloseable \u63A5\u53E3\u7684\u8D44\u6E90</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test8</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">try</span><span class="token punctuation">(</span><span class="token class-name">FileChannel</span> inChannel <span class="token operator">=</span> <span class="token class-name">FileChannel</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;1.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">StandardOpenOption</span><span class="token punctuation">.</span>READ<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">FileChannel</span> outChannel <span class="token operator">=</span> <span class="token class-name">FileChannel</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;2.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">StandardOpenOption</span><span class="token punctuation">.</span>WRITE<span class="token punctuation">,</span> <span class="token class-name">StandardOpenOption</span><span class="token punctuation">.</span>CREATE<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

            <span class="token class-name">ByteBuffer</span> buf <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            inChannel<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>

        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
        Files\u5E38\u7528\u65B9\u6CD5\uFF1A\u7528\u4E8E\u64CD\u4F5C\u5185\u5BB9
            SeekableByteChannel newByteChannel(Path path, OpenOption\u2026how) : \u83B7\u53D6\u4E0E\u6307\u5B9A\u6587\u4EF6\u7684\u8FDE\u63A5\uFF0Chow \u6307\u5B9A\u6253\u5F00\u65B9\u5F0F\u3002
            DirectoryStream newDirectoryStream(Path path) : \u6253\u5F00 path \u6307\u5B9A\u7684\u76EE\u5F55
            InputStream newInputStream(Path path, OpenOption\u2026how):\u83B7\u53D6 InputStream \u5BF9\u8C61
            OutputStream newOutputStream(Path path, OpenOption\u2026how) : \u83B7\u53D6 OutputStream \u5BF9\u8C61
     */</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test7</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">{</span>
        <span class="token class-name">SeekableByteChannel</span> newByteChannel <span class="token operator">=</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">newByteChannel</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;1.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">StandardOpenOption</span><span class="token punctuation">.</span>READ<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">DirectoryStream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Path</span><span class="token punctuation">&gt;</span></span> newDirectoryStream <span class="token operator">=</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">newDirectoryStream</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;e:/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Path</span> path <span class="token operator">:</span> newDirectoryStream<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
        Files\u5E38\u7528\u65B9\u6CD5\uFF1A\u7528\u4E8E\u5224\u65AD
            boolean exists(Path path, LinkOption \u2026 opts) : \u5224\u65AD\u6587\u4EF6\u662F\u5426\u5B58\u5728
            boolean isDirectory(Path path, LinkOption \u2026 opts) : \u5224\u65AD\u662F\u5426\u662F\u76EE\u5F55
            boolean isExecutable(Path path) : \u5224\u65AD\u662F\u5426\u662F\u53EF\u6267\u884C\u6587\u4EF6
            boolean isHidden(Path path) : \u5224\u65AD\u662F\u5426\u662F\u9690\u85CF\u6587\u4EF6
            boolean isReadable(Path path) : \u5224\u65AD\u6587\u4EF6\u662F\u5426\u53EF\u8BFB
            boolean isWritable(Path path) : \u5224\u65AD\u6587\u4EF6\u662F\u5426\u53EF\u5199
            boolean notExists(Path path, LinkOption \u2026 opts) : \u5224\u65AD\u6587\u4EF6\u662F\u5426\u4E0D\u5B58\u5728
            public static <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>A</span> <span class="token attr-name">extends</span> <span class="token attr-name">BasicFileAttributes</span><span class="token punctuation">&gt;</span></span> A readAttributes(Path path,Class<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>A</span><span class="token punctuation">&gt;</span></span> type,LinkOption... options) : \u83B7\u53D6\u4E0E path \u6307\u5B9A\u7684\u6587\u4EF6\u76F8\u5173\u8054\u7684\u5C5E\u6027\u3002
     */</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test6</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">{</span>
        <span class="token class-name">Path</span> path <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;e:/nio/hello7.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//		System.out.println(Files.exists(path, LinkOption.NOFOLLOW_LINKS));</span>

        <span class="token class-name">BasicFileAttributes</span> readAttributes <span class="token operator">=</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">readAttributes</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token class-name">BasicFileAttributes</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">LinkOption</span><span class="token punctuation">.</span>NOFOLLOW_LINKS<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>readAttributes<span class="token punctuation">.</span><span class="token function">creationTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>readAttributes<span class="token punctuation">.</span><span class="token function">lastModifiedTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">DosFileAttributeView</span> fileAttributeView <span class="token operator">=</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">getFileAttributeView</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token class-name">DosFileAttributeView</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">LinkOption</span><span class="token punctuation">.</span>NOFOLLOW_LINKS<span class="token punctuation">)</span><span class="token punctuation">;</span>

        fileAttributeView<span class="token punctuation">.</span><span class="token function">setHidden</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
        Files\u5E38\u7528\u65B9\u6CD5\uFF1A
            Path copy(Path src, Path dest, CopyOption \u2026 how) : \u6587\u4EF6\u7684\u590D\u5236
            Path createDirectory(Path path, FileAttribute<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>?</span><span class="token punctuation">&gt;</span></span> \u2026 attr) : \u521B\u5EFA\u4E00\u4E2A\u76EE\u5F55
            Path createFile(Path path, FileAttribute<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>?</span><span class="token punctuation">&gt;</span></span> \u2026 arr) : \u521B\u5EFA\u4E00\u4E2A\u6587\u4EF6
            void delete(Path path) : \u5220\u9664\u4E00\u4E2A\u6587\u4EF6
            Path move(Path src, Path dest, CopyOption\u2026how) : \u5C06 src \u79FB\u52A8\u5230 dest \u4F4D\u7F6E
            long size(Path path) : \u8FD4\u56DE path \u6307\u5B9A\u6587\u4EF6\u7684\u5927\u5C0F
     */</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test5</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">{</span>
        <span class="token class-name">Path</span> path1 <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;e:/nio/hello2.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Path</span> path2 <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;e:/nio/hello7.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span>path2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//		Files.move(path1, path2, StandardCopyOption.ATOMIC_MOVE);</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">{</span>
        <span class="token class-name">Path</span> dir <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;e:/nio/nio2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//		Files.createDirectory(dir);</span>

        <span class="token class-name">Path</span> file <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;e:/nio/nio2/hello3.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//		Files.createFile(file);</span>

        <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">deleteIfExists</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">{</span>
        <span class="token class-name">Path</span> path1 <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;e:/nio/hello.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Path</span> path2 <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;e:/nio/hello2.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span>path1<span class="token punctuation">,</span> path2<span class="token punctuation">,</span> <span class="token class-name">StandardCopyOption</span><span class="token punctuation">.</span>REPLACE_EXISTING<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
        Paths \u63D0\u4F9B\u7684 get() \u65B9\u6CD5\u7528\u6765\u83B7\u53D6 Path \u5BF9\u8C61\uFF1A
            Path get(String first, String \u2026 more) : \u7528\u4E8E\u5C06\u591A\u4E2A\u5B57\u7B26\u4E32\u4E32\u8FDE\u6210\u8DEF\u5F84\u3002
        Path \u5E38\u7528\u65B9\u6CD5\uFF1A
            boolean endsWith(String path) : \u5224\u65AD\u662F\u5426\u4EE5 path \u8DEF\u5F84\u7ED3\u675F
            boolean startsWith(String path) : \u5224\u65AD\u662F\u5426\u4EE5 path \u8DEF\u5F84\u5F00\u59CB
            boolean isAbsolute() : \u5224\u65AD\u662F\u5426\u662F\u7EDD\u5BF9\u8DEF\u5F84
            Path getFileName() : \u8FD4\u56DE\u4E0E\u8C03\u7528 Path \u5BF9\u8C61\u5173\u8054\u7684\u6587\u4EF6\u540D
            Path getName(int idx) : \u8FD4\u56DE\u7684\u6307\u5B9A\u7D22\u5F15\u4F4D\u7F6E idx \u7684\u8DEF\u5F84\u540D\u79F0
            int getNameCount() : \u8FD4\u56DEPath \u6839\u76EE\u5F55\u540E\u9762\u5143\u7D20\u7684\u6570\u91CF
            Path getParent() \uFF1A\u8FD4\u56DEPath\u5BF9\u8C61\u5305\u542B\u6574\u4E2A\u8DEF\u5F84\uFF0C\u4E0D\u5305\u542B Path \u5BF9\u8C61\u6307\u5B9A\u7684\u6587\u4EF6\u8DEF\u5F84
            Path getRoot() \uFF1A\u8FD4\u56DE\u8C03\u7528 Path \u5BF9\u8C61\u7684\u6839\u8DEF\u5F84
            Path resolve(Path p) :\u5C06\u76F8\u5BF9\u8DEF\u5F84\u89E3\u6790\u4E3A\u7EDD\u5BF9\u8DEF\u5F84
            Path toAbsolutePath() : \u4F5C\u4E3A\u7EDD\u5BF9\u8DEF\u5F84\u8FD4\u56DE\u8C03\u7528 Path \u5BF9\u8C61
            String toString() \uFF1A \u8FD4\u56DE\u8C03\u7528 Path \u5BF9\u8C61\u7684\u5B57\u7B26\u4E32\u8868\u793A\u5F62\u5F0F
     */</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">Path</span> path <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;e:/nio/hello.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">getParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">getRoot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//		Path newPath = path.resolve(&quot;e:/hello.txt&quot;);</span>
<span class="token comment">//		System.out.println(newPath);</span>

        <span class="token class-name">Path</span> path2 <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;1.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Path</span> newPath <span class="token operator">=</span> path2<span class="token punctuation">.</span><span class="token function">toAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>newPath<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">Path</span> path <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;e:/&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;nio/hello.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&quot;hello.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;e:/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">isAbsolute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">getFileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> path<span class="token punctuation">.</span><span class="token function">getNameCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,65),k=[u];function d(r,v){return s(),a("div",null,k)}var b=n(i,[["render",d],["__file","java-nio.html.vue"]]);export{b as default};
