import{_ as n,c as s}from"./app.3f0ca793.js";const a={},p=s(`<h1 id="java-bio" tabindex="-1"><a class="header-anchor" href="#java-bio" aria-hidden="true">#</a> Java BIO</h1><p>BIO\uFF08blocking IO\uFF09 \u5373\u963B\u585E IO\u3002\u6307\u7684\u4E3B\u8981\u662F\u4F20\u7EDF\u7684 <code>java.io</code> \u5305\uFF0C\u5B83\u57FA\u4E8E\u6D41\u6A21\u578B\u5B9E\u73B0\u3002</p><h2 id="bio-\u7B80\u4ECB" tabindex="-1"><a class="header-anchor" href="#bio-\u7B80\u4ECB" aria-hidden="true">#</a> BIO \u7B80\u4ECB</h2><p><code>java.io</code> \u5305\u63D0\u4F9B\u4E86\u6211\u4EEC\u6700\u719F\u77E5\u7684\u4E00\u4E9B IO \u529F\u80FD\uFF0C\u6BD4\u5982 File \u62BD\u8C61\u3001\u8F93\u5165\u8F93\u51FA\u6D41\u7B49\u3002\u4EA4\u4E92\u65B9\u5F0F\u662F\u540C\u6B65\u3001\u963B\u585E\u7684\u65B9\u5F0F\uFF0C\u4E5F\u5C31\u662F\u8BF4\uFF0C\u5728\u8BFB\u53D6\u8F93\u5165\u6D41\u6216\u8005\u5199\u5165\u8F93\u51FA\u6D41\u65F6\uFF0C\u5728\u8BFB\u3001\u5199\u52A8\u4F5C\u5B8C\u6210\u4E4B\u524D\uFF0C\u7EBF\u7A0B\u4F1A\u4E00\u76F4\u963B\u585E\u5728\u90A3\u91CC\uFF0C\u5B83\u4EEC\u4E4B\u95F4\u7684\u8C03\u7528\u662F\u53EF\u9760\u7684\u7EBF\u6027\u987A\u5E8F\u3002</p><p>\u5F88\u591A\u65F6\u5019\uFF0C\u4EBA\u4EEC\u4E5F\u628A java.net \u4E0B\u9762\u63D0\u4F9B\u7684\u90E8\u5206\u7F51\u7EDC API\uFF0C\u6BD4\u5982 <code>Socket</code>\u3001<code>ServerSocket</code>\u3001<code>HttpURLConnection</code> \u4E5F\u5F52\u7C7B\u5230\u540C\u6B65\u963B\u585E IO \u7C7B\u5E93\uFF0C\u56E0\u4E3A\u7F51\u7EDC\u901A\u4FE1\u540C\u6837\u662F IO \u884C\u4E3A\u3002</p><p>BIO \u7684\u4F18\u70B9\u662F\u4EE3\u7801\u6BD4\u8F83\u7B80\u5355\u3001\u76F4\u89C2\uFF1B\u7F3A\u70B9\u5219\u662F IO \u6548\u7387\u548C\u6269\u5C55\u6027\u5B58\u5728\u5C40\u9650\u6027\uFF0C\u5BB9\u6613\u6210\u4E3A\u5E94\u7528\u6027\u80FD\u7684\u74F6\u9888\u3002</p><h3 id="bio-\u7684\u6027\u80FD\u7F3A\u9677" tabindex="-1"><a class="header-anchor" href="#bio-\u7684\u6027\u80FD\u7F3A\u9677" aria-hidden="true">#</a> BIO \u7684\u6027\u80FD\u7F3A\u9677</h3><p><strong>BIO \u4F1A\u963B\u585E\u8FDB\u7A0B\uFF0C\u4E0D\u9002\u5408\u9AD8\u5E76\u53D1\u573A\u666F</strong>\u3002</p><p>\u91C7\u7528 BIO \u7684\u670D\u52A1\u7AEF\uFF0C\u901A\u5E38\u7531\u4E00\u4E2A\u72EC\u7ACB\u7684 Acceptor \u7EBF\u7A0B\u8D1F\u8D23\u76D1\u542C\u5BA2\u6237\u7AEF\u8FDE\u63A5\u3002\u670D\u52A1\u7AEF\u4E00\u822C\u5728<code>while(true)</code> \u5FAA\u73AF\u4E2D\u8C03\u7528 <code>accept()</code> \u65B9\u6CD5\u7B49\u5F85\u5BA2\u6237\u7AEF\u7684\u8FDE\u63A5\u8BF7\u6C42\uFF0C\u4E00\u65E6\u63A5\u6536\u5230\u4E00\u4E2A\u8FDE\u63A5\u8BF7\u6C42\uFF0C\u5C31\u53EF\u4EE5\u5EFA\u7ACB Socket\uFF0C\u5E76\u57FA\u4E8E\u8FD9\u4E2A Socket \u8FDB\u884C\u8BFB\u5199\u64CD\u4F5C\u3002\u6B64\u65F6\uFF0C\u4E0D\u80FD\u518D\u63A5\u6536\u5176\u4ED6\u5BA2\u6237\u7AEF\u8FDE\u63A5\u8BF7\u6C42\uFF0C\u53EA\u80FD\u7B49\u5F85\u5F53\u524D\u8FDE\u63A5\u7684\u64CD\u4F5C\u6267\u884C\u5B8C\u6210\u3002</p><p>\u5982\u679C\u8981\u8BA9 <strong>BIO \u901A\u4FE1\u6A21\u578B</strong> \u80FD\u591F\u540C\u65F6\u5904\u7406\u591A\u4E2A\u5BA2\u6237\u7AEF\u8BF7\u6C42\uFF0C\u5C31\u5FC5\u987B\u4F7F\u7528\u591A\u7EBF\u7A0B\uFF08\u4E3B\u8981\u539F\u56E0\u662F<code>socket.accept()</code>\u3001<code>socket.read()</code>\u3001<code>socket.write()</code> \u6D89\u53CA\u7684\u4E09\u4E2A\u4E3B\u8981\u51FD\u6570\u90FD\u662F\u540C\u6B65\u963B\u585E\u7684\uFF09\uFF0C\u4F46\u4F1A\u9020\u6210\u4E0D\u5FC5\u8981\u7684\u7EBF\u7A0B\u5F00\u9500\u3002\u4E0D\u8FC7\u53EF\u4EE5\u901A\u8FC7 <strong>\u7EBF\u7A0B\u6C60\u673A\u5236</strong> \u6539\u5584\uFF0C\u7EBF\u7A0B\u6C60\u8FD8\u53EF\u4EE5\u8BA9\u7EBF\u7A0B\u7684\u521B\u5EFA\u548C\u56DE\u6536\u6210\u672C\u76F8\u5BF9\u8F83\u4F4E\u3002</p><p><strong>\u5373\u4F7F\u53EF\u4EE5\u7528\u7EBF\u7A0B\u6C60\u7565\u5FAE\u4F18\u5316\uFF0C\u4F46\u662F\u4F1A\u6D88\u8017\u5B9D\u8D35\u7684\u7EBF\u7A0B\u8D44\u6E90\uFF0C\u5E76\u4E14\u5728\u767E\u4E07\u7EA7\u5E76\u53D1\u573A\u666F\u4E0B\u4E5F\u6491\u4E0D\u4F4F</strong>\u3002\u5982\u679C\u5E76\u53D1\u8BBF\u95EE\u91CF\u589E\u52A0\u4F1A\u5BFC\u81F4\u7EBF\u7A0B\u6570\u6025\u5267\u81A8\u80C0\u53EF\u80FD\u4F1A\u5BFC\u81F4\u7EBF\u7A0B\u5806\u6808\u6EA2\u51FA\u3001\u521B\u5EFA\u65B0\u7EBF\u7A0B\u5931\u8D25\u7B49\u95EE\u9898\uFF0C\u6700\u7EC8\u5BFC\u81F4\u8FDB\u7A0B\u5B95\u673A\u6216\u8005\u50F5\u6B7B\uFF0C\u4E0D\u80FD\u5BF9\u5916\u63D0\u4F9B\u670D\u52A1\u3002</p><h2 id="\u4FEF\u89C6java-bio" tabindex="-1"><a class="header-anchor" href="#\u4FEF\u89C6java-bio" aria-hidden="true">#</a> \u4FEF\u89C6Java BIO</h2><p>\u6D41\u4ECE\u6982\u5FF5\u4E0A\u6765\u8BF4\u662F\u4E00\u4E2A\u8FDE\u7EED\u7684\u6570\u636E\u6D41\u3002\u5F53\u7A0B\u5E8F\u9700\u8981\u8BFB\u6570\u636E\u7684\u65F6\u5019\u5C31\u9700\u8981\u4F7F\u7528\u8F93\u5165\u6D41\u8BFB\u53D6\u6570\u636E\uFF0C\u5F53\u9700\u8981\u5F80\u5916\u5199\u6570\u636E\u7684\u65F6\u5019\u5C31\u9700\u8981\u8F93\u51FA\u6D41\u3002</p><p>BIO \u4E2D\u64CD\u4F5C\u7684\u6D41\u4E3B\u8981\u6709\u4E24\u5927\u7C7B\uFF0C\u5B57\u8282\u6D41\u548C\u5B57\u7B26\u6D41\u4E24\u7C7B\uFF0C\u6839\u636E\u6D41\u7684\u65B9\u5411\u90FD\u53EF\u4EE5\u5206\u4E3A\u8F93\u5165\u6D41\u548C\u8F93\u51FA\u6D41\u3002</p><p>Java\u7684IO\u64CD\u4F5C\u7C7B\u5728java.io\u5305\u4E0B\uFF0C\u5927\u6982\u6709\u5C06\u8FD180\u4E2A\u7C7B\uFF0C\u5927\u6982\u53EF\u5206\u4E3A4\u7EC4\uFF1A</p><ul><li>\u57FA\u4E8E\u5B57\u8282\u64CD\u4F5C\u7684IO\u63A5\u53E3\uFF0CInputStream \u548C OutputStream</li><li>\u57FA\u4E8E\u5B57\u7B26\u64CD\u4F5C\u7684IO\u63A5\u53E3\uFF0CWriter \u548C Reader</li><li>\u57FA\u4E8E\u78C1\u76D8\u64CD\u4F5C\u7684IO\u63A5\u53E3\uFF0CFile</li><li>\u57FA\u4E8E\u7F51\u7EDC\u64CD\u4F5C\u7684IO\u63A5\u53E3\uFF0CSocket</li></ul><p>\u4E0B\u9762\u5C31\u5206\u522B\u5BF9\u5176\u8FDB\u884C\u4ECB\u7ECD\u3002</p><h3 id="\u5B57\u8282\u6D41" tabindex="-1"><a class="header-anchor" href="#\u5B57\u8282\u6D41" aria-hidden="true">#</a> \u5B57\u8282\u6D41</h3><p>\u5B57\u8282\u6D41\u4E3B\u8981\u64CD\u4F5C\u5B57\u8282\u6570\u636E\u6216\u4E8C\u8FDB\u5236\u5BF9\u8C61\u3002\u5B57\u8282\u6D41\u6709\u4E24\u4E2A\u6838\u5FC3\u62BD\u8C61\u7C7B\uFF1A<code>InputStream</code> \u548C <code>OutputStream</code>\u3002\u6240\u6709\u7684\u5B57\u8282\u6D41\u7C7B\u90FD\u7EE7\u627F\u81EA\u8FD9\u4E24\u4E2A\u62BD\u8C61\u7C7B\u3002\u7C7B\u56FE\u5982\u4E0B\uFF1A</p><p>InputStream\u7684\u7C7B\u5C42\u6B21\u7ED3\u6784\uFF1A</p><div class="language-mermaid ext-mermaid line-numbers-mode"><pre class="language-mermaid"><code><span class="token keyword">classDiagram</span>
	<span class="token keyword">class</span> InputStream
	
	<span class="token keyword">class</span> ByteArrayInputStream
	
	<span class="token keyword">class</span> FileInputStream
	<span class="token keyword">class</span> FilterInputStream
	<span class="token keyword">class</span> ObjectInputStream
	<span class="token keyword">class</span> PipedInputStream
	<span class="token keyword">class</span> SequenceInputStream
	<span class="token keyword">class</span> PeekInputStream
	
	
	<span class="token keyword">class</span> SocketInputStream
	
	<span class="token keyword">class</span> InflaterInputStream
	<span class="token keyword">class</span> BufferedInputStream
	<span class="token keyword">class</span> DataInputStream
	<span class="token keyword">class</span> ZipInputStream
	
	InputStream <span class="token arrow operator">&lt;|--</span> ByteArrayInputStream
	InputStream <span class="token arrow operator">&lt;|--</span> FileInputStream
	InputStream <span class="token arrow operator">&lt;|--</span> FilterInputStream
	InputStream <span class="token arrow operator">&lt;|--</span> PipedInputStream
	InputStream <span class="token arrow operator">&lt;|--</span> ObjectInputStream
	
	FileInputStream <span class="token arrow operator">&lt;|--</span> SocketInputStream
	
	FilterInputStream <span class="token arrow operator">&lt;|--</span> InflaterInputStream
	FilterInputStream <span class="token arrow operator">&lt;|--</span> BufferedInputStream
	FilterInputStream <span class="token arrow operator">&lt;|--</span> DataInputStream
	InflaterInputStream <span class="token arrow operator">&lt;|--</span>ZipInputStream
	
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><p>OutputStream\u7684\u7C7B\u5C42\u6B21\u7ED3\u6784\uFF1A</p><div class="language-mermaid ext-mermaid line-numbers-mode"><pre class="language-mermaid"><code><span class="token keyword">classDiagram</span>
	<span class="token keyword">class</span> OutputStream
	<span class="token keyword">class</span> ByteArrayOutputStream
	<span class="token keyword">class</span> FileOutputStream
	<span class="token keyword">class</span> FilterOutputStream
	<span class="token keyword">class</span> ObjectOutputStream
	<span class="token keyword">class</span> PipedOutputStream
	
	OutputStream <span class="token arrow operator">&lt;|--</span> ByteArrayOutputStream
	OutputStream <span class="token arrow operator">&lt;|--</span> FileOutputStream
	OutputStream <span class="token arrow operator">&lt;|--</span> FilterOutputStream
	OutputStream <span class="token arrow operator">&lt;|--</span> ObjectOutputStream
	OutputStream <span class="token arrow operator">&lt;|--</span> PipedOutputStream
	
	<span class="token keyword">class</span> SocketOutputStream
	
	<span class="token keyword">class</span> DataOutputStream
	<span class="token keyword">class</span> BufferedOutputStream
	<span class="token keyword">class</span> PrintStream
	<span class="token keyword">class</span> ZipOutputStream
	
	FileOutputStream <span class="token arrow operator">&lt;|--</span> SocketOutputStream
	
	FilterOutputStream <span class="token arrow operator">&lt;|--</span> DataOutputStream
	FilterOutputStream <span class="token arrow operator">&lt;|--</span> BufferedOutputStream
	FilterOutputStream <span class="token arrow operator">&lt;|--</span> PrintStream
	FilterOutputStream <span class="token arrow operator">&lt;|--</span> ZipOutputStream
	
	
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><h4 id="\u6587\u4EF6\u5B57\u8282\u6D41" tabindex="-1"><a class="header-anchor" href="#\u6587\u4EF6\u5B57\u8282\u6D41" aria-hidden="true">#</a> \u6587\u4EF6\u5B57\u8282\u6D41</h4><p><code>FileOutputStream</code> \u548C <code>FileInputStream</code> \u63D0\u4F9B\u4E86\u8BFB\u5199\u5B57\u8282\u5230\u6587\u4EF6\u7684\u80FD\u529B\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FileStreamDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//read(&quot;e:\\\\java.txt&quot;);</span>
        <span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;e:\\\\java1.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token class-name">String</span> path<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">InputStream</span> is <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            is <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//\u6BCF\u6B21\u8BFB\u53D6100\u5B57\u8282</span>
            <span class="token keyword">int</span> length <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>length <span class="token operator">=</span> is<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">FileNotFoundException</span> <span class="token operator">|</span> <span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>is <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    is<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">write</span><span class="token punctuation">(</span><span class="token class-name">String</span> path<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">OutputStream</span> os <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u6587\u4EF6\u8DEF\u5F84\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F\u5426\u8FFD\u52A0</span>
            os <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">&quot;hello world! wyz&quot;</span><span class="token punctuation">;</span>
            os<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5199\u51FA\u6570\u636E\u5B8C\u6210&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">FileNotFoundException</span> <span class="token operator">|</span> <span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>os <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    os<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><h4 id="\u5185\u5B58\u5B57\u8282\u6D41" tabindex="-1"><a class="header-anchor" href="#\u5185\u5B58\u5B57\u8282\u6D41" aria-hidden="true">#</a> \u5185\u5B58\u5B57\u8282\u6D41</h4><p><code>ByteArrayInputStream</code> \u548C <code>ByteArrayOutputStream</code> \u662F\u7528\u6765\u5B8C\u6210\u5185\u5B58\u7684\u8F93\u5165\u548C\u8F93\u51FA\u529F\u80FD\u3002\u5185\u5B58\u64CD\u4F5C\u6D41\u4E00\u822C\u5728\u751F\u6210\u4E00\u4E9B\u4E34\u65F6\u4FE1\u606F\u65F6\u624D\u4F7F\u7528\u3002 \u5982\u679C\u4E34\u65F6\u4FE1\u606F\u4FDD\u5B58\u5728\u6587\u4EF6\u4E2D\uFF0C\u8FD8\u9700\u8981\u5728\u6709\u6548\u671F\u8FC7\u540E\u5220\u9664\u6587\u4EF6\uFF0C\u8FD9\u6837\u6BD4\u8F83\u9EBB\u70E6\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u5185\u5B58\u64CD\u4F5C\u6D41\u4E00\u822C\u5728\u751F\u6210\u4E00\u4E9B\u4E34\u65F6\u4FE1\u606F\u65F6\u624D\u4F7F\u7528\u3002 \u5982\u679C\u4E34\u65F6\u4FE1\u606F\u4FDD\u5B58\u5728\u6587\u4EF6\u4E2D\uFF0C\u8FD8\u9700\u8981\u5728\u6709\u6548\u671F\u8FC7\u540E\u5220\u9664\u6587\u4EF6\uFF0C\u8FD9\u6837\u6BD4\u8F83\u9EBB\u70E6\u3002</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ByteArrayStreamDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">UnsupportedEncodingException</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">&quot;HELLO WORLD&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">ByteArrayInputStream</span> bais <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ByteArrayOutputStream</span> baos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//\u4ECEByteArray\u5185\u5B58\u4E2D\u8BFB\u53D6\u6570\u636E</span>
        <span class="token keyword">int</span> temp <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>temp <span class="token operator">=</span> bais<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u8BFB\u53D6\u5B57\u7B26\uFF0C\u5E76\u5C06\u5176\u53D8\u6210\u5C0F\u5199</span>
            baos<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token class-name">Character</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span>temp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> str1 <span class="token operator">=</span> baos<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span><span class="token punctuation">{</span>
            bais<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            bais<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>
           e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u7A0B\u5E8F\u7ED3\u675F&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ByteArrayStreamDemo2</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">&quot;\u65E0\u6DAF\u5B50&quot;</span><span class="token punctuation">;</span>
        <span class="token comment">//UTF-8\u7F16\u7801\uFF0C\u6BCF\u4E2A\u5B57\u7B26\u5360\u4E09\u4E2A\u5B57\u8282</span>
        <span class="token class-name">ByteArrayInputStream</span> bais <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> len <span class="token operator">=</span> bais<span class="token punctuation">.</span><span class="token function">available</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u83B7\u53D6\u957F\u5EA6 9</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>len<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> testread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        bais<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>testread<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u8BFB\u53D66\u4E2A\u5B57\u7B26</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>testread<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ByteArrayStreamDemo3</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">UnsupportedEncodingException</span> <span class="token punctuation">{</span>
        <span class="token class-name">ByteArrayOutputStream</span> baos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">ByteArrayInputStream</span> bais <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-16&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> len <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>len <span class="token operator">=</span> bais<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            baos<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>len<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>baos<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-16&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//ByteArrayStream\u6D4B\u8BD5</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ByteArrayStreamDemo4</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">ByteArrayInputStream</span> bais <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ByteArrayOutputStream</span> baos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> temp<span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>temp <span class="token operator">=</span> bais<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">//\u6BCF\u6B21\u8BFB\u53D6\u4E00\u4E2A\u5B57\u8282\uFF0C\u5F53\u8BFB\u53D6\u5230\u5B8C\u540E\u4F1A\u8FD4\u56DE-1</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span>
            baos<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> string <span class="token operator">=</span> baos<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h4 id="\u7BA1\u9053\u6D41" tabindex="-1"><a class="header-anchor" href="#\u7BA1\u9053\u6D41" aria-hidden="true">#</a> \u7BA1\u9053\u6D41</h4><p>\u7BA1\u9053\u6D41\u7684\u4E3B\u8981\u4F5C\u7528\u662F\u53EF\u4EE5\u8FDB\u884C\u4E24\u4E2A\u7EBF\u7A0B\u95F4\u7684\u901A\u4FE1\u3002</p><p>\u5982\u679C\u8981\u8FDB\u884C\u7BA1\u9053\u901A\u4FE1\uFF0C\u5219\u5FC5\u987B\u628A <code>PipedOutputStream</code> \u8FDE\u63A5\u5728 <code>PipedInputStream</code> \u4E0A\u3002\u4E3A\u6B64\uFF0C<code>PipedOutputStream</code> \u4E2D\u63D0\u4F9B\u4E86 <code>connect()</code> \u65B9\u6CD5\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u7BA1\u9053\u6D41\uFF0C\u8FDB\u884C\u4E24\u4E2A\u7EBF\u7A0B\u4E4B\u95F4\u7684\u901A\u4FE1</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PipedStreamDemo1</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u521B\u5EFA\u53D1\u9001\u548C\u63A5\u53D7\u7EBF\u7A0B</span>
        <span class="token class-name">Send</span> send <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Receive</span> receive <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Receive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u7EBF\u7A0B\u4E24\u4E2A\u7BA1\u7A0B\u6D41</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            send<span class="token punctuation">.</span><span class="token function">getPos</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span>receive<span class="token punctuation">.</span><span class="token function">getPis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//\u542F\u52A8\u7EBF\u7A0B</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>send<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>receive<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//\u53D1\u9001\u6D88\u606F\u7EBF\u7A0B</span>
    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Send</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span><span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token class-name">PipedOutputStream</span> pos<span class="token punctuation">;</span>
        <span class="token keyword">public</span> <span class="token class-name">Send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            pos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PipedOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//\u5F97\u5230\u7EBF\u7A0B\u7BA1\u9053\u8F93\u51FA\u6D41</span>
        <span class="token keyword">public</span> <span class="token class-name">PipedOutputStream</span> <span class="token function">getPos</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> pos<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">&quot;hello wyz!&quot;</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                pos<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//\u5173\u95ED\u6D41</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>pos <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    pos<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>

        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//\u63A5\u53D7\u6D88\u606F\u7EBF\u7A0B</span>
    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Receive</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span><span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token class-name">PipedInputStream</span> pis<span class="token punctuation">;</span>
        <span class="token keyword">public</span> <span class="token class-name">Receive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            pis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PipedInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//\u5F97\u5230\u7EBF\u7A0B\u7684\u7BA1\u7A0B\u6D41</span>
        <span class="token keyword">public</span> <span class="token class-name">PipedInputStream</span> <span class="token function">getPis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> pis<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//\u8BFB\u53D6\u6570\u636E\u7684\u5BB9\u5668</span>
            <span class="token keyword">int</span> length <span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//\u8BB0\u5F55\u8BFB\u53D6\u7684\u957F\u5EA6</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                length <span class="token operator">=</span> pis<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//\u5173\u95ED\u6D41</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>pis <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    pis<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u63A5\u53D7\u7684\u5185\u5BB9\u4E3A:&quot;</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br></div></div><h4 id="\u6570\u636E\u64CD\u4F5C\u6D41" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u64CD\u4F5C\u6D41" aria-hidden="true">#</a> \u6570\u636E\u64CD\u4F5C\u6D41</h4><p>\u6570\u636E\u64CD\u4F5C\u6D41\u63D0\u4F9B\u4E86\u683C\u5F0F\u5316\u8BFB\u5165\u548C\u8F93\u51FA\u6570\u636E\u7684\u65B9\u6CD5\uFF0C\u5206\u522B\u4E3A <code>DataInputStream</code> \u548C <code>DataOutputStream</code>\u3002</p><p><code>DataInputStream</code> \u548C <code>DataOutputStream</code> \u683C\u5F0F\u5316\u8BFB\u5199\u6570\u636E\u793A\u4F8B</p><p>TODO \u611F\u89C9\u8FD9\u4E2A\u4F8B\u5B50\u4E0D\u592A\u597D</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u6570\u636E\u64CD\u4F5C\u6D41\u63D0\u4F9B\u4E86\u683C\u5F0F\u5316\u8BFB\u5165\u548C\u8F93\u51FA\u6570\u636E\u7684\u65B9\u6CD5\uFF0C\u5206\u522B\u4E3A DataInputStream \u548C DataOutputStream\u3002</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DataStreamDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//write(&quot;e:\\\\data.txt&quot;);</span>
        <span class="token function">read</span><span class="token punctuation">(</span><span class="token string">&quot;e:\\\\data.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">write</span><span class="token punctuation">(</span><span class="token class-name">String</span> path<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">DataOutputStream</span> dos <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            dos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataOutputStream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> str <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;\u624B\u673A&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;\u7535\u8111&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;\u5E73\u677F&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token keyword">float</span><span class="token punctuation">[</span><span class="token punctuation">]</span> price <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">5234.56f</span><span class="token punctuation">,</span><span class="token number">8989.3f</span><span class="token punctuation">,</span><span class="token number">3456.12f</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> str<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                dos<span class="token punctuation">.</span><span class="token function">writeChars</span><span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                dos<span class="token punctuation">.</span><span class="token function">writeChar</span><span class="token punctuation">(</span><span class="token char">&#39;\\t&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                dos<span class="token punctuation">.</span><span class="token function">writeFloat</span><span class="token punctuation">(</span>price<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                dos<span class="token punctuation">.</span><span class="token function">writeChar</span><span class="token punctuation">(</span><span class="token char">&#39;\\t&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                dos<span class="token punctuation">.</span><span class="token function">writeInt</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                dos<span class="token punctuation">.</span><span class="token function">writeChar</span><span class="token punctuation">(</span><span class="token char">&#39;\\n&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//\u5173\u95ED\u6D41</span>

            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5199\u51FA\u5B8C\u6210&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                dos<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token class-name">String</span> path<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">DataInputStream</span> dis <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            dis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataInputStream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 3.\u8FDB\u884C\u8BFB\u6216\u5199\u64CD\u4F5C</span>
            <span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// \u63A5\u6536\u540D\u79F0</span>
            <span class="token keyword">float</span> price <span class="token operator">=</span> <span class="token number">0.0f</span><span class="token punctuation">;</span> <span class="token comment">// \u63A5\u6536\u4EF7\u683C</span>
            <span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// \u63A5\u6536\u6570\u91CF</span>
            <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> temp <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// \u63A5\u6536\u5546\u54C1\u540D\u79F0</span>
            <span class="token keyword">int</span> len <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// \u4FDD\u5B58\u8BFB\u53D6\u6570\u636E\u7684\u4E2A\u6570</span>
            <span class="token keyword">char</span> c <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// &#39;\\u0000&#39;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                temp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token number">200</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u5F00\u8F9F\u7A7A\u95F4</span>
                len <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
                <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>c <span class="token operator">=</span> dis<span class="token punctuation">.</span><span class="token function">readChar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token char">&#39;\\t&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u63A5\u6536\u5185\u5BB9</span>
                    temp<span class="token punctuation">[</span>len<span class="token punctuation">]</span> <span class="token operator">=</span> c<span class="token punctuation">;</span>
                    len<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// \u8BFB\u53D6\u957F\u5EA6\u52A01</span>
                <span class="token punctuation">}</span>
                name <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>temp<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5C06\u5B57\u7B26\u6570\u7EC4\u53D8\u4E3AString</span>
                price <span class="token operator">=</span> dis<span class="token punctuation">.</span><span class="token function">readFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8BFB\u53D6\u4EF7\u683C</span>
                dis<span class="token punctuation">.</span><span class="token function">readChar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8BFB\u53D6\\t</span>
                num <span class="token operator">=</span> dis<span class="token punctuation">.</span><span class="token function">readInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8BFB\u53D6int</span>
                dis<span class="token punctuation">.</span><span class="token function">readChar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8BFB\u53D6\\n</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u540D\u79F0\uFF1A%s\uFF1B\u4EF7\u683C\uFF1A%5.2f\uFF1B\u6570\u91CF\uFF1A%d\\n&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> price<span class="token punctuation">,</span> num<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">EOFException</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u7ED3\u675F&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                dis<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br></div></div><h4 id="\u5408\u5E76\u6D41" tabindex="-1"><a class="header-anchor" href="#\u5408\u5E76\u6D41" aria-hidden="true">#</a> \u5408\u5E76\u6D41</h4><p>\u5408\u5E76\u6D41\u7684\u4E3B\u8981\u529F\u80FD\u662F\u5C06\u591A\u4E2A <code>InputStream</code> \u5408\u5E76\u4E3A\u4E00\u4E2A <code>InputStream</code> \u6D41\u3002\u5408\u5E76\u6D41\u7684\u529F\u80FD\u7531 <code>SequenceInputStream</code> \u5B8C\u6210\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u5408\u5E76\u6D41SequenceInputStream \uFF0C\u5C06\u591A\u4E2A\u8F93\u5165\u6D41\u5408\u5E76</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SequenceInputStreamDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">FileInputStream</span> fis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token string">&quot;e:\\\\2.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">FileInputStream</span> fis1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token string">&quot;e:\\\\3.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SequenceInputStream</span> sis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SequenceInputStream</span><span class="token punctuation">(</span>fis<span class="token punctuation">,</span>fis1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> len <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token class-name">FileOutputStream</span> fos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token string">&quot;e:\\\\5.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>len <span class="token operator">=</span> sis<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            fos<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>len<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        sis<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        fis<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        fis1<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        fos<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h3 id="\u5B57\u7B26\u6D41" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u6D41" aria-hidden="true">#</a> \u5B57\u7B26\u6D41</h3><p>\u5B57\u7B26\u6D41\u4E3B\u8981\u64CD\u4F5C\u5B57\u7B26\uFF0C\u4E00\u4E2A\u5B57\u7B26\u7B49\u4E8E\u4E24\u4E2A\u5B57\u8282\u3002</p><p>\u5B57\u7B26\u6D41\u6709\u4E24\u4E2A\u6838\u5FC3\u7C7B\uFF1A<code>Reader</code> \u7C7B\u548C <code>Writer</code> \u3002\u6240\u6709\u7684\u5B57\u7B26\u6D41\u7C7B\u90FD\u7EE7\u627F\u81EA\u8FD9\u4E24\u4E2A\u62BD\u8C61\u7C7B\u3002</p><p>\u5B57\u7B26\u6D41\u7684\u7C7B\u56FE\u7ED3\u6784\u5982\u4E0B\uFF1A</p><p>Writer\u7C7B\u7684\u5C42\u6B21\u7ED3\u6784\uFF1A</p><div class="language-mermaid ext-mermaid line-numbers-mode"><pre class="language-mermaid"><code><span class="token keyword">classDiagram</span>
	<span class="token keyword">class</span> Writer
	<span class="token keyword">class</span> OutputStreamWriter
	<span class="token keyword">class</span> BufferedWriter
	<span class="token keyword">class</span> StringWriter
	<span class="token keyword">class</span> PipedWriter
	<span class="token keyword">class</span> PrintWriter
	<span class="token keyword">class</span> CharArrayWriter
	<span class="token keyword">class</span> FileWriter
	
	Writer <span class="token arrow operator">&lt;|--</span> OutputStreamWriter
	Writer <span class="token arrow operator">&lt;|--</span> BufferedWriter
	Writer <span class="token arrow operator">&lt;|--</span> StringWriter
	Writer <span class="token arrow operator">&lt;|--</span> PipedWriter
	Writer <span class="token arrow operator">&lt;|--</span> PrintWriter
	Writer <span class="token arrow operator">&lt;|--</span> CharArrayWriter
	OutputStreamWriter <span class="token arrow operator">&lt;|--</span> FileWriter
	
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>Reader\u7684\u7C7B\u5C42\u6B21\u7ED3\u6784\uFF1A</p><div class="language-mermaid ext-mermaid line-numbers-mode"><pre class="language-mermaid"><code><span class="token keyword">classDiagram</span>
	<span class="token keyword">class</span> Reader
	<span class="token keyword">class</span> InputStreamReader
	<span class="token keyword">class</span> BufferedReader
	<span class="token keyword">class</span> CharArrayReader
	<span class="token keyword">class</span> FilterReader
	<span class="token keyword">class</span> PipedReader
	<span class="token keyword">class</span> StringReader
	<span class="token keyword">class</span> FileReader
	
	Reader <span class="token arrow operator">&lt;|--</span> InputStreamReader
	Reader <span class="token arrow operator">&lt;|--</span> BufferedReader
	Reader <span class="token arrow operator">&lt;|--</span> CharArrayReader
	Reader <span class="token arrow operator">&lt;|--</span> FilterReader
	Reader <span class="token arrow operator">&lt;|--</span> PipedReader
	Reader <span class="token arrow operator">&lt;|--</span> StringReader
	InputStreamReader <span class="token arrow operator">&lt;|--</span> FileReader
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h4 id="\u6587\u4EF6\u5B57\u7B26\u6D41" tabindex="-1"><a class="header-anchor" href="#\u6587\u4EF6\u5B57\u7B26\u6D41" aria-hidden="true">#</a> \u6587\u4EF6\u5B57\u7B26\u6D41</h4><p>\u6587\u4EF6\u5B57\u7B26\u6D41 <code>FileReader</code> \u548C <code>FileWriter</code> \u53EF\u4EE5\u5411\u6587\u4EF6\u8BFB\u5199\u6587\u672C\u6570\u636E\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u6587\u4EF6\u5B57\u7B26\u6D41</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FileReaderWriterDemo1</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//write(&quot;e:\\\\6.txt&quot;);</span>
        <span class="token function">read</span><span class="token punctuation">(</span><span class="token string">&quot;e:\\\\6.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">write</span><span class="token punctuation">(</span><span class="token class-name">String</span> path<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">Writer</span> writer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            writer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileWriter</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">;</span>
            writer<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
            writer<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u5237\u65B0\u7F13\u51B2\u533A</span>

        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>writer <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    writer<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token class-name">String</span> path<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">Reader</span> reader <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
          reader  <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">int</span> len <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
          <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
          <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>len <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
              <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>len<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BFB\u53D6\u5B8C\u6210&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>reader <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    reader<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br></div></div><h3 id="\u8F6C\u6362\u6D41" tabindex="-1"><a class="header-anchor" href="#\u8F6C\u6362\u6D41" aria-hidden="true">#</a> \u8F6C\u6362\u6D41</h3><p>\u8F6C\u6362\u6D41\u4E3B\u8981\u7528\u4E8E\u5728\u5B57\u8282\u548C\u5B57\u7B26\u4E4B\u95F4\u7684\u8F6C\u6362</p><p>\u7C7B\u56FE\u7ED3\u6784\u5982\u4E0B\uFF1A</p><p>\u8BFB\u7684\u8F6C\u5316\u8FC7\u7A0B\uFF1A</p><div class="language-mermaid ext-mermaid line-numbers-mode"><pre class="language-mermaid"><code><span class="token keyword">classDiagram</span>
	<span class="token keyword">class</span> Reader
	<span class="token keyword">class</span> InputStreamReader
	<span class="token keyword">class</span> StreamDecoder
	
	<span class="token keyword">class</span> Charset
	<span class="token keyword">class</span> InputStream
	
	Reader <span class="token arrow operator">&lt;|--</span> InputStreamReader
	InputStreamReader <span class="token arrow operator">*--</span> StreamDecoder
	Reader <span class="token arrow operator">&lt;|--</span> StreamDecoder
	StreamDecoder <span class="token arrow operator">*--</span> Charset
	StreamDecoder <span class="token arrow operator">*--</span> InputStream
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u5176\u4E2DStreamDecoder\u662F\u5B8C\u6210\u4ECE\u5B57\u8282\u5230\u5B57\u7B26\u7684\u89E3\u7801\u8FC7\u7A0B</p><p>\u5199\u7684\u8F6C\u5316\u8FC7\u7A0B\uFF1A</p><div class="language-mermaid ext-mermaid line-numbers-mode"><pre class="language-mermaid"><code><span class="token keyword">classDiagram</span>
	<span class="token keyword">class</span> Writer
	<span class="token keyword">class</span> OutputStreamWriter
	<span class="token keyword">class</span> StreamEncoder
	<span class="token keyword">class</span> Charset
	<span class="token keyword">class</span> OutputStream
	
	Writer <span class="token arrow operator">&lt;|--</span> OutputStreamWriter
	Writer <span class="token arrow operator">&lt;|--</span> StreamEncoder
	OutputStreamWriter <span class="token arrow operator">*--</span> StreamEncoder
	StreamEncoder <span class="token arrow operator">*--</span> Charset
	StreamEncoder <span class="token arrow operator">*--</span> OutputStream
	
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u5176\u4E2DStreamEncoder\u5B8C\u6210\u4E86\u603B\u5B57\u7B26\u5230\u5B57\u8282\u7684\u7F16\u7801\u8FC7\u7A0B</p><h4 id="\u5B57\u8282\u6D41\u8F6C\u6362\u5B57\u7B26\u6D41" tabindex="-1"><a class="header-anchor" href="#\u5B57\u8282\u6D41\u8F6C\u6362\u5B57\u7B26\u6D41" aria-hidden="true">#</a> \u5B57\u8282\u6D41\u8F6C\u6362\u5B57\u7B26\u6D41</h4><p>\u6211\u4EEC\u53EF\u4EE5\u5728\u7A0B\u5E8F\u4E2D\u901A\u8FC7 <code>InputStream</code> \u548C <code>Reader</code> \u4ECE\u6570\u636E\u6E90\u4E2D\u8BFB\u53D6\u6570\u636E\uFF0C\u7136\u540E\u4E5F\u53EF\u4EE5\u5728\u7A0B\u5E8F\u4E2D\u5C06\u6570\u636E\u901A\u8FC7 <code>OutputStream</code> \u548C <code>Writer</code> \u8F93\u51FA\u5230\u76EE\u6807\u5A92\u4ECB\u4E2D</p><p>\u4F7F\u7528 <code>InputStreamReader</code> \u53EF\u4EE5\u5C06\u8F93\u5165\u5B57\u8282\u6D41\u8F6C\u5316\u4E3A\u8F93\u5165\u5B57\u7B26\u6D41\uFF1B\u4F7F\u7528<code>OutputStreamWriter</code>\u53EF\u4EE5\u5C06\u8F93\u51FA\u5B57\u8282\u6D41\u8F6C\u5316\u4E3A\u8F93\u51FA\u5B57\u7B26\u6D41\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u5B57\u8282\u6D41\u8F6C\u6362\u6210\u5B57\u7B26\u6D41</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">InputStreamReaderDemo1</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">Reader</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token string">&quot;e:\\\\6.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> len <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>len <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>len<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        reader<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">Writer</span> writer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
          writer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OutputStreamWriter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token string">&quot;e:\\\\6.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">&quot;\u4E2D\u56FD&quot;</span><span class="token punctuation">;</span>
          writer<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
          writer<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">FileNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                writer<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><h2 id="bio\u4E2D\u7528\u5230\u7684\u8BBE\u8BA1\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#bio\u4E2D\u7528\u5230\u7684\u8BBE\u8BA1\u6A21\u5F0F" aria-hidden="true">#</a> BIO\u4E2D\u7528\u5230\u7684\u8BBE\u8BA1\u6A21\u5F0F</h2>`,69);function t(e,c){return p}var l=n(a,[["render",t],["__file","Java BIO.html.vue"]]);export{l as default};
