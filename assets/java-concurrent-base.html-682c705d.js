const e=JSON.parse('{"key":"v-28f464dc","path":"/java/java-concurrent/java-concurrent-base.html","title":"Java并发编程基础","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"内存模型","slug":"内存模型","link":"#内存模型","children":[]},{"level":2,"title":"线程简介","slug":"线程简介","link":"#线程简介","children":[]},{"level":2,"title":"启动和终止线程","slug":"启动和终止线程","link":"#启动和终止线程","children":[]},{"level":2,"title":"Thread常用方法","slug":"thread常用方法","link":"#thread常用方法","children":[]},{"level":2,"title":"线程间通信","slug":"线程间通信","link":"#线程间通信","children":[]}],"git":{"createdTime":1652769979000,"updatedTime":1708424156000,"contributors":[{"name":"xuliang","email":"895252461@qq.com","commits":2},{"name":"诗人都藏在水底","email":"895252461@qq.com","commits":2}]},"readingTime":{"minutes":20.46,"words":6137},"filePathRelative":"java/java-concurrent/java-concurrent-base.md","localizedDate":"2022年5月17日","excerpt":"<h1> Java并发编程基础</h1>\\n<h2> 内存模型</h2>\\n<p>略</p>\\n<h2> 线程简介</h2>\\n<p>操作系统在执行一个程序是会创建一个进程，在进程内可以创建多个线程，线程也是操作系统能够调度的最小单元。在JVM虚拟机内，线程拥有自己的程序计数器，虚拟机栈和局部变量等属性，也能够访问共享变量。CPU在这些线程上高速切换，让使用者感觉这些线程是在同时执行的。</p>\\n<p>Java程序天生就是多线程的。</p>\\n<p>使用多线程主要原因有一些几点：</p>\\n<ul>\\n<li>更多的处理器核心：多线程可以释放多核处理器的性能</li>\\n<li>更快的响应时间：利用多线程处理复杂业务。</li>\\n<li>更好的编程模型：Java为分开发人员提供了良好的编程模型。</li>\\n</ul>"}');export{e as data};
