const e=JSON.parse('{"key":"v-2e6b2ce2","path":"/middleware/netty/netty-junior-02.html","title":"Netty 入门 — 核心组件","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"Bootstrap：引导器","slug":"bootstrap-引导器","link":"#bootstrap-引导器","children":[]},{"level":2,"title":"ByteBuf：数据传输的载体","slug":"bytebuf-数据传输的载体","link":"#bytebuf-数据传输的载体","children":[]},{"level":2,"title":"Channel：数据传输的通道","slug":"channel-数据传输的通道","link":"#channel-数据传输的通道","children":[]},{"level":2,"title":"ChannelHandler：数据加工厂","slug":"channelhandler-数据加工厂","link":"#channelhandler-数据加工厂","children":[]},{"level":2,"title":"ChannelPipeline：服务编排器","slug":"channelpipeline-服务编排器","link":"#channelpipeline-服务编排器","children":[]},{"level":2,"title":"EventLoop：I/O 事件核心处理引擎","slug":"eventloop-i-o-事件核心处理引擎","link":"#eventloop-i-o-事件核心处理引擎","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[{"level":3,"title":"服务端组件执行流程","slug":"服务端组件执行流程","link":"#服务端组件执行流程","children":[]},{"level":3,"title":"服务端各组件的关系","slug":"服务端各组件的关系","link":"#服务端各组件的关系","children":[]}]}],"git":{"createdTime":1716888450000,"updatedTime":1716888450000,"contributors":[{"name":"诗人都藏在水底","email":"895252461@qq.com","commits":1}]},"readingTime":{"minutes":10.53,"words":3160},"filePathRelative":"middleware/netty/netty-junior-02.md","localizedDate":"2024年5月28日","excerpt":"<h1> Netty 入门 — 核心组件</h1>\\n<p>在上篇文章（<a href=\\"https://www.skjava.com/series/article/1122976839\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Netty 入门 — 亘古不变的Hello World</a>）中，我们简单认识了开发一个 Netty 服务端和客户端代码的主要步骤了，在这几大步骤中我们基本上可以看出 Netty 的几个核心组件。</p>\\n<p>在真正进入 Netty 的学习之前，我们非常有必要先对这些组件进行一个整体的认识，对于 Netty 入门阶段的讲解，大明哥采用<code>整体 —&gt; 分解 —&gt; 总结</code>的模式来阐述。对于一头牛，我们需要先知道这是一头牛，了解这头牛有哪些组织，然后再把这些组织一个一个地拆开来认识，清楚里面每一个组织的功能，最后再将这些组织组合成一头牛，是不是就会清晰很多。</p>"}');export{e as data};
