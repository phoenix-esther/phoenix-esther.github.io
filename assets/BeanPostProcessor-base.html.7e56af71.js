import{_ as e,o,c as p,b as n,d as c,w as i,a,e as s,r as l}from"./app.02d01547.js";const r={},u=a(`<h1 id="\u540E\u7F6E\u5904\u7406\u5668" tabindex="-1"><a class="header-anchor" href="#\u540E\u7F6E\u5904\u7406\u5668" aria-hidden="true">#</a> \u540E\u7F6E\u5904\u7406\u5668</h1><p>spring\u7684\u540E\u7F6E\u5904\u7406\u5668\u4E3B\u8981\u5206\u4E3A\u4E24\u7C7B\uFF0C\u4E00\u7C7B\u662FBeanFactoryPostProcessor\uFF0C\u8FD9\u4E2A\u7528\u6765\u5904\u7406BeanDefinition\u4FE1\u606F\uFF0C\u53E6\u4E00\u7C7B\u662FBeanPostProcessor\uFF0C\u8FD9\u4E2A\u7528\u6765\u5904\u7406Bean\u5B9E\u4F8B\u7684\u3002\u8FD9\u7BC7\u6587\u7AE0\u4E3B\u8981\u6765\u4ECB\u7ECD\u4E00\u4E0B\u540E\u7F6E\u5904\u7406\u5668\u7684\u7C7B\u5B9A\u4E49\u548C\u7EE7\u627F\u4F53\u7CFB\u3002</p><h2 id="beanfactorypostprocessor" tabindex="-1"><a class="header-anchor" href="#beanfactorypostprocessor" aria-hidden="true">#</a> BeanFactoryPostProcessor</h2><h3 id="beanfactorypostprocessor-1" tabindex="-1"><a class="header-anchor" href="#beanfactorypostprocessor-1" aria-hidden="true">#</a> BeanFactoryPostProcessor</h3><p>\u8FD9\u4E2A\u662F<code>BeanFactoryPostProcessor</code>\u7C7B\u5B9A\u4E49\u4FE1\u606F\uFF0C\u91CC\u9762\u53EA\u6709\u4E00\u4E2A\u63A5\u53E3\uFF0C\u5B83\u7684\u8C03\u7528\u65F6\u673A\u662F\u5728<code>BeanDefinition</code>\u52A0\u8F7D\u5B8C\u6210\u4E4B\u540E\uFF0C\u8FDB\u884CBean\u5B9E\u4F8B\u5316\u4E4B\u524D\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@FunctionalInterface</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">BeanFactoryPostProcessor</span> <span class="token punctuation">{</span>
	<span class="token doc-comment comment">/**
	 * \u5728BeanDefinition\u52A0\u8F7D\u5B8C\u6210\u4E4B\u540E\uFF0C\u8FDB\u884CBean\u5B9E\u4F8B\u5316\u4E4B\u524D\u8C03\u7528\u3002
	 */</span>
	<span class="token keyword">void</span> <span class="token function">postProcessBeanFactory</span><span class="token punctuation">(</span><span class="token class-name">ConfigurableListableBeanFactory</span> beanFactory<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="beandefinitionregistrypostprocessor" tabindex="-1"><a class="header-anchor" href="#beandefinitionregistrypostprocessor" aria-hidden="true">#</a> BeanDefinitionRegistryPostProcessor</h3><p><code>BeanDefinitionRegistryPostProcessor</code>\u662F<code>BeanFactoryPostProcessor</code>\u7684\u76F4\u63A5\u5B50\u7C7B\uFF0C\u8FD9\u4E2A\u540E\u7F6E\u5904\u7406\u5668\u4E3B\u8981\u662F\u7528\u6765\u6CE8\u518CBeanDefinition\u5B9A\u4E49\u3002\u8C03\u7528\u65F6\u673A\u4E5F\u662F\u5728<code>BeanDefinition</code>\u52A0\u8F7D\u5B8C\u6210\u4E4B\u540E\uFF0C\u8FDB\u884CBean\u5B9E\u4F8B\u5316\u4E4B\u524D\u3002\u4F46\u662F\u9700\u8981\u6CE8\u610F\u7684\u662F\u8FD9\u4E2A\u65B9\u6CD5\u4F1A\u5728\u7236\u7C7B\u7684<code>postProcessBeanFactory</code>\u65B9\u6CD5\u4E4B\u524D\u8C03\u7528\uFF0C\u56E0\u4E3A\u8FD9\u91CC\u4F1A\u6CE8\u518C\u4E00\u4E9B\u65B0\u7684BeanDefinition\uFF0C\u9700\u8981\u4FDD\u8BC1\u5728\u8C03\u7528\u7236\u7C7B\u4E2D\u7684<code>postProcessBeanFactory</code>\u65B9\u6CD5\u4E4B\u540E\uFF0C\u4E0D\u80FD\u6709\u65B0\u7684BeanDefinition\u6CE8\u518C\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">BeanDefinitionRegistryPostProcessor</span> <span class="token keyword">extends</span> <span class="token class-name">BeanFactoryPostProcessor</span> <span class="token punctuation">{</span>

	<span class="token doc-comment comment">/**
	 * \u8FD9\u4E2A\u6269\u5C55\u65B9\u6CD5\u4E3B\u8981\u662F\u7528\u6765\u6CE8\u518CBeanDefinition
	 */</span>
	<span class="token keyword">void</span> <span class="token function">postProcessBeanDefinitionRegistry</span><span class="token punctuation">(</span><span class="token class-name">BeanDefinitionRegistry</span> registry<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="configurationclasspostprocessor" tabindex="-1"><a class="header-anchor" href="#configurationclasspostprocessor" aria-hidden="true">#</a> ConfigurationClassPostProcessor</h3>`,10),k=n("code",null,"ConfigurationClassPostProcessor",-1),d=s("\u662F\u5177\u4F53\u7684\u5B9E\u73B0\u7C7B\uFF0C\u6CE8\u610F\u8FD9\u4E2A\u7C7B\u5B9E\u73B0\u4E86"),v=n("code",null,"BeanDefinitionRegistryPostProcessor",-1),m=s(", \u6240\u4EE5\u5185\u90E8\u6216\u6709\u4E24\u4E2A\u5B9E\u73B0\u65B9\u6CD5\uFF0C\u8FD9\u4E2A\u7C7B\u4E3B\u8981\u7528\u6765\u5904\u7406"),P=n("code",null,"@Configuration",-1),y=s("\u6CE8\u89E3\u3002\u5177\u4F53\u7684\u5B9E\u73B0\u53EF\u4EE5\u53C2\u8003"),b=s("ConfigurationClassPostProcessor\u8BE6\u89E3"),g=a(`<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConfigurationClassPostProcessor</span> <span class="token keyword">implements</span> <span class="token class-name">BeanDefinitionRegistryPostProcessor</span><span class="token punctuation">,</span>
		<span class="token class-name">PriorityOrdered</span><span class="token punctuation">,</span> <span class="token class-name">ResourceLoaderAware</span><span class="token punctuation">,</span> <span class="token class-name">ApplicationStartupAware</span><span class="token punctuation">,</span> <span class="token class-name">BeanClassLoaderAware</span><span class="token punctuation">,</span> <span class="token class-name">EnvironmentAware</span> <span class="token punctuation">{</span>
	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>		
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">postProcessBeanDefinitionRegistry</span><span class="token punctuation">(</span><span class="token class-name">BeanDefinitionRegistry</span> registry<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span>    
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">postProcessBeanFactory</span><span class="token punctuation">(</span><span class="token class-name">ConfigurableListableBeanFactory</span> beanFactory<span class="token punctuation">)</span> <span class="token punctuation">{</span>       
    	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="customautowireconfigurer" tabindex="-1"><a class="header-anchor" href="#customautowireconfigurer" aria-hidden="true">#</a> CustomAutowireConfigurer</h3><p>\u5177\u4F53\u7684\u5B9E\u73B0\u7C7B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomAutowireConfigurer</span> <span class="token keyword">implements</span> <span class="token class-name">BeanFactoryPostProcessor</span><span class="token punctuation">,</span> <span class="token class-name">BeanClassLoaderAware</span><span class="token punctuation">,</span> <span class="token class-name">Ordered</span> <span class="token punctuation">{</span>
	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="eventlistenermethodprocessor" tabindex="-1"><a class="header-anchor" href="#eventlistenermethodprocessor" aria-hidden="true">#</a> EventListenerMethodProcessor</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EventListenerMethodProcessor</span>
		<span class="token keyword">implements</span> <span class="token class-name">SmartInitializingSingleton</span><span class="token punctuation">,</span> <span class="token class-name">ApplicationContextAware</span><span class="token punctuation">,</span> <span class="token class-name">BeanFactoryPostProcessor</span> <span class="token punctuation">{</span>
		<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u540E\u7F6E\u5904\u7406\u5668\u7684\u8C03\u7528\u5165\u53E3" tabindex="-1"><a class="header-anchor" href="#\u540E\u7F6E\u5904\u7406\u5668\u7684\u8C03\u7528\u5165\u53E3" aria-hidden="true">#</a> \u540E\u7F6E\u5904\u7406\u5668\u7684\u8C03\u7528\u5165\u53E3</h3><p>\u5728\u5237\u65B0Bean\u5BB9\u5668\u7684\u65F6\u5019\uFF0C\u901A\u8FC7\u53CD\u5C04\u7684\u65B9\u5F0F\u8C03\u7528\u6CE8\u518C\u5230Bean\u5BB9\u5668\u4E2D\u7684\u540E\u7F6E\u5904\u7406\u5668\u3002\u5177\u4F53\u7684\u65B9\u6CD5\u5728<code>AbstractApplicationContext#refresh</code>\u65B9\u6CD5\u4E2D\u3002\u5173\u4E8EBean\u52A0\u8F7D\u7684\u6D41\u7A0B\uFF0C\u53C2\u89C1Bean\u52A0\u8F7D\u6D41\u7A0B\u76F8\u5173\u6587\u7AE0\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// AbstractApplicationContext#refresh</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span><span class="token punctuation">,</span> <span class="token class-name">IllegalStateException</span> <span class="token punctuation">{</span>
	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token comment">// \u6CE8\u518CBeanFactoryPostProcessor</span>
    <span class="token function">postProcessBeanFactory</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u53D1\u5C04\u6267\u884CBeanFactoryPostProcessor</span>
	<span class="token function">invokeBeanFactoryPostProcessors</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u54B1\u4EEC\u6765\u770B\u770B<code>invokeBeanFactoryPostProcessors(beanFactory);</code>\u65B9\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// AbstractApplicationContext#invokeBeanFactoryPostProcessors</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">invokeBeanFactoryPostProcessors</span><span class="token punctuation">(</span><span class="token class-name">ConfigurableListableBeanFactory</span> beanFactory<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">PostProcessorRegistrationDelegate</span><span class="token punctuation">.</span><span class="token function">invokeBeanFactoryPostProcessors</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">,</span> <span class="token function">getBeanFactoryPostProcessors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Detect a LoadTimeWeaver and prepare for weaving, if found in the meantime</span>
    <span class="token comment">// (e.g. through an @Bean method registered by ConfigurationClassPostProcessor)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">NativeDetector</span><span class="token punctuation">.</span><span class="token function">inNativeImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> beanFactory<span class="token punctuation">.</span><span class="token function">getTempClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> 
        beanFactory<span class="token punctuation">.</span><span class="token function">containsBean</span><span class="token punctuation">(</span>LOAD_TIME_WEAVER_BEAN_NAME<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        beanFactory<span class="token punctuation">.</span><span class="token function">addBeanPostProcessor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LoadTimeWeaverAwareProcessor</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        beanFactory<span class="token punctuation">.</span><span class="token function">setTempClassLoader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ContextTypeMatchClassLoader</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">.</span><span class="token function">getBeanClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u9762\u6700\u91CD\u8981\u7684\u5C31\u662F<code>PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(beanFactory, getBeanFactoryPostProcessors());</code>\u8FD9\u884C\u8BED\u53E5\uFF0C\u5728\u770B\u4EE3\u7801\u4E4B\u524D\u5148\u634B\u4E00\u4E0B\u4EE3\u7801\u7684\u6267\u884C\u903B\u8F91\uFF1A</p><p>\u9996\u5148BeanFactoryPostProcessor\u6709\u4E24\u4E2A\u62BD\u8C61\u7C7B<code>BeanFactoryPostProcessor</code>\u548C<code>BeanDefinitionRegistryPostProcessor</code>,\u5728\u8C03\u7528\u662F\u8981\u4FDD\u8BC1\u5148\u6267\u884C<code>BeanDefinitionRegistryPostProcessor#postProcessBeanDefinitionRegistry</code>\u65B9\u6CD5\u6CE8\u518CBeanDefinition\uFF0C\u7136\u540E\u5728\u6267\u884C<code>BeanFactoryPostProcessor#postProcessBeanFactory</code>\u65B9\u6CD5\uFF0C\u8FD9\u6837\u624D\u80FD\u4FDD\u8BC1\u5728\u6267\u884C<code>BeanFactoryPostProcessor#postProcessBeanFactory</code>\u65B9\u6CD5\u4E4B\u524D\uFF0C\u6240\u6709\u7684BeanDefinition\u90FD\u4EE5\u6CE8\u518C\u5B8C\u6210\u3002</p><p>\u5176\u6B21\uFF0C\u4E0D\u540C\u7684BeanFactoryPostProcessor\u7684\u6267\u884C\u4E5F\u662F\u5206\u4F18\u5148\u7EA7\u7684\uFF0C\u6700\u4F18\u5148\u6267\u884C\u7684\u662F\u901A\u8FC7\u5165\u53C2\u4F20\u5165\u7684BeanFactoryPostProcessor\uFF0C\u7136\u540E\u4F1A\u901A\u8FC7BenFactory\u5BB9\u5668\u4E2D\u67E5\u627E\u5B9E\u73B0\u4E86<code>PriorityOrdered</code>\u7C7B\u7684BeanFactoryPostProcessor\uFF0C\u8FD9\u4E2A\u5217\u8868\u4E5F\u4F1A\u5148\u8FDB\u884C\u6392\u5E8F\uFF0C\u7136\u540E\u5728\u904D\u5386\u6267\u884C\u3002\u5728\u7136\u540E\u662F\u5B9E\u73B0\u4E86<code>Ordered</code>\u7C7B\u7684BeanFactoryPostProcessor\uFF0C\u6700\u540E\u662F\u5176\u4ED6\u5168\u90E8\u7684BeanFactoryPostProcessor\uFF0C\u8FD9\u91CC\u6709\u4E00\u4E2A\u70B9\uFF0C\u5C31\u662FBeanFactoryPostProcessor\u4E2D\u53EF\u80FD\u4E5F\u4F1A\u6CE8\u518CBeanFactoryPostProcessor\u7C7B\u578B\u7684BeanDefinition\uFF0C\u6240\u4EE5\u4F1A\u6709\u4E00\u4E2A\u5FAA\u73AF\u68C0\u6D4B\u7684\u903B\u8F91\uFF0C\u6765\u4FDD\u8BC1\u6240\u6709\u6CE8\u518C\u7684BeanFactoryPostProcessor\u90FD\u80FD\u591F\u88AB\u52A0\u8F7D\u3002\u8FD9\u6837\u8BBE\u8BA1\u6709\u4E00\u4E2A\u597D\u5904\uFF0C\u5C31\u662F\u53EF\u4EE5\u901A\u8FC7\u9AD8\u4F18\u5148\u7EA7\u7684BeanFactoryPostProcessor\u6CE8\u518C\u4F4E\u4F18\u5148\u7EA7\u7684BeanFactoryPostProcessor\uFF0C\u5E76\u4FDD\u8BC1\u6267\u884C\u987A\u5E8F\u3002\u5728\u4F4E\u4F18\u5148\u7EA7\u4E2D\u4E5F\u53EF\u4EE5\u6CE8\u518C\u9AD8\u4F18\u5148\u7EA7\u7684\u540E\u7F6E\u5904\u7406\u5668\uFF0C\u4F46\u53EA\u80FD\u591F\u5728\u6700\u540E\u6267\u884C\u3002</p><p>\u6700\u540E\uFF0C\u9488\u5BF9<code>postProcessBeanFactory</code>\u8FD9\u4E00\u65B9\u6CD5\uFF0C<code>BeanDefinitionRegistryPostProcessor</code>\u7C7B\u578B\u4E5F\u4F1A\u4F18\u5148\u4E8E<code>BeanFactoryPostProcessor</code>\u6267\u884C\u3002</p><p>\u73B0\u5728\u6765\u770B\u4EE3\u7801\u5B9E\u73B0\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// PostProcessorRegistrationDelegate#invokeBeanFactoryPostProcessors</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">invokeBeanFactoryPostProcessors</span><span class="token punctuation">(</span>
    <span class="token class-name">ConfigurableListableBeanFactory</span> beanFactory<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BeanFactoryPostProcessor</span><span class="token punctuation">&gt;</span></span> beanFactoryPostProcessors<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7528\u4E8E\u8BB0\u5F55\u6267\u884C\u8FC7\u7684bean\u540D\u79F0</span>
    <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> processedBeans <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5BF9BeanDefinitionRegistry \u7C7B\u578B\u7684\u5904\u7406</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>beanFactory <span class="token keyword">instanceof</span> <span class="token class-name">BeanDefinitionRegistry</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">BeanDefinitionRegistry</span> registry <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">BeanDefinitionRegistry</span><span class="token punctuation">)</span> beanFactory<span class="token punctuation">;</span>
        <span class="token comment">// \u7528\u4E8E\u8BB0\u5F55\u5E38\u89C4 BeanFactoryPostProcessor</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BeanFactoryPostProcessor</span><span class="token punctuation">&gt;</span></span> regularPostProcessors <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u7528\u4E8E\u8BB0\u5F55 BeanDefinitionRegistryPostProcessor</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BeanDefinitionRegistryPostProcessor</span><span class="token punctuation">&gt;</span></span> registryProcessors <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">/* \u7B2C\u4E00\u6B65\uFF1A\u4F18\u5148\u5904\u7406\u53C2\u6570\u5217\u8868beanFactoryPostProcessors\u4E2D\u662FBeanDefinitionRegistryPostProcessor\u7C7B\u578B\u7684processor */</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">BeanFactoryPostProcessor</span> postProcessor <span class="token operator">:</span> beanFactoryPostProcessors<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>postProcessor <span class="token keyword">instanceof</span> <span class="token class-name">BeanDefinitionRegistryPostProcessor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">BeanDefinitionRegistryPostProcessor</span> registryProcessor <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">BeanDefinitionRegistryPostProcessor</span><span class="token punctuation">)</span> postProcessor<span class="token punctuation">;</span>
                <span class="token comment">/* \u4F18\u5148\u8C03\u7528{@link BeanDefinitionRegisterPostProcessor#postProcessBeanDefinitionRegistry}*/</span>
                registryProcessor<span class="token punctuation">.</span><span class="token function">postProcessBeanDefinitionRegistry</span><span class="token punctuation">(</span>registry<span class="token punctuation">)</span><span class="token punctuation">;</span>
                registryProcessors<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>registryProcessor<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u8BB0\u5F55\u5E38\u89C4BeanDefinitionPostProcessor</span>
                regularPostProcessors<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>postProcessor<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// currentRegistryProcessors \u7528\u4E8E\u8BB0\u5F55\u5F53\u524D\u6B63\u8981\u88AB\u6267\u884C\u7684BeanDefinitionRegistryPostProcessor</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BeanDefinitionRegistryPostProcessor</span><span class="token punctuation">&gt;</span></span> currentRegistryProcessors <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u7B2C\u4E8C\u6B65\uFF1A\u5728BeanFactory\u4E2D\u67E5\u627E\u5B9E\u73B0\u4E86PriorityOrdered\u7684BeanDefinitionRegistryPostProcessors\uFF0C\u5E76\u8C03\u7528\u3002</span>
        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> postProcessorNames <span class="token operator">=</span>
            beanFactory<span class="token punctuation">.</span><span class="token function">getBeanNamesForType</span><span class="token punctuation">(</span><span class="token class-name">BeanDefinitionRegistryPostProcessor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> ppName <span class="token operator">:</span> postProcessorNames<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>beanFactory<span class="token punctuation">.</span><span class="token function">isTypeMatch</span><span class="token punctuation">(</span>ppName<span class="token punctuation">,</span> <span class="token class-name">PriorityOrdered</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u5B9E\u4F8B\u5316\u540E\u7F6E\u5904\u7406\u5668</span>
                currentRegistryProcessors<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>ppName<span class="token punctuation">,</span> <span class="token class-name">BeanDefinitionRegistryPostProcessor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// \u8BB0\u5F55bean name\uFF0C\u8868\u793A\u8FD9\u4E2A\u7C7B\u5DF2\u7ECF\u5904\u7406\u8FC7\u3002</span>
                processedBeans<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>ppName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u6392\u5E8F\uFF0C\u6BCF\u4E00\u5927\u7C7B\u5185\u90E8\u4E5F\u4F1A\u8FDB\u884C\u6392\u5E8F</span>
        <span class="token function">sortPostProcessors</span><span class="token punctuation">(</span>currentRegistryProcessors<span class="token punctuation">,</span> beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u5C06currentRegistryProcessors\u5217\u8868\u8BB0\u5F55\u5230registryProcessors \u4E2D</span>
        registryProcessors<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>currentRegistryProcessors<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u8FD9\u91CC\u5C31\u4F1A\u904D\u5386\u5217\u8868\u8C03\u7528\`BeanDefinitionRegistry#postProcessBeanDefinitionRegistry()\`\u65B9\u6CD5</span>
        <span class="token function">invokeBeanDefinitionRegistryPostProcessors</span><span class="token punctuation">(</span>currentRegistryProcessors<span class="token punctuation">,</span> registry<span class="token punctuation">,</span> beanFactory<span class="token punctuation">.</span><span class="token function">getApplicationStartup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6E05\u7A7A</span>
        currentRegistryProcessors<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">// \u7B2C\u4E09\u6B65\uFF1A\u63A5\u4E0B\u6765\uFF0C\u5728BeanFactory\u4E2D\u67E5\u627E\u5B9E\u73B0\u4E86Ordered\u7684BeanDefinitionRegistryPostProcessors\uFF0C\u5E76\u8C03\u7528\u3002</span>
        <span class="token comment">// \u5728\u8FD9\u4E00\u6B65\u4E2D\u5C31\u53EF\u4EE5\u770B\u5230\uFF0C\u903B\u8F91\u548C\u7B2C\u4E00\u6B65\u57FA\u672C\u4E0A\u662F\u91CD\u590D\u7684\u3002</span>
        postProcessorNames <span class="token operator">=</span> beanFactory<span class="token punctuation">.</span><span class="token function">getBeanNamesForType</span><span class="token punctuation">(</span><span class="token class-name">BeanDefinitionRegistryPostProcessor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> ppName <span class="token operator">:</span> postProcessorNames<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>processedBeans<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>ppName<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> beanFactory<span class="token punctuation">.</span><span class="token function">isTypeMatch</span><span class="token punctuation">(</span>ppName<span class="token punctuation">,</span> <span class="token class-name">Ordered</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                currentRegistryProcessors<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>ppName<span class="token punctuation">,</span> <span class="token class-name">BeanDefinitionRegistryPostProcessor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                processedBeans<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>ppName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token function">sortPostProcessors</span><span class="token punctuation">(</span>currentRegistryProcessors<span class="token punctuation">,</span> beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
        registryProcessors<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>currentRegistryProcessors<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">invokeBeanDefinitionRegistryPostProcessors</span><span class="token punctuation">(</span>currentRegistryProcessors<span class="token punctuation">,</span> registry<span class="token punctuation">,</span> beanFactory<span class="token punctuation">.</span><span class="token function">getApplicationStartup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        currentRegistryProcessors<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u7B2C\u56DB\u6B65\uFF1A\u8C03\u7528\u6240\u6709\u5176\u4ED6BeanDefinitionRegistryPostProcessor(\u6CA1\u6709\u5B9E\u73B0PriorityOrdered\u6216\u8005Ordered\u63A5\u53E3)\uFF0C\u76F4\u5230\u6CA1\u6709\u5176\u4ED6\u7684\u51FA\u73B0\u3002</span>
        <span class="token keyword">boolean</span> reiterate <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token comment">// \u8FD9\u4E2A\u5FAA\u73AF\u903B\u8F91\u5C31\u662F\u4FDD\u8BC1\u6211\u5728\u540E\u7F6E\u5904\u7406\u5668\u4E2D\u6CE8\u518C\u7684BeanFactoryPostProcessor\u7C7B\u578B\u7684BeanDefinition\u4E5F\u80FD\u591F\u88AB\u89E3\u6790\u6267\u884C\u3002</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>reiterate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            reiterate <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            postProcessorNames <span class="token operator">=</span> beanFactory<span class="token punctuation">.</span><span class="token function">getBeanNamesForType</span><span class="token punctuation">(</span><span class="token class-name">BeanDefinitionRegistryPostProcessor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> ppName <span class="token operator">:</span> postProcessorNames<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>processedBeans<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>ppName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u53D1\u73B0\u4E86\u4E00\u4E2A\u5C1A\u672A\u88AB\u5904\u7406\u7684 BeanDefinitionRegistryPostProcessor</span>
                    currentRegistryProcessors<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>ppName<span class="token punctuation">,</span> <span class="token class-name">BeanDefinitionRegistryPostProcessor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    processedBeans<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>ppName<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    reiterate <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token function">sortPostProcessors</span><span class="token punctuation">(</span>currentRegistryProcessors<span class="token punctuation">,</span> beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
            registryProcessors<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>currentRegistryProcessors<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">invokeBeanDefinitionRegistryPostProcessors</span><span class="token punctuation">(</span>currentRegistryProcessors<span class="token punctuation">,</span>
                                                       registry<span class="token punctuation">,</span> beanFactory<span class="token punctuation">.</span><span class="token function">getApplicationStartup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            currentRegistryProcessors<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">/* \u6267\u884CBeanDefinitionRegistryPostProcessor \u7C7B\u578B\u7684\u7684\u56DE\u8C03 postProcessBeanFactory() */</span>
        <span class="token function">invokeBeanFactoryPostProcessors</span><span class="token punctuation">(</span>registryProcessors<span class="token punctuation">,</span> beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6267\u884C BeanFactoryPostProcessor \u7C7B\u578B\u7684\u56DE\u8C03 postProcessBeanFactory()</span>
        <span class="token function">invokeBeanFactoryPostProcessors</span><span class="token punctuation">(</span>regularPostProcessors<span class="token punctuation">,</span> beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u8C03\u7528\u5728\u4E0A\u4E0B\u6587\u5B9E\u4F8B\u4E2D\u6CE8\u518C\u7684\u5DE5\u5382\u5904\u7406\u5668</span>
        <span class="token function">invokeBeanFactoryPostProcessors</span><span class="token punctuation">(</span>beanFactoryPostProcessors<span class="token punctuation">,</span> beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u7B2C\u4E94\u6B65\uFF1A\u5728BeanFactory\u4E2D\u67E5\u627EBeanFactoryPostProcessor.class\u7C7B\u578B\u7684beanName</span>
    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> postProcessorNames <span class="token operator">=</span>
        beanFactory<span class="token punctuation">.</span><span class="token function">getBeanNamesForType</span><span class="token punctuation">(</span><span class="token class-name">BeanFactoryPostProcessor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">/* BeanFactoryPostProcessors \u628A\u5B9E\u73B0\u4E86 PriorityOrdered, Ordered, \u548C\u5176\u4ED6\u7684BeanFactoryPostProcessors\u5206\u5F00 */</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BeanFactoryPostProcessor</span><span class="token punctuation">&gt;</span></span> priorityOrderedPostProcessors <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> orderedPostProcessorNames <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> nonOrderedPostProcessorNames <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">/* \u8FD9\u91CC\u4F1A\u4E00\u6B21\u627E\u51FA\u6240\u6709BeanFactoryPostProcessor\u7C7B\u578B\u7684bean name,\u56E0\u4E3A\u5230\u8FD9\u91CC\u5C31\u4E0D\u4F1A\u6709\u65B0\u7684BeanDefinition\u6CE8\u518C\u5230\u5BB9\u5668\u4E2D\u4E86\u3002
       \u8FD9\u91CC\u4E5F\u6709\u4E00\u4E2A\u5B9E\u73B0\u7EC6\u8282\uFF0C\u5C31\u662F\u6BCF\u4E00\u4E2A\u7B49\u7EA7\u7684BeanDefinition\u53EA\u6709\u5230\u4E86\u8C03\u7528\u7684\u65F6\u5019\u624D\u4F1A\u521D\u59CB\u5316\uFF0C\u8FD9\u6837\u9AD8\u7B49\u7EA7\u7684BeanFactoryPostProcessor\u5C31\u53EF\u4EE5
       \u4FEE\u6539\u4F4E\u7B49\u7EA7\u7684BeanFactoryPostProcessor\u7684bean\u5B9A\u4E49\u4FE1\u606F\u4E86\u3002
    */</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> ppName <span class="token operator">:</span> postProcessorNames<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>processedBeans<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>ppName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u8DF3\u8FC7----\u5DF2\u5728\u4E0A\u8FF0\u7B2C\u4E00\u9636\u6BB5\u5904\u7406\u8FC7</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>beanFactory<span class="token punctuation">.</span><span class="token function">isTypeMatch</span><span class="token punctuation">(</span>ppName<span class="token punctuation">,</span> <span class="token class-name">PriorityOrdered</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            priorityOrderedPostProcessors<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>ppName<span class="token punctuation">,</span> <span class="token class-name">BeanFactoryPostProcessor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>beanFactory<span class="token punctuation">.</span><span class="token function">isTypeMatch</span><span class="token punctuation">(</span>ppName<span class="token punctuation">,</span> <span class="token class-name">Ordered</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            orderedPostProcessorNames<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>ppName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            nonOrderedPostProcessorNames<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>ppName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u7B2C\u516D\u6B65\uFF1A\u8C03\u7528\u5B9E\u73B0PriorityOrdered\u7684BeanFactoryPostProcessors\u3002</span>
    <span class="token function">sortPostProcessors</span><span class="token punctuation">(</span>priorityOrderedPostProcessors<span class="token punctuation">,</span> beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">invokeBeanFactoryPostProcessors</span><span class="token punctuation">(</span>priorityOrderedPostProcessors<span class="token punctuation">,</span> beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u7B2C\u4E03\u90E8\uFF1A\u8C03\u7528\u5B9E\u73B0Ordered\u7684BeanFactoryPostProcessors\u3002</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BeanFactoryPostProcessor</span><span class="token punctuation">&gt;</span></span> orderedPostProcessors <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>orderedPostProcessorNames<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> postProcessorName <span class="token operator">:</span> orderedPostProcessorNames<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        orderedPostProcessors<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>postProcessorName<span class="token punctuation">,</span> <span class="token class-name">BeanFactoryPostProcessor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">sortPostProcessors</span><span class="token punctuation">(</span>orderedPostProcessors<span class="token punctuation">,</span> beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">invokeBeanFactoryPostProcessors</span><span class="token punctuation">(</span>orderedPostProcessors<span class="token punctuation">,</span> beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u7B2C\u516B\u6B65\uFF1A\u8C03\u7528\u6240\u6709\u5176\u4ED6BeanFactoryPostProcessors\u3002</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BeanFactoryPostProcessor</span><span class="token punctuation">&gt;</span></span> nonOrderedPostProcessors <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>nonOrderedPostProcessorNames<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> postProcessorName <span class="token operator">:</span> nonOrderedPostProcessorNames<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        nonOrderedPostProcessors<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>postProcessorName<span class="token punctuation">,</span> <span class="token class-name">BeanFactoryPostProcessor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">invokeBeanFactoryPostProcessors</span><span class="token punctuation">(</span>nonOrderedPostProcessors<span class="token punctuation">,</span> beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//\u6E05\u9664\u7F13\u5B58merged bean definitions\uFF0C\u56E0\u4E3A\u540E\u5904\u7406\u5668\u53EF\u80FD\u5DF2\u7ECF\u4FEE\u6539\u4E86\u539F\u59CB\u5143\u6570\u636E\uFF0C\u4F8B\u5982\u66FF\u6362\u503C\u4E2D\u7684\u5360\u4F4D\u7B26...</span>
    beanFactory<span class="token punctuation">.</span><span class="token function">clearMetadataCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u81F3\u6B64\uFF0C\u6240\u6709\u7684BeanFactoryPostProcessor\u8C03\u7528\u5B8C\u6210\u3002</p><h2 id="beanpostprocessor" tabindex="-1"><a class="header-anchor" href="#beanpostprocessor" aria-hidden="true">#</a> BeanPostProcessor</h2>`,19);function f(B,F){const t=l("RouterLink");return o(),p("div",null,[u,n("p",null,[k,d,v,m,P,y,c(t,{to:"/spring/spring-bean-post-processor/BeanPostProcessor-ConfigurationClassPostProcessor.html"},{default:i(()=>[b]),_:1})]),g])}var h=e(r,[["render",f],["__file","BeanPostProcessor-base.html.vue"]]);export{h as default};
