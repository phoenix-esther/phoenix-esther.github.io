const e=JSON.parse('{"key":"v-155dee6c","path":"/java/java-io/java-bio.html","title":"Java BIO","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"BIO 简介","slug":"bio-简介","link":"#bio-简介","children":[{"level":3,"title":"BIO 的性能缺陷","slug":"bio-的性能缺陷","link":"#bio-的性能缺陷","children":[]}]},{"level":2,"title":"俯视Java BIO","slug":"俯视java-bio","link":"#俯视java-bio","children":[{"level":3,"title":"字节流","slug":"字节流","link":"#字节流","children":[]},{"level":3,"title":"字符流","slug":"字符流","link":"#字符流","children":[]},{"level":3,"title":"转换流","slug":"转换流","link":"#转换流","children":[]}]},{"level":2,"title":"BIO中用到的设计模式","slug":"bio中用到的设计模式","link":"#bio中用到的设计模式","children":[]}],"git":{"createdTime":1659075927000,"updatedTime":1659075927000,"contributors":[{"name":"诗人都藏在水底","email":"895252461@qq.com","commits":1}]},"readingTime":{"minutes":8.93,"words":2678},"filePathRelative":"java/java-io/java-bio.md","localizedDate":"2022年7月29日","excerpt":"<h1> Java BIO</h1>\\n<p>BIO（blocking IO） 即阻塞 IO。指的主要是传统的 <code>java.io</code> 包，它基于流模型实现。</p>\\n<h2> BIO 简介</h2>\\n<p><code>java.io</code> 包提供了我们最熟知的一些 IO 功能，比如 File 抽象、输入输出流等。交互方式是同步、阻塞的方式，也就是说，在读取输入流或者写入输出流时，在读、写动作完成之前，线程会一直阻塞在那里，它们之间的调用是可靠的线性顺序。</p>\\n<p>很多时候，人们也把 java.net 下面提供的部分网络 API，比如 <code>Socket</code>、<code>ServerSocket</code>、<code>HttpURLConnection</code> 也归类到同步阻塞 IO 类库，因为网络通信同样是 IO 行为。</p>"}');export{e as data};
