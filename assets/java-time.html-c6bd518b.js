import{_ as n,V as s,W as a,a0 as t}from"./framework-5dde3bca.js";const e={},p=t(`<h1 id="java-时间操作" tabindex="-1"><a class="header-anchor" href="#java-时间操作" aria-hidden="true">#</a> Java 时间操作</h1><h2 id="一-正则校验" tabindex="-1"><a class="header-anchor" href="#一-正则校验" aria-hidden="true">#</a> 一：正则校验</h2><h3 id="匹配格式-yyyy-mm-dd-hh-mm-ss" tabindex="-1"><a class="header-anchor" href="#匹配格式-yyyy-mm-dd-hh-mm-ss" aria-hidden="true">#</a> 匹配格式：yyyy-MM-dd HH:mm:ss</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> timeRegex <span class="token operator">=</span> <span class="token string">&quot;^((([0-9]{3}[1-9]|[0-9]{2}[1-9][0-9]{1}|[0-9]{1}[1-9][0-9]{2}|[1-9][0-9]{3})-(((0[13578]|1[02])-(0[1-9]|[12][0-9]|3[01]))|((0[469]|11)-(0[1-9]|[12][0-9]|30))|(02-(0[1-9]|[1][0-9]|2[0-8]))))|((([0-9]{2})(0[48]|[2468][048]|[13579][26])|((0[48]|[2468][048]|[3579][26])00))-02-29))\\\\s+([0-1]?[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])$&quot;</span><span class="token punctuation">;</span>
 
<span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span>timeRegex<span class="token punctuation">,</span> <span class="token string">&quot;2012-12-31 12:07:59&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="匹配格式-yyyy-mm-dd" tabindex="-1"><a class="header-anchor" href="#匹配格式-yyyy-mm-dd" aria-hidden="true">#</a> 匹配格式：yyyy-MM-dd</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> timeRegex1 <span class="token operator">=</span> <span class="token string">&quot;(([0-9]{3}[1-9]|[0-9]{2}[1-9][0-9]{1}|[0-9]{1}[1-9][0-9]{2}|[1-9][0-9]{3})-(((0[13578]|1[02])-(0[1-9]|[12][0-9]|3[01]))|&quot;</span><span class="token operator">+</span>
<span class="token string">&quot;((0[469]|11)-(0[1-9]|[12][0-9]|30))|(02-(0[1-9]|[1][0-9]|2[0-8]))))|((([0-9]{2})(0[48]|[2468][048]|[13579][26])|&quot;</span><span class="token operator">+</span>
<span class="token string">&quot;((0[48]|[2468][048]|[3579][26])00))-02-29)$&quot;</span><span class="token punctuation">;</span>
 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span>timeRegex1<span class="token punctuation">,</span> <span class="token string">&quot;2018-11-30&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="匹配格式-yyyy-mm-dd-1" tabindex="-1"><a class="header-anchor" href="#匹配格式-yyyy-mm-dd-1" aria-hidden="true">#</a> 匹配格式：yyyy/MM/dd</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> timeRegex2 <span class="token operator">=</span> <span class="token string">&quot;(([0-9]{3}[1-9]|[0-9]{2}[1-9][0-9]{1}|[0-9]{1}[1-9][0-9]{2}|[1-9][0-9]{3})\\\\/(((0[13578]|1[02])\\\\/(0[1-9]|[12][0-9]|3[01]))|&quot;</span><span class="token operator">+</span>
<span class="token string">&quot;((0[469]|11)\\\\/(0[1-9]|[12][0-9]|30))|(02\\\\/(0[1-9]|[1][0-9]|2[0-8]))))|((([0-9]{2})(0[48]|[2468][048]|[13579][26])|&quot;</span><span class="token operator">+</span>
<span class="token string">&quot;((0[48]|[2468][048]|[3579][26])00))\\\\/02\\\\/29)$&quot;</span><span class="token punctuation">;</span>
 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span>timeRegex2<span class="token punctuation">,</span><span class="token string">&quot;2018/12/31&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="匹配格式-yyyy-mm-dd-hh-mm-ss-1" tabindex="-1"><a class="header-anchor" href="#匹配格式-yyyy-mm-dd-hh-mm-ss-1" aria-hidden="true">#</a> 匹配格式：yyyy/MM/dd HH:mm:ss</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> timeRegex3 <span class="token operator">=</span> <span class="token string">&quot;((([0-9]{3}[1-9]|[0-9]{2}[1-9][0-9]{1}|[0-9]{1}[1-9][0-9]{2}|[1-9][0-9]{3})\\\\/(((0[13578]|1[02])\\\\/(0[1-9]|[12][0-9]|3[01]))|&quot;</span><span class="token operator">+</span>
<span class="token string">&quot;((0[469]|11)\\\\/(0[1-9]|[12][0-9]|30))|(02\\\\/(0[1-9]|[1][0-9]|2[0-8]))))|((([0-9]{2})(0[48]|[2468][048]|[13579][26])|&quot;</span><span class="token operator">+</span>
<span class="token string">&quot;((0[48]|[2468][048]|[3579][26])00))\\\\/02\\\\/29))\\\\s([0-1][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])$&quot;</span><span class="token punctuation">;</span>
 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span>timeRegex3<span class="token punctuation">,</span><span class="token string">&quot;2018/12/30 12:29:59&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="匹配格式-yyyymmdd" tabindex="-1"><a class="header-anchor" href="#匹配格式-yyyymmdd" aria-hidden="true">#</a> 匹配格式：yyyyMMdd</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> timeRegex4 <span class="token operator">=</span> <span class="token string">&quot;(([0-9]{3}[1-9]|[0-9]{2}[1-9][0-9]{1}|[0-9]{1}[1-9][0-9]{2}|[1-9][0-9]{3})(((0[13578]|1[02])(0[1-9]|[12][0-9]|3[01]))|&quot;</span><span class="token operator">+</span>
<span class="token string">&quot;((0[469]|11)(0[1-9]|[12][0-9]|30))|(02(0[1-9]|[1][0-9]|2[0-8]))))|((([0-9]{2})(0[48]|[2468][048]|[13579][26])|&quot;</span><span class="token operator">+</span>
<span class="token string">&quot;((0[48]|[2468][048]|[3579][26])00))0229)$&quot;</span><span class="token punctuation">;</span>
 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span>timeRegex4<span class="token punctuation">,</span> <span class="token string">&quot;20181223&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="匹配格式-yyyymmddhhmmss" tabindex="-1"><a class="header-anchor" href="#匹配格式-yyyymmddhhmmss" aria-hidden="true">#</a> 匹配格式：yyyyMMddHHmmss</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> timeRegex5 <span class="token operator">=</span> <span class="token string">&quot;((([0-9]{3}[1-9]|[0-9]{2}[1-9][0-9]{1}|[0-9]{1}[1-9][0-9]{2}|[1-9][0-9]{3})(((0[13578]|1[02])(0[1-9]|[12][0-9]|3[01]))|&quot;</span><span class="token operator">+</span>
<span class="token string">&quot;((0[469]|11)(0[1-9]|[12][0-9]|30))|(02(0[1-9]|[1][0-9]|2[0-8]))))|((([0-9]{2})(0[48]|[2468][048]|[13579][26])|((0[48]|[2468][048]|[3579][26])00))0229))&quot;</span><span class="token operator">+</span>
<span class="token string">&quot;([0-1][0-9]|2[0-3])([0-5][0-9])([0-5][0-9])$&quot;</span><span class="token punctuation">;</span>
 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span>timeRegex5<span class="token punctuation">,</span> <span class="token string">&quot;20181228162437&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="匹配格式-yyyymmddhhmmsssss" tabindex="-1"><a class="header-anchor" href="#匹配格式-yyyymmddhhmmsssss" aria-hidden="true">#</a> 匹配格式：yyyyMMddHHmmssSSS</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> timeRegex6 <span class="token operator">=</span> <span class="token string">&quot;((([0-9]{3}[1-9]|[0-9]{2}[1-9][0-9]{1}|[0-9]{1}[1-9][0-9]{2}|[1-9][0-9]{3})(((0[13578]|1[02])(0[1-9]|[12][0-9]|3[01]))|&quot;</span><span class="token operator">+</span>
<span class="token string">&quot;((0[469]|11)(0[1-9]|[12][0-9]|30))|(02(0[1-9]|[1][0-9]|2[0-8]))))|((([0-9]{2})(0[48]|[2468][048]|[13579][26])|&quot;</span><span class="token operator">+</span>
<span class="token string">&quot;((0[48]|[2468][048]|[3579][26])00))0229))([0-1][0-9]|2[0-3])([0-5][0-9])([0-5][0-9])([0-9]{3})$&quot;</span><span class="token punctuation">;</span>
 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span>timeRegex6<span class="token punctuation">,</span><span class="token string">&quot;20181227182439000&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="匹配格式-yyyymmdd-hh-mm-ss" tabindex="-1"><a class="header-anchor" href="#匹配格式-yyyymmdd-hh-mm-ss" aria-hidden="true">#</a> 匹配格式：yyyyMMdd HH:mm:ss</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> timeRegex7 <span class="token operator">=</span> <span class="token string">&quot;((([0-9]{3}[1-9]|[0-9]{2}[1-9][0-9]{1}|[0-9]{1}[1-9][0-9]{2}|[1-9][0-9]{3})(((0[13578]|1[02])(0[1-9]|[12][0-9]|3[01]))|&quot;</span><span class="token operator">+</span>
<span class="token string">&quot;((0[469]|11)(0[1-9]|[12][0-9]|30))|(02(0[1-9]|[1][0-9]|2[0-8]))))|((([0-9]{2})(0[48]|[2468][048]|[13579][26])|&quot;</span><span class="token operator">+</span>
<span class="token string">&quot;((0[48]|[2468][048]|[3579][26])00))0229))\\\\s([0-1][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])$&quot;</span><span class="token punctuation">;</span>
 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span>timeRegex7<span class="token punctuation">,</span> <span class="token string">&quot;20181227 07:20:36&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),o=[p];function c(i,l){return s(),a("div",null,o)}const d=n(e,[["render",c],["__file","java-time.html.vue"]]);export{d as default};
