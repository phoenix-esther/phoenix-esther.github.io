const n=JSON.parse('{"key":"v-1b991ef8","path":"/java/java-base/java-base.html","title":"Java 基础","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"深拷贝与浅拷贝","slug":"深拷贝与浅拷贝","link":"#深拷贝与浅拷贝","children":[]},{"level":2,"title":"this 与 类名.this的区别","slug":"this-与-类名-this的区别","link":"#this-与-类名-this的区别","children":[]},{"level":2,"title":"BigDecimal","slug":"bigdecimal","link":"#bigdecimal","children":[{"level":3,"title":"一：简介","slug":"一-简介","link":"#一-简介","children":[]},{"level":3,"title":"二：构造器方法","slug":"二-构造器方法","link":"#二-构造器方法","children":[]},{"level":3,"title":"三：方法","slug":"三-方法","link":"#三-方法","children":[]},{"level":3,"title":"四：常用方法","slug":"四-常用方法","link":"#四-常用方法","children":[]}]}],"git":{"createdTime":1653110166000,"updatedTime":1660123310000,"contributors":[{"name":"xuliang","email":"895252461@qq.com","commits":2},{"name":"诗人都藏在水底","email":"895252461@qq.com","commits":1}]},"readingTime":{"minutes":7.19,"words":2158},"localizedDate":"2022年5月21日","filePathRelative":"java/java-base/java-base.md","excerpt":"<h1> Java 基础</h1>\\n<h2> 深拷贝与浅拷贝</h2>\\n<p>一句话，深拷贝是值传递，浅拷贝是引用传递。</p>\\n<h2> this 与 类名.this的区别</h2>\\n<ul>\\n<li>this： 是指当前这段代码所在的类的对象</li>\\n<li>类名.this：是指类名的对象，一般用在匿名类或内部类中使用，用来调用外部类的方法和属性的</li>\\n</ul>\\n<p>下面给出一个例子：</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">A</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> method（）<span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">A</span><span class=\\"token punctuation\\">.</span><span class=\\"token keyword\\">this</span>  <span class=\\"token comment\\">//这里的\\"A.this\\"就是表示类\\"A\\"的对象。。在这种情况下\\"A.this\\"和\\"this\\"是一样的</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">class</span>  <span class=\\"token class-name\\">B</span> <span class=\\"token punctuation\\">{</span>  \\n        <span class=\\"token comment\\">// \\"class A\\"中的一个内部类\\"B\\"(内部类也可以是使用关键字\\"new\\" 所新实例出来的一个匿名类或者接口,</span>\\n        <span class=\\"token comment\\">// 比如\\"new OnClickListener()\\")</span>\\n        <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">method1</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token comment\\">// 这里的\\"A.this\\"还是表示类\\"A\\"的对象。。但是这里是在内部类里面。。</span>\\n            <span class=\\"token comment\\">// 所以这里如果使用的是\\"this\\"那就是内部类B的对象了。。</span>\\n            <span class=\\"token comment\\">// 但是我们经常会在内部类里面调用外部的东西。。所以就用\\"A.this\\"这种方式就行了</span>\\n            <span class=\\"token class-name\\">A</span><span class=\\"token punctuation\\">.</span><span class=\\"token keyword\\">this</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{n as data};
