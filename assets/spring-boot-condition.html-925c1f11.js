import{_ as n,V as a,W as s,a0 as e}from"./framework-5dde3bca.js";const t={},i=e(`<h1 id="spring-boot-条件装配" tabindex="-1"><a class="header-anchor" href="#spring-boot-条件装配" aria-hidden="true">#</a> Spring Boot 条件装配</h1><h2 id="spring中的条件装配" tabindex="-1"><a class="header-anchor" href="#spring中的条件装配" aria-hidden="true">#</a> Spring中的条件装配</h2><p>条件装配在Spring中就已经定义过，但是应用不是很广泛，下面来看看Condition的定义：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Condition</span> <span class="token punctuation">{</span>

	<span class="token keyword">boolean</span> <span class="token function">matches</span><span class="token punctuation">(</span><span class="token class-name">ConditionContext</span> context<span class="token punctuation">,</span> <span class="token class-name">AnnotatedTypeMetadata</span> metadata<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="springbootcondition" tabindex="-1"><a class="header-anchor" href="#springbootcondition" aria-hidden="true">#</a> SpringBootCondition</h2><p>下面来看看<code>SpringBootCondition</code>源码：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,7),o=[i];function c(d,r){return a(),s("div",null,o)}const l=n(t,[["render",c],["__file","spring-boot-condition.html.vue"]]);export{l as default};
