const a=JSON.parse('{"key":"v-2e78d66a","path":"/spring/spring-framework/spring-starting/bean-factory-post-processor.html","title":"Spring BeanFactoryPostProcessor","lang":"zh-CN","frontmatter":{},"headers":[{"level":3,"title":"4. 扩展点：postProcessBeanFactory(beanFactory)","slug":"_4-扩展点-postprocessbeanfactory-beanfactory","link":"#_4-扩展点-postprocessbeanfactory-beanfactory","children":[]},{"level":3,"title":"5. 执行 BeanFactoryPostProcessors: invokeBeanFactoryPostProcessors(beanFactory)","slug":"_5-执行-beanfactorypostprocessors-invokebeanfactorypostprocessors-beanfactory","link":"#_5-执行-beanfactorypostprocessors-invokebeanfactorypostprocessors-beanfactory","children":[]}],"git":{"createdTime":1697974777000,"updatedTime":1697974777000,"contributors":[{"name":"xuliang","email":"895252461@qq.com","commits":1}]},"readingTime":{"minutes":9.76,"words":2927},"filePathRelative":"spring/spring-framework/spring-starting/bean-factory-post-processor.md","localizedDate":"2023年10月22日","excerpt":"<h1> Spring BeanFactoryPostProcessor</h1>\\n<p></p>\\n<p>接上文，我们继续分析。</p>\\n<h3> 4. 扩展点：<code>postProcessBeanFactory(beanFactory)</code></h3>\\n<p>这个类是 spring 提供的扩展点，本身并无任何功能，留待子类实现，<code>AbstractApplicationContext</code> 的 <code>postProcessBeanFactory</code> 方法代码如下：</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code>    <span class=\\"token keyword\\">protected</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">postProcessBeanFactory</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">ConfigurableListableBeanFactory</span> beanFactory<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{a as data};
