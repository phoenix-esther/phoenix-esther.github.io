import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as P,c as o,e as i}from"./app-e53dd85b.js";const r="/assets/577d68eff95429bda925766e6d3ed65a-a2b735bd.png",a="/assets/7799833efb2d5653ce3378d95402491e-1af39903.png",t={},l=i('<h1 id="计算机网络" tabindex="-1"><a class="header-anchor" href="#计算机网络" aria-hidden="true">#</a> 计算机网络</h1><h2 id="一、网路模型" tabindex="-1"><a class="header-anchor" href="#一、网路模型" aria-hidden="true">#</a> 一、网路模型</h2><h3 id="_1-1-osi网络模型" tabindex="-1"><a class="header-anchor" href="#_1-1-osi网络模型" aria-hidden="true">#</a> 1.1 OSI网络模型</h3><p>OSI 模型（Open System Interconnection Model）是一个由国际标准化组织（ISO）提出的概念模型，试图提供一个使各种不同的计算机和网络在世界范围内实现互联的标准框架。</p><p>它将计算机网络体系结构划分为七层，每层都可以提供抽象良好的接口。了解 OSI 模型有助于理解实际上互联网络的工业标准——TCP/IP 协议。</p><p>OSI 模型各层间关系和通讯时的数据流向如图所示：</p><p><img src="'+r+'" alt="img"></p><p>显然，如果一个东西想包罗万象、一般是不可能的；在实际的开发应用中一般是在此模型的基础上进行裁剪、整合！</p><h3 id="_1-2-七层模型介绍" tabindex="-1"><a class="header-anchor" href="#_1-2-七层模型介绍" aria-hidden="true">#</a> 1.2 七层模型介绍</h3><p>互联网分层结构的好处：上层的变动完全不影响下层的结构。</p><p><img src="'+a+'" alt="img"></p><h3 id="_1-3-七层模型小结" tabindex="-1"><a class="header-anchor" href="#_1-3-七层模型小结" aria-hidden="true">#</a> 1.3 七层模型小结</h3><p>由于OSI是一个理想的模型，因此一般网络系统只涉及其中的几层，很少有系统能够具有所有的7层，并完全遵循它的规定。 在7层模型中，每一层都提供一个特殊的网络功能。从网络功能的角度观察：下面4层（物理层、数据链路层、网络层和传输层）主要提供数据传输和交换功能，即以节点到节点之间的通信为主；第4层作为上下两部分的桥梁，是整个网络体系结构中最关键的部分；而上3层（会话层、表示层和应用层）则以提供用户与应用程序之间的信息和数据处理功能为主。简言之，下4层主要完成通信子网的功能，上3层主要完成资源子网的功能。</p><h3 id="_1-4-tcp-ip分层模型" tabindex="-1"><a class="header-anchor" href="#_1-4-tcp-ip分层模型" aria-hidden="true">#</a> 1.4 TCP/IP分层模型</h3><p>┌────------────┐ ┌─┬─┬─-┬─┬─-┬─┬─-┬─┬─-┬─┬─-┐ 　　│　　　　　　　　││Ｄ│Ｆ│Ｗ│Ｆ│Ｈ│Ｇ│Ｔ│Ｉ│Ｓ│Ｕ│　│ 　　│　　　　　　　　││Ｎ│Ｉ│Ｈ│Ｔ│Ｔ│Ｏ│Ｅ│Ｒ│Ｍ│Ｓ│其│ 　　│第四层－应用层　││Ｓ│Ｎ│Ｏ│Ｐ│Ｔ│Ｐ│Ｌ│Ｃ│Ｔ│Ｅ│　│ 　　│　　　　　　　　││　│Ｇ│Ｉ│　│Ｐ│Ｈ│Ｎ│　│Ｐ│Ｎ│　│ 　　│　　　　　　　　││　│Ｅ│Ｓ│　│　│Ｅ│Ｅ│　│　│Ｅ│它│ 　　│　　　　　　　　││　│Ｒ│　│　│　│Ｒ│Ｔ│　│　│Ｔ│　│ 　　└───────------─┘└─┴─┴─-┴─┴─-┴─┴─-┴─┴─-┴─┴-─┘ 　　┌───────-----─┐┌─────────-------┬──--------─────────┐ 　　│第三层－传输层　││　　　ＴＣＰ　　　│　　　　ＵＤＰ　　　│ 　　└───────-----─┘└────────-------─┴──────────--------─┘ 　　┌───────-----─┐┌───----──┬───---─┬────────-------──┐ 　　│　　　　　　　　││　　　　　│ＩＣＭＰ│　　　　　　　　　│ 　　│第二层－网间层　││　　　　　└──---──┘　　　　　　　　　│ 　　│　　　　　　　　││　　　　　　　ＩＰ　　　　　　　　　　 │ 　　└────────-----┘└────────────────────-------------─-┘ 　　┌────────-----┐┌─────────-------┬──────--------─────┐ 　　│第一层－网络接口││ＡＲＰ／ＲＡＲＰ　│　　　　其它　　　　│ 　　└────────------┘└─────────------┴─────--------──────┘ 　　　　　　 TCP/IP四层参考模型</p><h3 id="_1-5-四层模型介绍" tabindex="-1"><a class="header-anchor" href="#_1-5-四层模型介绍" aria-hidden="true">#</a> 1.5 四层模型介绍</h3><p>TCP/IP协议被组织成四个概念层，其中有三层对应于ISO参考模型中的相应层。ICP/IP协议族并不包含物理层和数据链路层，因此它不能独立完成整个计算机网络系统的功能，必须与许多其他的协议协同工作。 TCP/IP分层模型的四个协议层分别完成以下的功能： 第一层：网络接口层 　　包括用于协作IP数据在已有网络介质上传输的协议。实际上TCP/IP标准并不定义与ISO数据链路层和物理层相对应的功能。相反，它定义像地址解析协议（Address Resolution Protocol，ARP）这样的协议，提供TCP/IP协议的数据结构和实际物理硬件之间的接口。 第二层：网间层 　　对应于OSI七层参考模型的网络层。本层包含IP协议、RIP协议（Routing Information Protocol，路由信息协议)，负责数据的包装、寻址和路由。同时还包含网间控制报文协议（Internet Control Message Protocol，ICMP）用来提供网络诊断信息。 第三层：传输层 　　对应于OSI七层参考模型的传输层，它提供两种端到端的通信服务。其中TCP协议（Transmission Control Protocol）提供可靠的数据流运输服务，UDP协议（User Datagram Protocol）提供不可靠的用户数据报服务。 第四层：应用层 　　对应于OSI七层参考模型的应用层和表示层。因特网的应用层协议包括Finger、Whois、FTP（文件传输协议）、Gopher、HTTP（超文本传输协议）、Telent（远程终端协议）、SMTP（简单邮件传送协议）、IRC（因特网中继会话）、NNTP（网络新闻传输协议）等。</p><h3 id="_1-6-tcp-ip-协议族常用协议" tabindex="-1"><a class="header-anchor" href="#_1-6-tcp-ip-协议族常用协议" aria-hidden="true">#</a> 1.6 TCP/IP 协议族常用协议</h3><p>应用层：TFTP，HTTP，SNMP，FTP，SMTP，DNS，Telnet 等等。</p><p>传输层：TCP，UDP。</p><p>网络层：IP，ICMP，OSPF，EIGRP，IGMP。</p><p>数据链路层：SLIP，CSLIP，PPP，MTU。</p><p>重要的 TCP/IP 协议族协议介绍如下：</p><ul><li><p>IP（Internet Protocol，网际协议）是网间层的主要协议，任务是在源地址和和目的地址之间传输数据。IP 协议只是尽最大努力来传输数据包，并不保证所有的包都可以传输到目的地，也不保证数据包的顺序和唯一。</p></li><li><p>IP 定义了 TCP/IP 的地址，寻址方法，以及路由规则。现在广泛使用的 IP 协议有 IPv4 和 IPv6 两种：IPv4 使用 32 位二进制整数做地址，一般使用点分十进制方式表示，比如 192.168.0.1。</p><ul><li>IP 地址由两部分组成，即网络号和主机号。故一个完整的 IPv4 地址往往表示为 192.168.0.1/24 或 192.168.0.1/255.255.255.0 这种形式。</li><li>IPv6 是为了解决 IPv4 地址耗尽和其它一些问题而研发的最新版本的 IP。使用 128 位整数表示地址，通常使用冒号分隔的十六进制来表示，并且可以省略其中一串连续的 0，如 fe80::200:1ff:fe00:1。目前使用并不多！</li><li>ICMP（Internet Control Message Protocol，网络控制消息协议）是 TCP/IP 的核心协议之一,用于在 IP 网络中发送控制消息，提供通信过程中的各种问题反馈。ICMP 直接使用 IP 数据包传输，但 ICMP 并不被视为 IP 协议的子协议。常见的联网状态诊断工具依赖于 ICMP 协议。</li></ul></li><li><p>TCP（Transmission Control Protocol，传输控制协议）是一种面向连接的，可靠的，基于字节流传输的通信协议。TCP 具有端口号的概念，用来标识同一个地址上的不同应用。</p></li><li><p>UDP（User Datagram Protocol，用户数据报协议）是一个面向数据报的传输层协议。UDP 的传输是不可靠的，简单的说就是发了不管，发送者不会知道目标地址的数据通路是否发生拥塞，也不知道数据是否到达，是否完整以及是否还是原来的次序。它同 TCP 一样有用来标识本地应用的端口号。所以应用 UDP 的应用，都能够容忍一定数量的错误和丢包，但是对传输性能敏感，比如流媒体、DNS 等。</p></li><li><p>ECHO（Echo Protocol，回声协议）是一个简单的调试和检测工具。服务器会原样回发它收到的任何数据，既可以使用 TCP 传输，也可以使用 UDP 传输。端口号为 7 。</p></li><li><p>DHCP（Dynamic Host Configration Protocol，动态主机配置协议）是用于局域网自动分配 IP 地址和主机配置的协议，可以使局域网的部署更加简单。</p></li><li><p>DNS（Domain Name System，域名系统）是互联网的一项服务，可以简单的将用“.”分隔的一般会有意义的域名转换成不易记忆的 IP 地址。一般使用 UDP 协议传输，也可以使用 TCP，默认服务端口号为53。</p></li><li><p>FTP（File Transfer Protocol，文件传输协议）是用来进行文件传输的标准协议。FTP 基于 TCP，使用端口号 20 来传输数据，21 来传输控制信息。</p></li><li><p>TFTP（Trivial File Transfer Protocol，简单文件传输协议）是一个简化的文件传输协议，其设计非常简单，通过少量存储器就能轻松实现，所以一般被用来通过网络传输小文件。</p></li><li><p>SSH（Secure Shell，安全Shell），因为传统的网络服务程序比如TELNET本质上都极不安全，明文传输数据和用户信息包括密码。SSH 被开发出来避免这些问题，它其实是一个协议框架，有大量的扩展冗余能力，并且提供了加密压缩的通道可以为其他协议使用。</p></li><li><p>POP（Post Office Protocol，邮局协议）是支持通过客户端访问电子邮件的服务，现在版本是 POP3，也有加密的版本 POP3S。协议使用 TCP，端口为 110。</p></li><li><p>SMTP（Simple Mail Transfer Protocol，简单邮件传输协议）是现在在互联网上发送电子邮件的事实标准。使用 TCP 协议传输，端口号为 25。</p></li><li><p>HTTP（Hyper Text Transfer Protocol，超文本传输协议）是现在广为流行的 WEB 网络的基础，HTTPS 是 HTTP 的加密安全版本。协议通过 TCP 传输，HTTP 默认使用端口 80，HTTPS 使用 443。</p></li></ul>',24),n=[l];function p(s,c){return P(),o("div",null,n)}const h=e(t,[["render",p],["__file","network.html.vue"]]);export{h as default};
