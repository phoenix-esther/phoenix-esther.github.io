const n=JSON.parse('{"key":"v-6ce34054","path":"/java/java-base/java-enum.html","title":"深入理解Java枚举类型(enum)","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"一、理解枚举类型","slug":"一、理解枚举类型","link":"#一、理解枚举类型","children":[{"level":3,"title":"1.1 枚举的定义","slug":"_1-1-枚举的定义","link":"#_1-1-枚举的定义","children":[]},{"level":3,"title":"1.2 枚举实现原理","slug":"_1-2-枚举实现原理","link":"#_1-2-枚举实现原理","children":[]},{"level":3,"title":"1.3 枚举的常见方法","slug":"_1-3-枚举的常见方法","link":"#_1-3-枚举的常见方法","children":[]}]},{"level":2,"title":"二、枚举与Class对象","slug":"二、枚举与class对象","link":"#二、枚举与class对象","children":[]},{"level":2,"title":"三、枚举的进阶用法","slug":"三、枚举的进阶用法","link":"#三、枚举的进阶用法","children":[{"level":3,"title":"3.1 向enum类添加方法与自定义构造函数","slug":"_3-1-向enum类添加方法与自定义构造函数","link":"#_3-1-向enum类添加方法与自定义构造函数","children":[]},{"level":3,"title":"3.2 关于覆盖enum类方法","slug":"_3-2-关于覆盖enum类方法","link":"#_3-2-关于覆盖enum类方法","children":[]},{"level":3,"title":"3.3 enum类中定义抽象方法","slug":"_3-3-enum类中定义抽象方法","link":"#_3-3-enum类中定义抽象方法","children":[]},{"level":3,"title":"3.4 enum类与接口","slug":"_3-4-enum类与接口","link":"#_3-4-enum类与接口","children":[]}]},{"level":2,"title":"四、枚举与switch","slug":"四、枚举与switch","link":"#四、枚举与switch","children":[]},{"level":2,"title":"五、枚举与单例模式","slug":"五、枚举与单例模式","link":"#五、枚举与单例模式","children":[]},{"level":2,"title":"六、EnumMap","slug":"六、enummap","link":"#六、enummap","children":[{"level":3,"title":"6.1 EnumMap基本用法","slug":"_6-1-enummap基本用法","link":"#_6-1-enummap基本用法","children":[]},{"level":3,"title":"6.2 EnumMap实现原理剖析","slug":"_6-2-enummap实现原理剖析","link":"#_6-2-enummap实现原理剖析","children":[]}]},{"level":2,"title":"七、EnumSet","slug":"七、enumset","link":"#七、enumset","children":[{"level":3,"title":"7.1 EnumSet用法","slug":"_7-1-enumset用法","link":"#_7-1-enumset用法","children":[]},{"level":3,"title":"7.2 EnumSet实现原理剖析","slug":"_7-2-enumset实现原理剖析","link":"#_7-2-enumset实现原理剖析","children":[]}]}],"git":{"createdTime":1695558165000,"updatedTime":1697101733000,"contributors":[{"name":"xuliang","email":"895252461@qq.com","commits":2},{"name":"诗人都藏在水底","email":"895252461@qq.com","commits":1}]},"readingTime":{"minutes":52.73,"words":15820},"filePathRelative":"java/java-base/java-enum.md","localizedDate":"2023年9月24日","excerpt":"<h1> 深入理解Java枚举类型(enum)</h1>\\n<h2> 一、理解枚举类型</h2>\\n<p>枚举类型是Java 5中新增特性的一部分，它是一种特殊的数据类型，之所以特殊是因为它既是一种类(class)类型却又比类类型多了些特殊的约束，但是这些约束的存在也造就了枚举类型的简洁性、安全性以及便捷性。下面先来看看什么是枚举？如何定义枚举？</p>\\n<h3> 1.1 枚举的定义</h3>\\n<p>回忆一下下面的程序，这是在没有枚举类型时定义常量常见的方式</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token doc-comment comment\\">/**\\n * 使用普通方式定义日期常量\\n */</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">DayDemo</span> <span class=\\"token punctuation\\">{</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">final</span> <span class=\\"token keyword\\">int</span> <span class=\\"token constant\\">MONDAY</span> <span class=\\"token operator\\">=</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">final</span> <span class=\\"token keyword\\">int</span> <span class=\\"token constant\\">TUESDAY</span><span class=\\"token operator\\">=</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">final</span> <span class=\\"token keyword\\">int</span> <span class=\\"token constant\\">WEDNESDAY</span><span class=\\"token operator\\">=</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">final</span> <span class=\\"token keyword\\">int</span> <span class=\\"token constant\\">THURSDAY</span><span class=\\"token operator\\">=</span><span class=\\"token number\\">4</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">final</span> <span class=\\"token keyword\\">int</span> <span class=\\"token constant\\">FRIDAY</span><span class=\\"token operator\\">=</span><span class=\\"token number\\">5</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">final</span> <span class=\\"token keyword\\">int</span> <span class=\\"token constant\\">SATURDAY</span><span class=\\"token operator\\">=</span><span class=\\"token number\\">6</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">final</span> <span class=\\"token keyword\\">int</span> <span class=\\"token constant\\">SUNDAY</span><span class=\\"token operator\\">=</span><span class=\\"token number\\">7</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{n as data};
