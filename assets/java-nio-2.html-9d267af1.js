const e=JSON.parse('{"key":"v-788a510e","path":"/java/java-io/java-nio-2.html","title":"NIO - Buffer核心原理","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"Buffer","slug":"buffer","link":"#buffer","children":[]},{"level":2,"title":"Buffer 方法","slug":"buffer-方法","link":"#buffer-方法","children":[{"level":3,"title":"allocate()","slug":"allocate","link":"#allocate","children":[]},{"level":3,"title":"put()","slug":"put","link":"#put","children":[]},{"level":3,"title":"flip()","slug":"flip","link":"#flip","children":[]},{"level":3,"title":"get()","slug":"get","link":"#get","children":[]},{"level":3,"title":"rewind()","slug":"rewind","link":"#rewind","children":[]},{"level":3,"title":"clear() 和 compact()","slug":"clear-和-compact","link":"#clear-和-compact","children":[]},{"level":3,"title":"mark() 和 reset()","slug":"mark-和-reset","link":"#mark-和-reset","children":[]}]},{"level":2,"title":"Buffer 的类型","slug":"buffer-的类型","link":"#buffer-的类型","children":[]}],"git":{"createdTime":1716801999000,"updatedTime":1716801999000,"contributors":[{"name":"诗人都藏在水底","email":"895252461@qq.com","commits":1}]},"readingTime":{"minutes":8.41,"words":2523},"filePathRelative":"java/java-io/java-nio-2.md","localizedDate":"2024年5月27日","excerpt":"<h1> NIO - Buffer核心原理</h1>\\n<p>大家好，我是大明哥，今天我们来看看 Buffer。</p>\\n<p></p>\\n<p>上面几篇文章详细介绍了 IO 相关的一些基本概念，如阻塞、非阻塞、同步、异步的区别，Reactor 模式、Proactor 模式。以下是这几篇文章的链接，有兴趣的同学可以阅读下：</p>\\n<ul>\\n<li><a href=\\"https://www.skjava.com/series/article/7825517347\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">【死磕NIO】— 阻塞、非阻塞、同步、异步，傻傻分不清楚</a></li>\\n<li><a href=\\"https://www.skjava.com/series/article/2218162706\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">【死磕NIO】— 阻塞IO，非阻塞IO，IO复用，信号驱动IO，异步IO，这你真的分的清楚吗？</a></li>\\n<li><a href=\\"https://www.skjava.com/series/article/4295744090\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">【死磕 NIO】— Reactor 模式就一定意味着高性能吗？</a></li>\\n<li><a href=\\"https://www.skjava.com/series/article/2128121655\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">【死磕 NIO】— Proactor模式是什么？很牛逼吗？</a></li>\\n</ul>"}');export{e as data};
