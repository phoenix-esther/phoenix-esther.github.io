const e=JSON.parse('{"key":"v-6ae38c16","path":"/java/java-io/java-nio-6.html","title":"NIO - ServerSocketChannel的缺陷？","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"阻塞模式","slug":"阻塞模式","link":"#阻塞模式","children":[]},{"level":2,"title":"非阻塞模式","slug":"非阻塞模式","link":"#非阻塞模式","children":[]}],"git":{"createdTime":1716801999000,"updatedTime":1716801999000,"contributors":[{"name":"诗人都藏在水底","email":"895252461@qq.com","commits":1}]},"readingTime":{"minutes":3.73,"words":1118},"filePathRelative":"java/java-io/java-nio-6.md","localizedDate":"2024年5月27日","excerpt":"<h1> NIO - ServerSocketChannel的缺陷？</h1>\\n<p>上篇文章大明哥介绍了 SocketChannel 的核心原理及其源码，这篇文章就来介绍如何使用 ServerSocketChannel，分析单独使用 ServerSocketChannel 存在哪些问题。</p>\\n<p></p>\\n<h2> 阻塞模式</h2>\\n<p>我们先看服务端方法：</p>\\n<div class=\\"language-Java line-numbers-mode\\" data-ext=\\"Java\\"><pre class=\\"language-Java\\"><code>public static void main(String[] args) throws Exception {\\n    ByteBuffer buffer = ByteBuffer.allocate(100);\\n    ServerSocketChannel serverSocket = ServerSocketChannel.open()\\n    serverSocket.bind(new InetSocketAddress(8080));\\n    List&lt;SocketChannel&gt; channels = new ArrayList&lt;&gt;();\\n    while(true) {\\n        SocketChannel sc = serverSocket.accept();\\n        channels.add(sc);\\n\\n        for (SocketChannel asc :channels) {\\n            asc.read(buffer);\\n            buffer.flip();\\n            ByteBufferUtil.debugAll(buffer);\\n            buffer.clear();\\n        }\\n    }\\n}\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{e as data};
